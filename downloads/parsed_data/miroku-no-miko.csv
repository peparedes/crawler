"names","values"
"itemid","171"
"event","This journal is now

<a href=""http://pics.livejournal.com/miroku_no_miko/pic/00001ryz/""><img src=""http://pics.livejournal.com/miroku_no_miko/pic/00001ryz/s320x240"" width=""320"" height=""194"" border='0'/></a>

If you want me to add you, you have to, of course, add me first. It would also help if you tell me how you found my journal. It's not necessary to share common interests, because meeting people who are into different things is always fun. :)

Oh, and the FO banner was made by <lj user=lavender_tea>.

With that, if you'd like to be added, comment away. &hearts;

And here: 

http://www.mediafire.com/?0u9zq11xeyj

is the link to my playlist. I had to upload it, 'cause it's disgustingly large. But all you have to do is click on it and then click 'open' if you don't want to download it. :D Feel free to request anything you'd like, I'm very generous with my music."
"eventtime","2015-11-21 22:16:00"
"current_moodid","31"
"url","http://miroku-no-miko.livejournal.com/43830.html"
"userid","10108"
"itemid","326"
"event","<lj-phonepost journalid='6240566' dpid='285' />"
"eventtime","2008-10-16 21:53:00"
"url","http://miroku-no-miko.livejournal.com/83549.html"
"userid","10108"
"itemid","308"
"event","...

I've been doing a lot of thinking lately. Maybe a little too much. But I've gotten to the point where I just need to do something.

I've realized that maybe...just maybe...I've been so depressed because of the one thing that I've been hiding for so long. The one thing I haven't been able to tell anybody because I'm afraid of what it'll make people think about me. I've told a few people, but not nearly enough to feel cleared of this. I need to get it out for the sole purpose of getting it off my chest. So I'm going to tell my story. 

And I'm hoping I'll feel better once it's out. 

Just keep in mind that I think this story will explain a lot -- explain why I'm the way I am, why I do the things I do, why I act a certain way. We'll just have to see about that, I guess...

<lj-cut text=""Cut for length."">

When I was 12 years old, I was in love (or...what I thought was love) with a 21-year-old man. This man was the older brother of one of my best friends. I had always spent a lot of time with him -- whenever I would go to my friends house, he'd always be around, because he watched her after school due to their parents working late. He lived elsewhere, though -- he had an apartment somewhere in New York State. The name of the town escapes me.

His name is unimportant, but for the purpose of the story, we'll just call him Jason. (I don't actually *know* anybody named Jason, I just needed a name.)

Jason was always really good to me. He was a better friend to me than my best friend ever was. He was always there when I needed somebody to talk to. (Not like there were many instances of this. I mean, what possible problems could a 12 year old have?) I had known him for some time -- we met for the first time when I was 9 or 10, around the same time I had first met my friend, whom we'll call Marisa. I had spent a lot of time with him. He'd bring me and Marisa to his apartment for sleepovers on weekends when their parents were out of town. He'd bring me and Marisa to various places -- arcades, malls, sporting events -- and I had always felt some sort of really weird connection between us. My parents were totally fine with me spending so much time with him -- I had never had siblings, so they thought it was really good that I had an ""older brother"" figure in my life. At least...THEY saw him as an older brother figure. I viewed him a little differently.

I was never able to explain our connection --  but he was a gorgeous human being -- even my tiny 12 year old brain could see that. And I loved every minute I spent with him.

On one particular weekend when I was 12, Jason had told me that his parents were once again going to be out of town, and he would be bringing his siter to his apartment for the weekend. I was once again invited, and, of course, I couldn't say no.

Jason had come to pick me up at around 5 PM, explaining to me that we were going straight to his apartment, and his parents would be dropping off his sister later that night. I thought this was a little strange, as the three of us had always gone over there together, but I had NO objections to spending a little bit of alone time with him. I was ""in love"" with him, after all.

He said he had a few activities planned for us. I was confused, and when I asked what sort of things we'd be doing, he said that we'd be spending time at an arcade to pass the time so I wouldn't be bored at his apartment until Marisa got there. I told him I didn't have any money, but he said it was his treat -- who was I to turn down free video games? 

Before I knew it, it was 9 PM. We were still at the arcade, and I was starting to wonder when I was going to get to see my friend. I was starting to get a little suspicious, I may have been young and stupid but I still knew something was up. I questioned Jason, asking when my friend was getting there, and he said she should be arriving at his apartment soon, and with that, we left the arcade.

It was only a five minute drive back to his apartment. When we arrived, we didn't do much. I just kind of sat there, waiting for Marisa, whom I was starting to think would never show up. 

I questioned Jason about it again. And the response:

""Oh, my parents just called. There's been a change of plans...they're staying in town, Marisa's not coming. I'll bring you home in the morning, okay kiddo?""

Now I was uncomfortable. As much as I loved this alone time with Jason, if Marisa wasn't coming it wasn't worth it. Why would he have kept me here if his sister wasn't coming. And besides -- I hadn't even heard the phone ring. Did he have this planned all along? And why?

I quickly shrugged off my discomfort and just nodded. I told him that I'd actually just really like to go to sleep, then, since there was clearly nothing for me to do without my friend. He asked me if I would like a drink of water before bed. I said yes -- my worry had made my throat dry.

He came back a moment later with a tall glass of cold water, and I then layed down on the couch, where I normally slept when I spent the night there. I fell asleep rather quickly -- I must have been more exhausted than I had originally thought. 

I awoke a few hours later, thirsty again. And I was shocked to see Jason still sitting next to the couch...watching me...

I was a little creeped out. What normal 21 year old man watches a 12 year old girl sleep? I asked for another glass of water -- I doubted it would help me sleep, but I needed to get the dryness out of my throat. He handed me the glass, and I gulped it down quickly. I handed the empty glass to him and attempted to go sleep again, but I couldn't, knowing that he was sitting right there watching me.

It didn't take very long for me to start feeling a little woozy. Even though I was laying down, it felt like the room was spinning. I sat up, trying to see if the spinning would stop from a different angle, but felt no different. I couldn't stay there anymore. I needed to go home.

""Jason, I'm not feeling very well. Can you please bring me home?""

""Aww, kiddo, it's 2 in the morning. I'll bring you home in the morning, I promise.""

""No, Jason, I'd really like to go home now.""

I stood up to protest some more, but my dizziness brought me right back down. My vision was getting blurrier, and I felt very faint. Taking a quick glance over at Jason, I was confused by his reaction. He seemed almost pleased that I was falling over myself. 

I soon felt myself being swept off the couch. Jason was carrying me somewhere. Where, I couldn't tell.

I felt him put me down on a soft surface -- what I only assumed was a bed. He had brought me to his bedroom.

I was even more confused now. What was I doing in his bedroom? Why had he brought me here? The couch was a perfectly adequate place for me to sleep.

Before I knew what was going on, I saw him over me.

That's the last thing I remember.

I woke up the next morning really sore. And really confused. I had no idea what had happened to me. How had I ended up in Jason's bedroom? Why was I so sore? What had happened to me?

I looked over to find that he was still watching me.

He brought me home. As promised. 

I didn't tell my parents...or Marisa...about what had happened. I didn't even fully understand it myself. How was I supposed to explain it myself?

From that day on, I had nightmares. Every time I closed my eyes, all I saw was Jason over me. The nightmares started off rather infrequent...but when I had finally realized what had happened -- that I had been raped -- the nightmares occurred more often. Every night, to be exact.

I still have the nightmares. Seven years later.

It's because of him that I don't trust anyone. Especially guys. He's the reason that I can't go anywhere past making out with someone before feeling really uncomfortable and having to stop. As soon as I'm touched in a particular way, it doesn't matter who I'm with -- all I see is Jason.

And it scares me.

But I'm trying to work through it. I'm trying, more than ever now, to just put the incident behind me and realize that I shouldn't feel so guilty. It wasn't my fault.

I never reported him. There was no need to. I found out six months later that he had killed himself. Why...nobody really ever knew. I'm assuming it was guilt. I haven't spoken to Marisa OR anyone in her family since the incident. I don't know where she is nor what she's doing with her life. And I really can't find it within me to care.

</lj-cut>

...I'm not going to lie, writing that took me a REALLY long time, and now I'm kind of emotional. It always hurts me to think about it. But then again...I think it was hurting me more to hold it back.

It feels good to get it out. So I'm leaving this entry unlocked. I think people should know this story. I don't know why, it's just how I feel.

I'm thinking it explains a few things. Not everything...but those are other stories. Not appropriate for me to tell right now.

And even though I'm kind of emotional right now after telling you guys that story...I feel like a huge weight has been lifted off my shoulders. Maybe now that it's out...things'll start to change.

We'll have to see."
"eventtime","2008-05-03 18:38:00"
"current_moodid","7"
"url","http://miroku-no-miko.livejournal.com/79095.html"
"userid","10108"
"itemid","240"
"event",""
"eventtime","2007-11-21 21:25:00"
"current_moodid","59"
"url","http://miroku-no-miko.livejournal.com/61625.html"
"userid","10108"
"itemid","221"
"event","Public entry, just because this needs to be seen.

Dear LJ,

STOP BANNING HARRY POTTER FANARTISTS.

In case you weren't aware, as of the epilogue of the 7th Harry Potter book, <i>Harry Potter and the Deathly Hallows</i>, Harry is 36 years old. THIRTY-SIX. That's DOUBLE the legal age in the United States. As of the epilogue of book 7, any situation we put Harry in is LEGAL.

kthxdie.

No love,
Me

----

Completely unrelated, but A-Rod just hit his 500th home run. Go Yankees. :)"
"eventtime","2007-08-04 13:30:00"
"current_moodid","24"
"url","http://miroku-no-miko.livejournal.com/56612.html"
"userid","10108"
"itemid","183"
"event","Dear Friends:

When you can (a) get along with each other, (b) stop taking everything so goddamn personally, (c) stop acting like the whole world revolves around you, or (d) all of the above

CAN YOU PLEASE LET ME KNOW?

kthxbye."
"eventtime","2006-11-28 00:00:00"
"current_moodid","7"
"url","http://miroku-no-miko.livejournal.com/47056.html"
"userid","10108"
"itemid","165"
"event","Dear Mel Brooks,

You are an absolute genius, and I love you. Please, if possible, come up with something even better than The Producers so I can laugh even harder. Thank you.

Love, 
Me.

---

I so want to see The Producers on Broadway now. XD"
"eventtime","2006-08-09 23:02:00"
"current_moodid","15"
"url","http://miroku-no-miko.livejournal.com/42471.html"
"userid","10108"
"itemid","147"
"event",""
"eventtime","2006-05-27 17:50:00"
"current_moodid","31"
"url","http://miroku-no-miko.livejournal.com/37803.html"
"userid","10108"
"itemid","146"
"event",""
"eventtime","2006-05-27 17:45:00"
"current_moodid","31"
"url","http://miroku-no-miko.livejournal.com/37426.html"
"userid","10108"
