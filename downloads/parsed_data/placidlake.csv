"names","values"
"itemid","3"
"event","PGI+VGl0bGU6PC9iPiAgRXBpc29kZSBHdWlkZSAtIFRoZSBGYWxsIFNlc3Npb24gLSAgUGFydCBPbmU6IE91ciBCZWdpbm5pbmcsIFdpbGwgSXQgRW5kPw0KPGI+QXV0aG9yOjwvYj4gIEF1c3NpZSBDaGljayBGYW4gYWthIEF1c3NpZUNoaWNrIGFrYSBnb2RnYWxlc2hvdCBha2EgRGFyayBFbmlnbWENCjxiPkVtYWlsOiA8L2I+IHBpa2UwM0BpcHJpbXVzLmNvbS5hdQ0KPGI+UmF0aW5nOiA8L2I+IFBHLTEzLCBidXQgaXQgd2lsbCBoYXZlIGEgYml0IG9mIHNleCBpbiBsYXRlciBwYXJ0cyENCjxiPkNhdGVnb3J5OjwvYj4gIEV2ZXJ5IG9uZSwgYnV0IG1vc3RseSBKYWtlIGFuZCBIYW1pbHRvbi4gUGx1cyBSeWRlciBhbmQgTW9yZ2FuYS4NCjxiPkRpc2NsYWltZXI6PC9iPiAgSSBkb24ndCBvd24gdGhlbSwgZXhjZXB0IGZvciBNciBGdWppd2FyYSwgTW9yZ2FuYSwgWXVrYSBIaWdhc2hpIGFuZCBLZW4gU2FuaWdpIGJ1dCBJIHdpc2ggSSBkaWQuDQo8Yj5TdW1tYXJ5OiA8L2I+IFdoYXQgSSB3b3VsZCBoYXZlIGxpa2UgdG8gaGFwcGVuIGluIHRoZSBGYWxsIHNlYXNvbiBvZiBZQSwgcmVhZCBpdCBhbmQgZmluZCBvdXQgd2hhdCBtaWdodCBoYXZlIGhhcHBlbmVkISAgT2gsIFNlYW4gaGFzIGxlZnQgdGhlIHNob3cgaW4gbXkgbWluZC4gIFNlYW4ncyBncmFuZG1vdGhlciBoYWQgZGllZCBhbmQgbGVmdCBoZXIgZXN0YXRlIHRvIGhpcyBwYXJlbnRzLCBzbyB0aGV5IGRlY2lkZWQgdG8gbGVhdmUgTmV3IFJhd2xleSBhbmQgbW92ZSB0byBDYWxpZm9ybmlhLCB3aGVyZSBoaXMgZ3JhbmRtb3RoZXIgaGFkIGxpdmVkLiAgDQo8Yj5TcG9pbGVyczo8L2I+ICBUaGUgZW50aXJlIGZpcnN0IGFuZCBvbmx5IHNlYXNvbiBvZiB0aGUgYmVzdCBzaG93IEkndmUgZXZlciBzZWVuLg0KPGI+VGhhbmtzOjwvYj4gIFRvIG15IG11c2UhIEFuZCBhbnlvbmUgd2hvIGlzIG9ic2Vzc2VkIGFzIEkgYW0gYWJvdXQgWW91bmcgQW1lcmljYW5zLg0KPGI+RmVlZGJhY2s6PC9iPiAgWWVzIFBsZWFzZSwgdGhpcyBpcyBteSAxc3QgZmFuZmljIGFuZCBJIHdvdWxkIGxvdmUgdG8gaGVhciBmcm9tIHlvdS4gIEkgaG9wZSB0byBtYWtlIHRoaXMgZmFuZmljIGFuIG9uZ29pbmcgc3RvcnlsaW5lLCBzbyBpZiB0aGVyZSdzIHNvbWV0aGluZyB5b3Ugd291bGQgbGlrZSB0byBzZWUgaGFwcGVuLCBvciB5b3UgdGhpbmsgc2hvdWxkIGhhcHBlbiBqdXN0IGRyb3AgbWUgYSBtZXNzYWdlIHZpYSBteSBlbWFpbC4NCg0KPGxqLWN1dCB0ZXh0PSJQYXJ0IE9uZTogT3VyIEJlZ2lubmluZywgV2lsbCBJdCBFbmQ/Ij4NCg0KPGNlbnRlcj5UaGUgRmFsbCBTZXNzaW9uDQoNCipQYXJ0IE9uZSAtIE91ciBCZWdpbm5pbmcsIFdpbGwgSXQgRW5kPw0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KSkFLRQ0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKjwvY2VudGVyPg0KDQpJIGdvdCBvZmYgbXkgYmlrZSBhbmQgcHVzaGVkIGl0IGludG8gdGhlIGhpZGluZyBzcG90IHRoYXQgSGFtaWx0b24gaGFkIHNob3duIG1lIG9ubHkgYSBmZXcgbW9udGhzIGVhcmxpZXIuICBJIGNvdWxkbuKAmXQgaGVscCBidXQgc21pbGUgd2hlbiBJIHRob3VnaHQgb2YgSGFtaWx0b24gSSB3YXMgc28gZXhjaXRlZCB0byBzZWUgaGltLiAgSXQgaGFkIGJlZW4gYWxtb3N0IGEgd2VlayBzaW5jZSBoZSBjYW1lIHRvIE5ldyBZb3JrIGZvciBhIHZpc2l0IGFuZCBJIGNvdWxkbuKAmXQgZ2V0IGhpcyBmYWNlIG9yIGhpcyB2b2ljZSBvdXQgb2YgbXkgaGVhZC4gIEFzIEkgd2Fsa2VkIHVwIHRvd2FyZHMgdGhlIGJveSdzIGRvcm1zIEkgcm9sbGVkIG15IHNob3VsZGVycywgdHJ5aW5nIHRvIHNoYWtlIG9mZiB0aGUgdGVuc2lvbiBsZWZ0IGJlaGluZCBmcm9tIHRoZSBsb25nIGRyaXZlIGZyb20gTmV3IFlvcmsuICBJIHdvbmRlcmVkIGJyaWVmbHkgaWYgbXkgc3R1ZmYgaGFkIGFycml2ZWQgYXQgdGhlIGRvcm1zIHlldCwgYnV0IG1vc3RseSBJIHdvcnJpZWQgYWJvdXQgc2VlaW5nIEZpbm4gZm9yIHRoZSBmaXJzdCB0aW1lIHNpbmNlIHRoZSBzaG93ZXJpbmcgaW5jaWRlbnQuIEkgaGFkIHdhaXRlZCBhbGwgc3VtbWVyIGJyZWFrIGZvciBhIGxldHRlciBvciBhIHBob25lIGNhbGwgdGVsbGluZyBtZSB0aGF0IEkgY291bGRuJ3QgY29tZSBiYWNrIHRvIFJhd2xleSBib3lzLCBidXQgaXQgbmV2ZXIgaGFwcGVuZWQuDQoNCkkgd2FzIHN1cnByaXNlZCB0byBzZWUgdGhlIGRvb3IgdG8gbXkgcm9vbSBvcGVuLCBidXQgYXMgSSBnb3QgY2xvc2VyIEkgY291bGQgc2VlIEhhbWlsdG9uIGluc2lkZSBwb3R0ZXJpbmcgYXJvdW5kLiBJIGFsbW9zdCBicm9rZSBvdXQgaW50byBhIHJ1biB3aGVuIEkgcmVhbGlzZWQgdGhhdCBoZSB3YXMgc28gY2xvc2UgYnV0IHNvbWVob3cgSSBtYW5hZ2VkIHRvIGNvbnRyb2wgbXlzZWxmLiAgSGFtaWx0b24gdHVybmVkIGFyb3VuZCBhdCB0aGF0IG1vbWVudCBhbmQgc3BvdHRlZCBtZSBob3ZlcmluZyBvdXRzaWRlIHRoZSBkb29yLiAgIlNvIGFyZSB5b3UgZ29ubmEgY29tZSBpbnNpZGUgb3IgYXJlIHlvdSBnb2luZyB0byBzcGVuZCB0aGUgd2hvbGUgRmFsbCBzZXNzaW9uIG91dCB0aGVyZSBpbiB0aGUgaGFsbD8iIGhpcyBydWRlIHF1ZXN0aW9uIHdhcyBzb2Z0ZW5lZCB3aXRoIGEgd2luayBhbmQgYSBzbWlsZSwgd2hpY2ggaGUgdG9zc2VkIGluIG15IGRpcmVjdGlvbiBiZWZvcmUgaGUgd2Fsa2VkIGZvcndhcmQgYW5kIHB1bGxlZCBtZSBpbnNpZGUgdGhlIHJvb20gY2xvc2luZyB0aGUgZG9vciBiZWhpbmQgbWUuIA0KDQoiSSBtaXNzZWQgeW91IHNvIG11Y2ghIiBJIHNhaWQgYmVmb3JlIGJyaW5naW5nIGhpcyBsaXBzIGRvd24gb24gbWluZSwgb3VyIG5vc2VzIHNxdWFzaGVkIHRvZ2V0aGVyLCBhcyB0aGUga2lzcyBiZWNhbWUgbW9yZSBwYXNzaW9uYXRlLg0KDQpIYW1pbHRvbiBraXNzZWQgbWUgYmFjayB3aXRoIHNvIG11Y2ggbG92ZSBhbmQgcGFzc2lvbiB0aGF0IEkgd2FzIGtpbmQgb2YgaG9waW5nIGl0IHdvdWxkIG5ldmVyIHN0b3AsIGJ1dCB0aGVuIEkgcmVtZW1iZXJlZCB0aGUgbmVlZCBmb3Igb3h5Z2VuLiBHYXNwaW5nIGZvciBhaXIgSSBwdWxsZWQgYXdheSwgIlNvIEkgc2VlIHlvdSd2ZSBhbHJlYWR5IG1vdmVkIHlvdXIgc3R1ZmYgaW4uIiBJIGxvb2tlZCBhcm91bmQgbXkgb25jZSBzaW5nbGUgcm9vbSBhbmQgdG9vayBpbiB0aGUgZXh0cmEgYmVkIGFuZCBkZXNrLg0KDQoiWWVhaCwgd2VsbCB5b3Ugc2FpZCB5b3Ugd2FudGVkIG1lIHRvLi4uLiIgSGFtaWx0b24gbG9va2VkIHVuc3VyZSBvZiBoaW1zZWxmIGZvciBhIG1vbWVudC4gSSBmZWx0IGJhZDsgSSBob3BlZCBoZSB3YXNuJ3QgcmVtZW1iZXJpbmcgdGhlIGxhc3QgdGltZSBtb3ZpbmcgaW4gaGFkIGNvbWUgdXAuIEkgaGFkIGJlZW4gc3VjaCBhIGJpdGNoLCBidXQgaXQgc2VlbWVkIGxpa2UgYSBsaWZldGltZSBhd2F5IGFuZCB3aGVuIEhhbWlsdG9uIHdhcyBsZWF2aW5nIHRvIGNhdGNoIHRoZSB0cmFpbiBiYWNrIHRvIE5ldyBSYXdsZXkgbGFzdCB3ZWVrLCBJIGZlbHQgbGlrZSBJIHdvdWxkIG5ldmVyIHNlZSBoaW0gYWdhaW4uIFRoZSBwYXN0IHdlZWsgaGFkIGJlZW4gc28gYW1hemluZyBhbmQgSSBoYWQgcmVhbGlzZWQgdGhhdCB3aGF0IEkgaGFkIGJlZW4gd29ycmllZCBhYm91dCB0aGUgbW9zdCwgYWJvdXQgbm90IGJlaW5nIGFibGUgdG8gY29tZSBiYWNrIHRvIFJhd2xleSBib3lzLCB3YXMgbm90IGJlaW5nIGFibGUgdG8gc3BlbmQgdGltZSB3aXRoIEhhbWlsdG9uLiBJIHdhbnRlZCB0byBzcGVuZCBldmVyeSBtaW51dGUgb2YgZXZlcnkgZGF5IHdpdGggaGltLCBzbyBJIGFza2VkIGhpbSBpZiBoZSBzdGlsbCB3YW50ZWQgdG8gbW92ZSBpbiB3aXRoIG1lLiBIZSBzYWlkIGhlIGRpZCBhbmQgaGUgbGVmdCB3aXRoIGJpZ2dlc3Qgc21pbGUgb24gaGlzIGZhY2UuDQoNCkkgbXVzdCBhZG1pdCBJIGRpZG4ndCBleHBlY3QgaGltIHRvIG1vdmUgaW4gc28gcXVpY2tseSwgYnV0IEkgZGVmaW5pdGVseSBzdGlsbCB3YW50ZWQgaGltIGhlcmUuIEkgcXVpY2tseSByZWFzc3VyZWQgaGltIHRoYXQgaGUgd2FzIG1vcmUgdGhhbiB3ZWxjb21lLCB3YW50ZWQgZXZlbi4gICJJIHNlZSBteSBzdHVmZiBhcnJpdmVkIHNhZmVseSzigJ0gSSBzYWlkIHNlZWluZyB0aGUgYm94ZXMgdGhhdCBjb3ZlcmVkIG15IGJlZCBhbmQgZGVzay4g4oCcSSBoYWQgdG8gcGFjayBhIGxvdCBtb3JlIHN0dWZmIHRoaXMgdGltZS4iDQoNCiJXaHk/IiBhc2tlZCBIYW1pbHRvbiwgdHVybmluZyBoaXMgaGVhZCBvbiB0aGUgc2lkZSwgbG9va2luZyBjbG9zZWx5IGF0IG1lLCBwYXRpZW50bHkgd2FpdGluZyBmb3IgbXkgYW5zd2VyLg0KDQoiV2VsbCBJIGhhdmUgdHdvIGlkZW50aXRpZXMgbm93LCBJIGhhZCB0byBicmluZyBjbG90aGVzIGZvciBKYWtlLCBhbmQgSmFjcXVlbGluZS4gIFBsdXMgRmFsbCBzZXNzaW9uIGlzIGxvbmdlciB0aGFuIHN1bW1lciEiIEl0IHdhcyBhIHJlbGllZiBpbiBhIHdheSB0aGF0IFNjb3V0IGFuZCBXaWxsIGtuZXcgbXkgc2VjcmV0LiAgSSBrbmV3IEkgY291bGQgdHJ1c3QgdGhlbSB0byBrZWVwIGl0IHNhZmUsIGFuZCBpdCBtZWFudCB0aGF0IEkgZ290IHRvIGJlIG15c2VsZiBhIGxpdHRsZSBtb3JlIG9mdGVuLg0KDQpIYW1pbHRvbiBsb29rZWQgYXJvdW5kIG91ciByb29tOyBoZSBhcHBlYXJlZCB0byBiZSBjb3VudGluZyBhbGwgb2YgdGhlIGJveGVzIHRoYXQgY292ZXJlZCBhbG1vc3QgZXZlcnkgYXZhaWxhYmxlIHN1cmZhY2UgaW4gdGhlIHJvb20uICBIZSBzbWlsZWQsICJJIHNlZSwgc28gYXMgbXVjaCBhcyBJIHdhbnQgdG8gc3BlbmQgdGhlIGRheSBhbG9uZSB3aXRoIHlvdSBsb2NrZWQgaW4gdGhpcyByb29tIHVucGFja2luZy4uLuKAnSBoZSByYWlzZWQgaGlzIGV5ZWJyb3dzIGluIG1vY2sgaG9ycm9yLCDigJxTaG91bGQgd2UgZ28gc2VlIGlmIHdlIGNhbiBmaW5kIHRoZSBvdGhlcnM/IEkga25vdyB0aGF0IHlvdSdyZSBkeWluZyB0byBzZWUgQmVsbGEuIiBIYW1pbHRvbiB0b3VjaGVkIG15IGZhY2Ugd2l0aCB0aGUgdGlwcyBvZiBoaXMgZmluZ2VycyBhcyBoZSBhc2tlZCBtZSBteSBwcmVmZXJlbmNlIGZvciB0aGUgZGF5J3MgYWN0aXZpdGllcy4NCg0KIllvdSBrbm93IG1lIHNvIHdlbGwuIERvIHlvdSBtaW5kIGlmIHdlIGdvIHNlZSB0aGUgb3RoZXJzPyIgSSBhc2tlZCBoaW0gYXMgSSBsZWFuZWQgdXAgdG8ga2lzcyBoaXMgbGlwcy4gSSB3YXMgYWxyZWFkeSBnYXRoZXJpbmcgdXAgdGhlIGtleXMgdG8gbXkgYmlrZSBiZWZvcmUgaGUgY291bGQgYW5zd2VyIGJ1dCBoaXMgaGFuZCB3YXMgYWxyZWFkeSBvbiB0aGUgZG9vciwgc28gSSBrbmV3IHdlIHdlcmUgb2YgdGhlIHNhbWUgbWluZC4gQXMgbXVjaCBhcyB3ZSBtaXNzZWQgZWFjaCBvdGhlciwgd2UgaGFkIGFsc28gbWlzc2VkIG91ciBuZXcgZnJpZW5kcy4NCg0KPGNlbnRlcj4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpCRUxMQQ0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKjwvY2VudGVyPg0KDQpJIHdpcGVkIG15IGhhbmRzIG9uIGFuIG9pbHkgcmFnIGFzIEkgd2Fsa2VkIG91dCBvZiB0aGUgZ2FyYWdlLiAgSSBjb3VsZG4ndCBiZWxpZXZlIGl0IHdhcyBzdGlsbCBvdXJzLCB0aGUgYmFuayBoYWQgZ2l2ZW4gdXMgYSBsb2FuIGFuZCB3ZSBoYWQgYmVlbiBhYmxlIHRvIHB1cmNoYXNlIGl0LiBFdmVyeXRoaW5nIHdhcyBiYWNrIHRvIG5vcm1hbCwgYnV0IG15IHJlbGF0aW9uc2hpcCB3aXRoIG15IG1vdGhlciB3b3VsZCBuZXZlciBiZSB0aGUgc2FtZSBhZ2Fpbi4gU2hlIGhhZCBhbHJlYWR5IGJyb2tlbiBteSBoZWFydCB0d2ljZSBpbiBteSBsaWZldGltZSBhbmQgSSBkaWRuJ3QgdGhpbmsgSSBjb3VsZCBzdGFuZCBpdCBhIHRoaXJkIHRpbWUuIA0KDQpBbGwgaW4gYWxsIGl0IGhhZCBiZWVuIGEgcHJldHR5IGV2ZW50ZnVsIHN1bW1lci4gSSBsb25nZWQgdG8gc2VlIFNjb3V0IHRvIHRlbGwgaGltIHRoYXQgd2UncmUgbm90IGJyb3RoZXIgYW5kIHNpc3Rlci4gSSB3b25kZXJlZCBpZiBJIHdvdWxkIHNlZSBKYWtlIGFnYWluIHNvb24sIHNoZSBkaWQgc2F5IHNoZSB3YXMgY29taW5nIGJhY2sgYnV0IEkgaGFkIHlldCB0byBzZWUgaGVyLCBhbmQgSSB3b25kZXJlZCB3aGF0IHdhcyBnb2luZyB0byBoYXBwZW4gd2l0aCBXaWxsLiBXb3VsZCBoZSBnZXQgaGlzIHNjaG9sYXJzaGlwIGZ1bmRpbmcgYmFjaz8gSSBhbHNvIHdvbmRlcmVkIGlmIGhlIGtuZXcgYWJvdXQgU2Vhbi4gDQoNCkkgaGFkIGp1c3QgZmluaXNoZWQgZml4aW5nIGEgY2FyIHdoZW4gYSBidXMgc3RvcGVkIGFjcm9zcyB0aGUgcm9hZCwgaW4gZnJvbnQgb2YgRnJpZW5kbHkncy4gSSB3YWl0ZWQgaW1wYXRpZW50bHkgZm9yIGl0IHRvIGxlYXZlIHNvIEkgY291bGQgc2VlIHdob20gaXQgaGFkIHN0b3BlZCBmb3IuICBJIHN0YXJ0ZWQgdG8gY3Jvc3MgdGhlIHJvYWQganVzdCBhcyB0aGUgYnVzIHRvb2sgb2ZmLCBJIHNtaWxlZCB3aGVuIEkgcmVhbGlzZWQgdGhhdCB0aGUgYnVzIGhhZCBsZWZ0IGJlaGluZCBXaWxsIGFuZCBTY291dC4gIldlbGwsIGl0J3MgYWJvdXQgdGltZSB5b3UgdHdvIHdlcmUgZ2V0dGluZyBiYWNrLCBzY2hvb2wgc3RhcnRzIHRvbW9ycm93ISIgSSBsYXVnaGVkIGFzIFdpbGwgcnVzaGVkIGZvcndhcmQgdG8gc3dlZXAgbWUgb2ZmIG15IGZlZXQgaW4gYSBiaWcgYmVhciBodWcuDQoNCiJZZWFoLCB3ZWxsIHdlJ3JlIGJhY2sgbm93IHNvIG5vIG5lZWQgdG8gY2FsbCBvdXQgdGhlIE5hdGlvbmFsIEd1YXJkISIgU2NvdXQgcmVwbGllZCB0YWtpbmcgb3ZlciB3aGVuIFdpbGwgaGFkIGxldCBtZSBnby4NCg0KR29kLCBJIGhhZCBtaXNzZWQgdGhpcywgaGF2aW5nIGhpcyBhcm1zIGFyb3VuZCBtZS4gSSBjb3VsZG4ndCB3YWl0IHRvIHRlbGwgaGltIHRoZSB0cnV0aCwgeWV0IGluIGEgd2F5IEkgd2FzIHNjYXJlZC4gRGlkIGhlIHN0aWxsIGZlZWwgdGhlIHNhbWU/IEkgZ3Vlc3MgSSBjb3VsZCB0ZWxsIGhpbSBub3cgYmVmb3JlIEkgY2hpY2tlbiBvdXQsIGJ1dCBJIHJlYWxseSBzaG91bGQgd2FpdCB1bnRpbCB3ZSBhcmUgYWxvbmUuIFRoZSBkZWNpc2lvbiB3YXMgdGFrZW4gb3V0IG9mIG15IGhhbmRzIHdoZW4gdGhlIHJvYXIgb2YgSmFrZSdzIG1vdG9yYmlrZSByZWFjaGVkIHVzIGZyb20gYWNyb3NzIHRoZSBzdHJlZXQuIEJvdGggSmFrZSBhbmQgSGFtaWx0b24gam9pbmVkIG91ciBncm91cC4gQWZ0ZXIgZXhjaGFuZ2luZyBodWdzIGFuZCBncmVldGluZ3MsIEkgc3VnZ2VzdGVkIHRoYXQgd2UgZ28gb3ZlciB0byBGcmllbmRseSdzIHNvIHdlIGNvdWxkIGFsbCBzaXQgZG93biBhbmQgY2F0Y2ggdXAuDQoNCkkgdG9vayBKYWtlJ3MgaGFuZCBhbmQgbGVkIGhlciB0byBhIHRhYmxlIGF0IHRoZSBiYWNrIG9mIHRoZSBkaW5lciwgbGVhdmluZyB0aGUgZ3V5J3MgdG8gb3JkZXIuICAiSSdsbCBoYXZlIGEgQ2hvY29sYXRlIFRoaWNrLXNoYWtlIEJveXMsIGFuZCBKYWtlIHdpbGwgaGF2ZSBhLi4uLuKAmSBJIGxvb2tlZCBhdCBoZXIgZXhwZWN0YW50bHksIOKAmEknbGwgaGF2ZSBhIENoZXJyeSBTcGlkZXIsIHRoYW5rcy4iIFNoZSBmaW5pc2hlZCB3YXRjaGluZyB0aGUgZ3V5J3MgaGVhZCB0b3dhcmRzIHRoZSBjb3VudGVyLg0KDQoiRG8geW91IHRoaW5rIFNjb3V0IHdpbGwgc3RhcnQgd29ya2luZyBoZXJlIGFnYWluPyIgSmFrZSBhc2tlZCBhZnRlciB3ZSBoYWQgc2F0IGRvd24sIGhlciBleWVzIHN0aWxsIGxvY2tlZCBvbiBIYW1pbHRvbi4NCg0KIkkgZG9uJ3Qga25vdy4gSGV5IEpha2UsIGNhbiBJIHRlbGwgeW91IHNvbWV0aGluZz8iIEkgYXNrZWQsIEkgbG9va2VkIG92ZXIgYXQgdGhlIGd1eXMgYW5kIG5vdGljZWQgdGhhdCBIYW1pbHRvbiB3YXMgYnVzeSB3YXRjaGluZyBKYWtlIGFzIHdlbGwuDQoNCiJTdXJlLCBpcyBpdCBhYm91dCB0aGUgZ2FyYWdlPyBZb3Uga25vdyBJIHdhcyBzbyBoYXBweSBmb3IgeW91IHdoZW4gSSBnb3QgeW91ciBsZXR0ZXIgdGVsbGluZyBtZSBhYm91dCB0aGUgbG9hbi4iIEpha2UgdHVybmVkIGFuZCBsb29rZWQgYXQgbWUsIHdhaXRpbmcgcGF0aWVudGx5IGZvciBteSByZXBseS4NCg0KIk5vLCBJIGFza2VkIG15IG1vbSBhYm91dCBteSBmYXRoZXIgYW5kIHNoZSB0b2xkIG1lIHRoYXQgaXQncyBub3QgU2NvdXQncyBkYWQuICBJdCB3YXMgb25lIG9mIENoYXJsaWUncyBmcmllbmRzLiIgSSBoZWxkIG15IGJyZWF0aCwgd2FpdGluZyBmb3IgaGVyIHJlYWN0aW9uIHRvIG15IGJyaWVmIGJ1dCBpbmZvcm1hdGl2ZSBzdGF0ZW1lbnQuDQoNCiJXZWxsLCB0aGF0J3MgZ29vZCBuZXdzIHJpZ2h0PyIgSmFrZSBhc2tlZCwgdHVybmluZyBoZXIgYXR0ZW50aW9uIGZ1bGx5IG9uIG91ciBjb252ZXJzYXRpb24uICAiSSBtZWFuIG5vdyB5b3UgZ3V5cyBjYW4gYmUgdG9nZXRoZXIsIHRoYXQgaXMgd2hhdCB5b3Ugd2FudCBpc24ndCBpdD8iDQoNCiJZZWFoIEkgZ3Vlc3MgYnV0IHdoYXQgaWYgU2NvdXQncyBmZWVsaW5ncyBmb3IgbWUgaGF2ZSBjaGFuZ2VkLiAgQmVzaWRlcyBJIGRvbid0IGtub3cgaWYgd2UgY291bGQgZXZlciBiZSB0b2dldGhlciwgYWZ0ZXIgYWxsIHdlIGRpZCBzcGVuZCB0aGUgd2hvbGUgc3VtbWVyIHRoaW5raW5nIHRoYXQgd2Ugd2VyZSBicm90aGVyIGFuZCBzaXN0ZXIuIiBNeSB2b2ljZSBmYWRlZCB0byBhIHdoaXNwZXIsIHdoZW4gSSBub3RpY2VkIHRoYXQgU2NvdXQsIFdpbGwgYW5kIEhhbWlsdG9uIGhhZCBhbG1vc3QgcmVhY2hlZCBvdXIgdGFibGUuICBUaGlzIGNvbnZlcnNhdGlvbiB3b3VsZCBoYXZlIHRvIHB1dCBvbiBob2xkIHVudGlsIEpha2UgYW5kIEkgY291bGQgYmUgYWxvbmUgYWdhaW4uDQoNCkpha2UgbXVzdCBoYXZlIHNwb3R0ZWQgdGhlIGd1eXMgYWJvdXQgdGhlIHNhbWUgdGltZSBhcyBJIGRpZCBiZWNhdXNlIHNoZSBsZWFuZWQgb3ZlciB0aGUgdGFibGUgYW5kIGhpc3NlZCwgIllvdSBuZWVkIHRvIHRlbGwgU2NvdXQsIG5vIG1hdHRlciB3aGF0LiAgSGUgaGFzIGEgcmlnaHQgdG8ga25vdy4iICBTaGUgc2F0IGJhY2sgYSBxdWljayBzbWlsZSBjb21pbmcgb24gdG8gaGVyIGZhY2U7IEkgd2FzIGEgYml0IHN1cnByaXNlZCB0byBzZWUgaXQsIGFmdGVyIHdlIGhhZCBqdXN0IGJlZW4gaGF2aW5nIGEgcHJldHR5IHNlcmlvdXMgY29udmVyc2F0aW9uLiAgTWF5YmUsIEkgdGhvdWdodCB0byBteXNlbGYsIHNoZSBoYWQgaGVhcmQgb25lIG9mIHRoZSBndXlzIHNheSBzb21ldGhpbmcgZnVubnkuICBJIGhhZCBqdXN0IGRlY2lkZWQgdGhhdCB0aGlzIG11c3QgYmUgdHJ1ZSwgd2hlbiBzaGUgc3Rvb2QgdXAgYW5kIHJhY2VkIHRvIHRoZSBjb3VudGVyLiAgSGFtaWx0b24gYW5kIHRoZSByZXN0IG9mIHVzIHdlcmUgbGVmdCBzdGFuZGluZywgd2F0Y2hpbmcgaGVyIGZyb20gYWNyb3NzIHRoZSByb29tLiAgV2UgY291bGQgb25seSBzcGVjdWxhdGUgb24gd2hhdCBzaGUgc2FpZCB0byBCcmlhbiwgdGhlIG93bmVyIG9mIEZyaWVuZGx5J3MsIGJ1dCBub25lIG9mIHVzIHJlYWxseSBoYWQgYSBjbHVlLiAgQXQgdGhlIHNhbWUgdGltZSBKYWtlIHR1cm5lZCB0byBmYWNlIHVzLCBoZXIgZmFjZSBsaXQgdXAsIGhlciBleWVzIHNoaW55IGFuZCBicmlnaHQsIEJyaWFuIHJlYWNoZWQgdW5kZXIgdGhlIGNvdW50ZXIgdG8gZmlkZGxlIHdpdGggdGhlIHZvbHVtZSBrbm9iIG9uIHRoZSByYWRpby4NCg0KSSBsYXVnaGVkIHdoZW4gSSBoZWFyZCB0aGUgYmVnaW5uaW5nIG5vdGVzIG9mIGEgZmF2b3VyaXRlIHNvbmcgb2YgbWluZSwgYW5kIGl0IGhpdCBtZSB3aGF0IEpha2Ugd2FzIHVwIHRvLiAgIk9oIHlvdSBhbmQgeW91ciBBQkJBIG9ic2Vzc2lvbizigJkgSSBzYWlkIGFzIEkgZGFuY2VkIG15IHdheSBvdmVyIHRvIHdoZXJlIHNoZSB3YXMgc2luZ2luZyB0aGUgZmlyc3QgZmV3IHdvcmRzIG9mICdEYW5jaW5nIFF1ZWVuJywg4oCYSSBzdGlsbCBibGFtZSB5b3UgZm9yIG1lIHRyYXNoaW5nIG15IGRhZCdzIHRydWNrLiIgIEl0IHdhcyBzYWlkIHdpdGggYSBzbWlsZSwgc28gdGhhdCBzaGUgd291bGQga25vdyB0aGF0IEkgd2FzIGpva2luZy4NCg0KPGNlbnRlcj4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpIQU1JTFRPTg0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKjwvY2VudGVyPg0KDQpJdCB3YXMgZ29vZCB0byBzZWUgbXkgZnJpZW5kcyBhZ2Fpbi4gIEkgd2FzIGVhZ2VyIHRvIGZpbmQgb3V0IGFib3V0IHRoZWlyIHRyaXAgdG8gU3QuIE1hcnRpbiwgYnV0IEkga2VwdCBtaXNzaW5nIGJpdHMgYW5kIHBpZWNlcyBvZiB3aGF0IHRoZXkgd2VyZSBzYXlpbmcgZHVlIHRvIHRoZSBmYWN0IHRoYXQgSSBjb3VsZG4ndCBrZWVwIG15IGV5ZXMgb2ZmIG15IGJlYXV0aWZ1bCBnaXJsZnJpZW5kLiAgQXQgdGltZXMgaXQgc3RpbGwgYW1hemVkIG1lIHRoYXQgSSBjb3VsZCBoYXZlIGV2ZXIgdGhvdWdodCB0aGF0IHNoZSB3YXMgYSBib3kuICBFdmVyeXRoaW5nIGFib3V0IEpha2Ugd2FzIHNvIHNsZW5kZXIgYW5kIGp1c3Qgc2NyZWFtZWQgJ2dpcmwnLiAgV2F0Y2hpbmcgaGVyIG5vdyBhbnlvbmUgY291bGQgc2VlIHNoZSB3YXMgYWxsIGdpcmwuICBJIHRyaWVkIHRvIHN3YWxsb3cgYXMgSSB3YXRjaGVkIEpha2UgYW5kIEJlbGxhIHNpbmcgYW5kIGRhbmNlIGFyb3VuZCB0aGUgZGluZXIsIGl0IHdhcyBnZXR0aW5nIGhhcmQgZm9yIG1lIHRvIGJyZWF0aCBhcyBteSBleWVzIGF0dGFjaGVkIHRoZW1zZWx2ZXMgdG8gdGhlIHNlbnN1YWwgbW92ZW1lbnQgb2YgSmFrZSdzIGhpcHMgc3dheWluZyBpbiB0aW1lIHRvIHRoZSBtdXNpYy4NCg0KSSBoYWQgdG8gc2hha2UgbXkgaGVhZCB0byBjbGVhciBpdC4gIEkgbm90aWNlZCB0aGF0IFNjb3V0IGFwcGVhcmVkIHRvIGJlIHN1ZmZlcmluZyBmcm9tIHRoZSBzYW1lIGxvdmUgc3RydWNrIHN5bXB0b21zIGFzIG15c2VsZiwgc28gSSBpZ25vcmVkIGhpbSBhbmQgc3Bva2UgdG8gV2lsbC4gICJTbywgSSBndWVzcyB5b3Uga25vdyB0aGF0IG15IGRhZCBjb252aW5jZWQgdGhlIGJvYXJkIG9mIHRydXN0ZWVzIHRvIGZ1bmQgeW91ciBzY2hvbGFyc2hpcC4iICBJdCB3YXMgYSBzdGF0ZW1lbnQgbm90IGEgcXVlc3Rpb24sIEkgYXNzdW1lZCBoZSBhbHJlYWR5IGtuZXcgc28gSSB3YXMga2luZCBvZiBzdXJwcmlzZWQgd2hlbiBoZSBzdGFydGVkIGp1bXBpbmcgYXJvdW5kIGxpa2UgYW4gaWRpb3QuICAiSSdsbCB0YWtlIHRoYXQgdG8gbWVhbiB0aGF0IHlvdSBoYWQgbm8gaWRlYS4iIEkgc2FpZCB3aGVuIHRoZSBqdW1waW5nIGhhZCBzdG9wcGVkIGFuZCB0aGUgZ2lybHMgaGFkIGpvaW5lZCB1cyBhZ2Fpbi4NCg0KIk5vLCBJIGhhZCBubyBpZGVhLiAgSSBndWVzcyBubyBvbmUga25ldyBob3cgdG8gY29udGFjdCBtZS4gIE9oLCBtYW4gdGhpcyBpcyBzbyBjb29sLCBJIHRob3VnaHQgSSB3b3VsZCBoYXZlIHRvIHdhaXQgdW50aWwgbmV4dCB5ZWFyIGZvciBhIHNjaG9sYXJzaGlwIHRvIGNvbWUgdXAuIiAgV2lsbCdzIHNtaWxlIGNvdmVyZWQgaGlzIGVudGlyZSBmYWNlLiAgIlRoaXMgaXMgZ29pbmcgdG8gYmUgc28gZ3JlYXQgYWxsIHVzIHRvZ2V0aGVyIHRoaXMgRmFsbC4uLiIgV2lsbCBzYWlkLg0KDQoiTm90IGFsbCBvZiB1cy4iIHNhaWQgQmVsbGEgY3V0dGluZyBXaWxsIG9mZi4gDQoNCiJZZWFoIGJ1dCBldmVuIHRob3VnaCB5b3UgZG9uJ3QgZ28gdG8gUmF3bGV5IHlvdSBzdGlsbCBhIHBhcnQgb2YgdGhpcywgYSBwYXJ0IG9mIHVzLiIgIEkgc2FpZCB0cnlpbmcgdG8gZXhwcmVzcyBob3cgd2UgYWxsIGZlbHQuICBCZWxsYSBsb29rZWQgYXQgbWUgYW5kIHNtaWxlZC4NCg0KIlRoYW5rcyBIYW1pbHRvbi4iIHNoZSBzYWlkLCBnaXZpbmcgbWUgYSBxdWljayBodWcuDQoNCldlIGFsbCBzYXQgZG93biBmaW5hbGx5LCBKYWtlIHNsaWQgaW4gbmV4dCB0byBtZSBhbmQgcHV0IGhlciBoYW5kIG9uIG15IGtuZWUuICBJIHdhbnRlZCB0byBraXNzIGhlciBzbyBiYWRseSwgYnV0IEkgdW5kZXJzdG9vZCB3aGF0IHRoZSBoYW5kIG9uIG15IGtuZWUgbWVhbnQuICBKYWtlIHdhcyB0ZWxsaW5nIG1lIHdpdGhvdXQgd29yZHMsIHRoYXQgc2hlIHdhbnRlZCB0byBiZSBjbG9zZSB0byBtZSBhbmQgdG91Y2ggbWUgYnV0IHNoZSBoYWQgdG8gaGlkZSB0aGUgaW1wdWxzZSBiZWNhdXNlIHdlIHdlcmUgaW4gYSBwdWJsaWMgcGxhY2UuICBTbyBpbnN0ZWFkIG9mIGdpdmluZyBpbnRvIG15IGltcHVsc2UgYW5kIGtpc3NpbmcgaGVyLCBJIHB1dCBteSBoYW5kIG9uIGhlciBrbmVlLiAgSSBoYWQgbG9zdCB0cmFjayBvZiB0aGUgY29udmVyc2F0aW9uIGFnYWluLCBzbyB3aGVuIFdpbGwgbGVhbmVkIG92ZXIgYW5kIHB1bmNoZWQgbWUgaW4gdGhlIGFybSB0byBnZXQgbXkgYXR0ZW50aW9uIEkgd2FzIGF0IGEgbG9zcywgYXMgdG8gd2hhdCBoZSB3YW50ZWQgZnJvbSBtZS4gICJXaGF0PyIgSSBhc2tlZCwgcnViYmluZyBteSBhcm0gZGFtbiB0aGF0IGh1cnQuDQoNCiJJIHdhcyB0cnlpbmcgdG8gYXNrIHlvdSBpZiB5b3UgZW5qb3llZCB5b3VyIHRyaXAgdG8gTmV3IFlvcmsgdG8gdmlzaXQgSmFrZSwgYnV0IEknbSBndWVzc2luZyBmcm9tIHRoZSB3YXkgeW91ciBicmFpbiBoYXMgZm9yZ290dGVuIGhvdyB0byBmdW5jdGlvbiwgbm93IHRoYXQgSmFrZSBpcyBzaXR0aW5nIG5leHQgdG8geW91LCB0aGF0IHRoZSBhbnN3ZXIgdG8gdGhhdCBxdWVzdGlvbiB3b3VsZCBiZSBhbiBlbnRodXNpYXN0aWMgJ3llcyciLiAgV2lsbCBzYWlkLCBub3QgZXZlbiB0cnlpbmcgdG8gaGlkZSBoaXMgYW11c2VtZW50Lg0KDQpJIGhhZCB0byBhZG1pdCBoZSB3YXMgcmlnaHQsIG9ubHkgbXkgYnJhaW4gZGlkbid0IGNlYXNlIHRvIGZ1bmN0aW9uLCB3aGVuIEkgd2FzIGFyb3VuZCBKYWtlOyBpdCBqdXN0IGNlYXNlZCB0byByZWNvZ25pc2UgYW55dGhpbmcgYnV0IGhlci4gIEV2ZW4gbm93IHNoZSB3YXMgcnVubmluZyBsaXR0bGUgY2lyY2xlcyBvbiBteSB0aGlnaCB3aXRoIGhlciBmaW5nZXJzLCBkcml2aW5nIG1lIGluc2FuZS4gIFdpdGggYSBzdHJhbmdsZWQgbW9hbiBJIGFubm91bmNlZCwgIllvdSBqdXN0IHdhaXQgdW50aWwgc29tZSBnaXJsIGdldHMgaGVyIGhhbmRzIHdyYXBwZWQgYXJvdW5kIHlvdXIgaGVhcnQgS3J1ZHNraSwgeW91IHdvbid0IHN0YW5kIGEgY2hhbmNlISINCg0KPGNlbnRlcj4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpTQ09VVA0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKjwvY2VudGVyPg0KDQpJIHRyaWVkIG5vdCB0byBzdGFyZSBhdCBCZWxsYSwgYnV0IEkgaGFkIHJlYWxseSBtaXNzZWQgaGVyIG92ZXIgdGhlIHN1bW1lciBicmVhayBhbmQgaXQgaGFkIGJlZW4gdGVhcmluZyBtZSB1cCwgdGhpbmtpbmcgYWJvdXQgaGVyIHNwZW5kaW5nIGFsbCBvZiBoZXIgZnJlZSB0aW1lIHdpdGggU2Vhbi4gIEkgY291bGRuJ3Qgc3RvcCB0aGlua2luZyBhYm91dCBoZXIgdGhlIHdob2xlIHRpbWUgV2lsbCBhbmQgSSB3ZXJlIGluIFN0LiBNYXJ0aW5zLCBhbmQgZXZlbiBub3cgd2hlbiBzaGUgd2FzIHJpZ2h0IGluIGZyb250IG9mIG1lIEkganVzdCB3YW50ZWQgdG8gcmVhY2ggb3V0IGFuZCB0b3VjaCBoZXIuICBJIG5lZWRlZCB0byBrbm93IHRoYXQgc2hlIHdhcyByZWFsLiAgSXQgd2FzIHNsYXlpbmcgbWUgdHJ5aW5nIHRvIGxpc3RlbiB0byBldmVyeW9uZSdzIGNvbnZlcnNhdGlvbnMgYW5kIHN0b3JpZXMsIGFsbCBJIHdhbnRlZCB0byBkbyB3YXMgYmUgYWxvbmUgd2l0aCBCZWxsYSBzbyBJIGNvdWxkIGZpbmQgb3V0IHdoZXRoZXIgc2hlIGFza2VkIGhlciBtb20gYWJvdXQgdXMgb3Igbm90Lg0KDQpJdCB3YXMgdGhlIGxhdWdodGVyIHRoYXQgZ290IG15IGF0dGVudGlvbjsgZXZlcnlvbmUgd2FzIGdvaW5nIGNyYXp5IG92ZXIgc29tZXRoaW5nIGFtdXNpbmcuICBJIHdhcyBzb3JyeSB0aGF0IEkgbWlzc2VkIGl0OyBJIGNvdWxkIHJlYWxseSBkbyB3aXRoIGEgZ29vZCBsYXVnaC4gIEkgd2FudGVkIHRvIGFzayB3aGF0IGhhZCBiZWVuIHNvIGZ1bm55LCBidXQgdGhlbiBldmVyeW9uZSB3b3VsZCBrbm93IHRoYXQgSSBoYWRuJ3QgYmVlbiBsaXN0ZW5pbmcuICBBbmQgdGhleSB3b3VsZCBhbGwga25vdyB3aHksIHNvIEkgc2FpZCBub3RoaW5nIGJ1dCBJIGZvcmNlZCBteXNlbGYgdG8gcGF5IGF0dGVudGlvbiB0byB0aGUgY29udmVyc2F0aW9uIGdvaW5nIG9uIGFyb3VuZCBtZS4NCg0KIklzIHRoYXQgc28/IiBXaWxsIGFza2VkLCBsb29raW5nIGF0IEhhbWlsdG9uLg0KDQoiWWVhaCwgYW5kIEkgaG9wZSBJJ20gdGhlcmUgdG8gd2l0bmVzcyBpdCwiIHNhaWQgSGFtaWx0b24gaW4gcmVwbHkuDQoNCiJNZSB0b28uIiBzYWlkIEpha2UsIG5vZGRpbmcgaGVyIGhlYWQgaW4gYWdyZWVtZW50Lg0KDQpJIGNvdWxkbid0IHVuZGVyc3RhbmQgYSB3b3JkIHRoZXkgd2VyZSBzYXlpbmcgc28gSSBkZWNpZGVkIHRvIGxldCBteSBtaW5kIHdhbmRlci4gIEkgd29uZGVyZWQgd2hlbiBCZWxsYSBhbmQgSSB3b3VsZCBnZXQgYSBjaGFuY2UgdG8gdGFsayBhbG9uZS4gIE1heWJlIEkgc2hvdWxkIGFzayBoZXIgaWYgc2hlIHdhbnRzIHRvIGRvIHNvbWV0aGluZyBhZnRlciB0aGlzPyAgTWF5YmUgbm90LCBidXQgYmVmb3JlIEkgY291bGQgbG9zZSBteSBuZXJ2ZSBJIHdhcyBhc2tpbmcgaGVyIGlmIHdlIGNvdWxkIHRhbGsgcHJpdmF0ZWx5IGxhdGVyLiAgQWxsIG9mIG91ciBmcmllbmRzIHdlbnQgc3VzcGljaW91c2x5IHF1aWV0LCBhcyBJIHdhaXRlZCBmb3IgaGVyIGFuc3dlci4NCg0KIkkgdW1tLi4uSSBjYW4ndCBDaGFybGllIGhhcyB0byBnbyB0byBDYXJzb24gbGF0ZXIgdG8gcGljayB1cCBhIHNwZWNpYWwgcGFydCBhbmQgSSBwcm9taXNlZCBoaW0gdGhhdCBJIHdvdWxkIHdhdGNoIHRoZSBnYXJhZ2UuIiAgQmVsbGEncyByZXNwb25zZSB3YXMgYSBiaXQgcnVzaGVkIGFuZCBhbG1vc3QgYXVkaWJsZSwgYnV0IEkga25ldyBzaGUgd2Fzbid0IHJlYWR5IHRvIGJlIGFsb25lIHdpdGggbWUgeWV0LiAgSXQgaHVydCwgaXQgcmVhbGx5IGRpZCBidXQgbXkgcGFpbiB3YXMgZWFzZWQgYmVjYXVzZSBJIGtuZXcgc2hlIGh1cnQgdG9vLiAgQXQgbGVhc3Qgd2UgY291bGQgaGF2ZSB0aGF0IGluIGNvbW1vbi4gIA0KDQpBbG1vc3Qgc3RyYWlnaHQgYXdheSBJIGZlbHQgbGlrZSBhIHNuYWtlLCBJIG5ldmVyIHdhbnRlZCBoZXIgdG8gZmVlbCBwYWluLCB3aGF0IHdhcyBJIHRoaW5raW5nPyAgQXMgbXVjaCBhcyBJIHdhbnRlZCBldmVyeXRoaW5nIHRvIHdvcmsgb3V0IGJldHdlZW4gdXMsIEkga25ldyB0aGF0IGl0IHByb2JhYmx5IHdvdWxkbid0LiAgQWZ0ZXIgYWxsIHRoaXMgd2FzIHJlYWwgbGlmZSwgbm90IHNvbWUgZHVtYiB0ZWVuYWdlIHNob3cgb24gVFYuICBJIHdhbnRlZCB0byBnZXQgdXAgYW5kIGxlYXZlLiAgU2l0dGluZyBoZXJlIHdhcyBraWxsaW5nIG1lIGJ1dCBJIGRpZG4ndCB3YW50IHRvIHVwc2V0IG15IGZyaWVuZHMsIHNvIEkgc3RheWVkIGFuZCBJIGxpc3RlbmVkLg0KDQo8Y2VudGVyPioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCldJTEwNCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio8L2NlbnRlcj4NCg0KQmVsbGEgbG9va2VkIGxpa2Ugc2hlIHdhbnRlZCB0byBzYXkgc29tZXRoaW5nIHNvIEkgdGhvdWdodCBJJ2QgYnJlYWsgdGhlIGljZSwg4oCcU28gSSBnb3QgYSBsZXR0ZXIgZnJvbSBTZWFuLCB0ZWxsaW5nIG1lIGFib3V0IGhpcyBHcmFuZG1vdGhlciBhbmQgZXZlcnl0aGluZy4gIEFyZSB5b3Ugb2theSB3aXRoIGFsbCBvZiBpdD8iIEkgYXNrZWQgaGVyIHRyeWluZyB0byByZWFkIGhlciBmYWNpYWwgZXhwcmVzc2lvbjsgaXQgd2Fzbid0IG9uZSB0aGF0IEkgaGFkIHdpdG5lc3NlZCBiZWZvcmUuDQoNCiJZZWFoLCB3ZSBkZWNpZGVkIHRvIGdpdmUgdGhlIGxvbmctZGlzdGFuY2UgcmVsYXRpb25zaGlwIHRoaW5nIGEgbWlzcy4iIEJlbGxhIHJlcGxpZWQgd2l0aCBhIHNocnVnIG9mIGhlciBzaG91bGRlcnMuICAiSGUgZGlkbid0IHdhbnQgdG8gbGVhdmUsIEkgdGhpbmsgaGUgd2FzIHNjYXJlZCBvZiBiZWluZyBzbyBmYXIgYXdheSBmcm9tIE5ldyBSYXdsZXkgYW5kIHVzIGJ1dCBoaXMgcGFyZW50cyBoYWQgYWxyZWFkeSBtYWRlIHVwIHRoZWlyIG1pbmRzIGFib3V0IGdvaW5nIGFuZCB0aGV5IHdvdWxkbid0IGJhY2sgZG93bi4iIA0KDQpJIHNhdyBoZXIgbG9vayBxdWlja2x5IG92ZXIgYXQgU2NvdXQsIGZvciB0aGUgYnJpZWZlc3Qgb2YgbW9tZW50cyBiZWZvcmUgdHVybmluZyBiYWNrIHRvIG1lLiAgU2NvdXQgaGFkIGJlZW4gd2F0Y2hpbmcgaGVyIHRvbywgZXZlciBzaW5jZSB3ZSBzdGVwcGVkIG9mZiB0aGUgYnVzLCBoZSBsb29rZWQgbGlrZSBoZSB3YW50ZWQgdG8gYXNrIGhlciBhYm91dCBTZWFuIGJ1dCBoZSB3b3VsZG4ndCBsZXQgaGltc2VsZi4gIE11c3QgYmUgdHJ1ZSB3aGF0IHRoZXkgc2F5IGFib3V0ICdhYnNlbmNlIG1ha2luZyB0aGUgaGVhcnQgZ3JvdyBmb25kZXInLCBpdCB3b3VsZCBiZSBvYnZpb3VzIHRvIGEgYmxpbmQgbWFuIHRoYXQgdGhleSB3ZXJlIHN0aWxsIGluIGxvdmUgd2l0aCBlYWNoIG90aGVyLiAgSSBkaWRuJ3QgZW52eSB0aGVtIGZvciB0aGVpciBzdHJ1Z2dsZSB0byBkbyB0aGUgcmlnaHQgdGhpbmcsIHRoZSBtb3JhbCB0aGluZy4gIEkgZGlkIHdvbmRlciBicmllZmx5IGlmIEJlbGxhIGhhZCBhc2tlZCBoZXIgbW9tIGFib3V0IFNjb3V0J3MgZGFkIGJlaW5nIGhlciBkYWQsIHdoaWxlIHdlIHdlcmUgZ29uZSwgYnV0IEkgZmlndXJlZCBpdCBzaGUgaGFkIGFuZCB0aGUgbmV3cyBoYWQgYmVlbiBnb29kIHRoZW4gc2hlIHdvdWxkIGhhdmUgdG9sZCB1cyBzdHJhaWdodCBhd2F5LCB3aGVuIHNoZSBtZXQgdXMgYXQgdGhlIGJ1cyBzdG9wLiAgU28gSSBjb25jbHVkZWQgdGhhdCBpdCBtdXN0IG5vdCBoYXZlIGJlZW4gZ29vZC4NCg0KSSB0cmllZCBub3QgdG8gc21pbGUgYnV0IEkgY291bGRuJ3QgaGVscCBidXQgYmUgYSBsaXR0bGUgZXhjaXRlZCBzaW5jZSBJIGhhZCBzb21ld2hlcmUgdG8gbGl2ZSBhZ2Fpbiwgc29tZXdoZXJlIHRvIGZpdCBpbiBvciB0cnkgdG8gZml0IGluIGFnYWluLiAgSSBjb3VsZG7igJl0IGJlbGlldmUgdGhhdCBIYW1pbHRvbidzIGRhZCwgdGhlIERlYW4sIGFuZCBnb25lIHRvIGJhdCBmb3IgbWUsIHNvIHRvIHNwZWFrLiAgSSBrbmV3IHRoYXQgRmlubiBtdXN0IGhhdmUgaGFkIHNvbWV0aGluZyB0byBkbyB3aXRoIGl0LCBhbmQgSSBtYWRlIGEgbWVudGFsIG5vdGUgdG8gc2F5IHRoYW5rcyB0byBoaW0gbGF0ZXIuDQoNClVuZm9ydHVuYXRlbHksIEhhbWlsdG9uJ3Mgb3RoZXIgY29tbWVudCwgdGhlIG9uZSBhYm91dCBteSBsb3ZlIGxpZmUgbm93IGhhZCBtZSBmZWVsaW5nIGEgbGl0dGxlIGRpc3R1cmJlZC4gIFdoeT8gIEkgd2Fzbid0IHN1cmUsIGJ1dCBJIHdpc2hlZCB0aGF0IEkgaGFkIHNvbWVvbmUgc3BlY2lhbCBpbiBteSBsaWZlLCB3aG8gSSBjb3VsZCBmaWdodCB3aXRoLCBiZSBpbiBsb3ZlIHdpdGggYW5kIHdobyBjb3VsZCBkcml2ZSBtZSBhIGxpdHRsZSBpbnNhbmUgc29tZSB0aW1lcy4gIEhhbWlsdG9uIGFuZCBKYWtlIGhhZCBvbmUgYW5vdGhlciBhbmQgU2NvdXQgYW5kIEJlbGxhIGF0IGxlYXN0IHNoYXJlZCBhIGxvdmUgZm9yIG9uZSBhbm90aGVyIGV2ZW4gaWYgdGhleSBjb3VsZG4ndCBiZSB0b2dldGhlciwgYnV0IHdoYXQgZGlkIEkgaGF2ZT8gIE5vdGhpbmcuICBBIGZldyBkYXRlcyB3aXRoIHRoZSBvY2Nhc2lvbmFsIGdpcmwgYnV0IG5vdGhpbmcgYmV5b25kIHRoZSBvY2Nhc2lvbmFsIG5pZ2h0IG91dC4gIE5vIG9uZSBoYWQgYSBob2xkIG9mIG15IGhlYXJ0Lg0KDQpJIGxvb2tlZCB1cCBhbmQgc2F3IHRoYXQgaXQgd2FzIGRhcmsgb3V0c2lkZSBhbmQgbXkgZnJpZW5kcyB3ZXJlIGdldHRpbmcgcmVhZHkgdG8gbGVhdmUuICBBcyBJIG9wZW5lZCB0aGUgZG9vciB0byB0aGUgZGluZXIgYW5kIHdhaXRlZCBmb3IgbXkgZnJpZW5kcyB0byBmaWxlIG91dCBwYXN0IG1lLCBJIHdvbmRlcmVkIG1vbWVudGFyeSBpZiBJIHdvdWxkIGV2ZXIgZmluZCBsb3ZlLiBBZnRlciBhbGwsIG15IG93biBmYXRoZXIgZGlkbid0IGV2ZW4gbG92ZSBtZSwgaG93IGNvdWxkIEkgZXZlbiBiZWdpbiB0byBob3BlIHRoYXQgc29tZW9uZSBlbHNlIG1pZ2h0Pw0KDQo8Y2VudGVyPioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoNCkZJTk4NCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio8L2NlbnRlcj4NCg0KTXkgaGFuZCB3YXMgb24gdGhlIGRvb3Jrbm9iLCB3aGVuIEkgaGVhcmQgc29tZW9uZSBrbm9jayBmcm9tIHRoZSBvdGhlciBzaWRlLiAgSSBvcGVuIHRoZSBkb29yIG5vdCByZWFsbHkga25vd2luZyB3aGF0IHRvIGV4cGVjdCwgYW5kIGZvdW5kIHRoZSBEZWFuIHN0YW5kaW5nIHRoZXJlIGdldHRpbmcgcmVhZHkgdG8ga25vY2sgYWdhaW4uICAiT2gsIHlvdSBhcmUgaGVyZS4gIEkgdGhvdWdodCBJIG1pZ2h0IGhhdmUgbWlzc2VkIHlvdS4iIERlYW4gRmxlbW1pbmcgc2FpZCBpbnN0ZWFkIG9mIGEgZ3JlZXRpbmcuDQoNCiJObywgYnV0IEkgd2FzIGp1c3Qgb24gbXkgd2F5IG91dC4gIFdpbGwgdGhpcyB0YWtlIGxvbmcgZG8geW91IHRoaW5rPyIgSSByZXBsaWVkLCB1bnN1cmUgb2Ygd2hhdCBoZSB3YW50ZWQuDQoNCiJOb3QgYXQgYWxsLiAgSSBqdXN0IHdhbnRlZCB0byB0YWxrIHRvIHlvdSBhYm91dCB5b3VyIGNsYXNzIHBsYW5zIGZvciB0aGUgRmFsbCBzZXNzaW9uLCBhbmQgdGVsbCB5b3UgYWJvdXQgb3VyIG5ldyBKYXBhbmVzZSB0ZWFjaGVyLCBNciBGdWppd2FyYS4gIFRoZSBib2FyZCBoYXMgZGVjaWRlZCB0aGF0IGl0IHdvdWxkIGJlIGEgZ29vZCBpZGVhIHRvIGludHJvZHVjZSB0aGUgc3R1ZGVudHMgdG8gYW5vdGhlciBsYW5ndWFnZS4gIFRoZSBjbGFzc2VzIHdpbGwgYmUgQ28tRWQgb2ZmY291cnNlIGFuZCB5b3Ugd2lsbCBuZWVkIHRvIG9yZ2FuaXNlIHRvIHRha2Ugc2V2ZXJhbCBjbGFzc2VzIHRvZ2V0aGVyLCBib3RoIEVuZ2xpc2ggYW5kIEphcGFuZXNlLiAgV2Ugd2lsbCBhbHNvIGJlIGhhdmluZyB0d28gSmFwYW5lc2UgZXhjaGFuZ2Ugc3R1ZGVudHMgY29taW5nIHRvIFJhd2xleS4gIE9uZSB0byBSYXdsZXkgZ2lybHMgYW5kIG9uZSB0byBSYXdsZXkgYm95cy4gIFdlIGFsc28gd2lsbCBiZSBzZW5kaW5nIHR3byBzdHVkZW50cyB0byBKYXBhbi4gIFVuZm9ydHVuYXRlbHksIEkgaGFkIHRvIGZpbmQgc3R1ZGVudHMgd2hvIGFscmVhZHkgaGFkIGFuIHVuZGVyc3RhbmRpbmcgb2YgdGhlIEphcGFuZXNlIGxhbmd1YWdlLiAgU28gSSBoYWQgdG8gc2VuZCB0d28gZ2lybHMuIiBUaGUgRGVhbiBwYXVzZWQgaGlzIHNwZWVjaCB0byBsb29rIGRvd24gYXQgYSBwaWVjZSBvZiBwYXBlciB0aGF0IGhlIGhlbGQgaW4gaGlzIGhhbmQuICAiQSBNaXNzIFBhaWdlIEJlbm5ldHQgYW5kIGEgTWlzcyBDYXJvbGluZSBCdXNzZS4gIE91ciBKYXBhbmVzZSBleGNoYW5nZSBzdHVkZW50cyBhcmUgYSBNaXNzIFl1a2EgSGlnYXNoaSBhbmQgYSBNciBLZW4gU2FuaWdpLiAgSXQgd2lsbCBiZSB5b3VyIGpvYiB0byBpbnN0cnVjdCB0aGVtIG9uIHRoZSBqb3lzIG9mIG91ciBFbmdsaXNoIGxhbmd1YWdlIGFuZCBvdXIgd3JpdHRlbiB3b3JkLiIgIFdoZW4gaGUgd2FzIGZpbmlzaGVkIHRoZSBEZWFuIHN0ZXBwZWQgaW5zaWRlIHRoZSByb29tLiAgSSBnYXRoZXJlZCB0aGF0IHRoaXMgd2FzIGdvaW5nIHRvIHRha2UgYXdoaWxlLg0KDQpJIHNpZ2hlZDsgZmluYWxseSBJIGhhZCB0aG91Z2h0IG15IGxpZmUgd2FzIGdldHRpbmcgYmFjayB0byBub3JtYWwuICBUaGUgYWZmYWlyIHdpdGggS2F0ZSB3YXMgb3ZlciBhbmQgdGhlIGJ1c2luZXNzIHdpdGggV2lsbCdzIHNjaG9sYXJzaGlwIGhhZCBiZWVuIHJlc29sdmVkLCBidXQgSSBndWVzcyBJIHdhcyB3cm9uZy4gIExpZmUgc3RpbGwgaGFkIHNvbWUgc3VycHJpc2VzIGluIHN0b3JlIGZvciBtZS4gIEkgZm9sbG93ZWQgdGhlIERlYW4gb3ZlciB0byBteSBkZXNrIGFuZCB3YWl0ZWQgZm9yIGhpbSB0byBjb250aW51ZS4NCg0KPGNlbnRlcj4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpNT1JHQU5BDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqPC9jZW50ZXI+DQoNCk5ldyBSYXdsZXkgd2FzIGRpZmZlcmVudCBmcm9tIHdoYXQgSSB0aG91Z2h0IGl0IHdvdWxkIGJlIGxpa2UsIEkgbWVhbiBkYWQgaGFkIGJlZW4gc28gZGVzcGVyYXRlIHRvIGdldCBhd2F5IGZyb20gaGVyZSwgYnV0IGl0IHJlYWxseSB3YXMgYSBuaWNlIHBsYWNlLiAgQXMgSSB3YXRjaGVkIHRoZSB0b3duc3Blb3BsZSBsYXVnaCBhbmQgc21pbGUsIGFzIHRoZXkgd2VudCBhYm91dCB0aGVpciBldmVyeWRheSByb3V0aW5lLCBJIHdvbmRlcmVkIHdoeSBJIGNvdWxkbid0IGhhdmUgYmVlbiBib3JuIGhlcmUuIFN1cmUgdGhleSB3ZXJlIGFsbCBiYXNpY2FsbHkgbG93ZXIgY2xhc3MgYW5kIHRoZXkgaGFkIHdvcmtlZCByZWFsbHkgaGFyZCBhbGwgdGhlaXIgbGl2ZXMsIGJ1dCB0aGUgcGVvcGxlIHdobyBsaXZlZCBoZXJlIHNlZW1lZCBoYXBweS4gIA0KDQpJIHdvbmRlcmVkIHRoZW4gaWYgZGFkIGhhZCBldmVyIGJlZW4gaGFwcHksIGhlIGxlZnQgaGVyZSBpbiBzZWFyY2ggb2Ygc29tZXRoaW5nIGJldHRlciBhbmQgdGhlbiB3aGVuIGhlIGZpbmFsbHkgZ290IGl0LCBoZSBkZWNpZGVkIGhlIGRpZG4ndCB3YW50IGl0IGFueSBtb3JlLiBVbmZvcnR1bmF0ZWx5IGZvciBtZSwgd2hlbiBoZSBkZWNpZGVkIGhlIGRpZG4ndCB3YW50IHRoZSBsaWZlIGhlIGhhZCBvYnRhaW5lZCwgaXQgbWVhbnQgaGUgbGVmdCBtZSBiZWhpbmQsIHNvIGhlIGNvdWxkIGNvbWUgYmFjayB0byB0aGUgb25lIHBsYWNlIGhlIGhhZCBiZWVuIHNvIGRlc3BlcmF0ZSB0byBlc2NhcGUgeWVhcnMgZWFybGllci4NCg0KSXQgd2Fzbid0IGxvbmcgYmVmb3JlIEkgcmVhY2hlZCBSYXdsZXkgQWNhZGVteSBmb3IgQm95cyBhbmQgYWZ0ZXIgYXNraW5nIHNvbWVvbmUgZm9yIGRpcmVjdGlvbnMgSSBmb3VuZCBteSBkYWQncyByb29tLiAgVGhlIGRvb3Igd2FzIG9wZW4gc28gSSBqdXN0IHdhbGtlZCByaWdodCBpbjsgc3RyYWlnaHQgYXdheSBJIG5vdGljZWQgaG93IHNtYWxsIHRoZSB0d28gcm9vbSB0ZWFjaGluZyBzdWl0ZSB3YXMuICBJdCB3YXMganVzdCBhIHNtYWxsIG1haW4gcm9vbSB0aGF0IGNvbnNpc3RlZCBvZiBhIGxvdW5nZSwgdHdvIGNoYWlycyBhbmQgYSBkZXNrLiAgVGhlcmUgd2FzIGFsc28gYSBzbWFsbCBiYXIgZnJpZGdlIG92ZXIgbmVhciBhIGNvbm5lY3RpbmcgZG9vciB3aGljaCBtdXN0IGxlYWQgdG8gYSBiZWRyb29tLg0KDQpUaGUgbmV4dCB0aGluZyBJIG5vdGljZWQgd2FzIG15IGRhZCwgaGUgd2FzIHN0YW5kaW5nIG92ZXIgbmVhciBoaXMgZGVzayB0YWxraW5nIHRvIGEgZ29vZC1sb29raW5nIG9sZGVyIG1hbi4gIEFub3RoZXIgdGVhY2hlciBtYXliZT8gIEkgY2xlYXJlZCBteSB2b2ljZTsgdGhleSBzdGlsbCBoYWQgbm90IG5vdGljZWQgbWUgeWV0LiAgIkRhZD8iIEkgYXNrZWQsIGRyYXdpbmcgYm90aCBvZiB0aGUgbWVuJ3MgYXR0ZW50aW9uIHRvd2FyZHMgdGhlIGRvb3IuICBNeSBkYWQgbG9va2VkIHN0YXItc3RydWNrLCBJIHdvbmRlcmVkIGJyaWVmbHkgaWYgaGUgcmVjb2duaXNlZCBtZS4gIEkga25ldyBJIGhhZCBjaGFuZ2VkIGEgbG90IGluIHRoZSBwYXN0IHR3ZWx2ZSB5ZWFycyBzaW5jZSBoZSBsYXN0IHNhdyBtZS4gIEl0IHdhcyBmdW5ueSBoZSBsb29rZWQgdGhlIHNhbWUgdG8gbWU7IGl0IHdhcyBhcyBpZiBoZSBoYWQgbm90IGFnZWQgYSBiaXQuICBUaGUgb25seSB0aGluZyB0aGF0IHdhcyByZWFsbHkgZGlmZmVyZW50IHdhcyBoaXMgaGFpciwgaXQgd2FzIGxvbmdlciB0aGFuIEkgcmVtZW1iZXJlZCBhbmQgaXQgbG9va2VkIGtpbmQgb2YgZ3JlYXN5LiAgV2hlbiBuZWl0aGVyIG1hbiBzcG9rZSwgSSB0aG91Z2h0IHRvIHNwdXIgdGhlbSBpbnRvIGFjdGlvbiwgc28gSSB3YWxrZWQgb3ZlciB0byB0aGUgZGVzay4gQXMgSSBuZWFyZWQgdGhlIGRlc2sgSSBsb29rZWQgYXQgbXkgZmF0aGVyIGFuZCBhc2tlZCwgIldoYXQncyB3aXRoIHRoZSBoYWlyIERhZD8gIFRyeWluZyB0byBsb29rIHlvdW5nZXI/IiAgSSBoYWQgaGlzIGF0dGVudGlvbiBub3c7IGhlIGxlYW5lZCB0b3dhcmRzIG1lIGFzIGlmIHRvIGdldCBhIGJldHRlciBsb29rLg0KDQoiTW9yZ2FuLOKAnSBoZSBzYWlkIGluIGEgd2FybmluZyB0b25lLCBub3QgYW5zd2VyaW5nIG15IHF1ZXN0aW9ucy4gIOKAnFdoYXQgYXJlIHlvdSBkb2luZyBoZXJlPyIgIA0KDQoiV2VsbCBNb20ncyBnb25lIG9uIHZhY2F0aW9uIHdpdGggaHVzYmFuZCBudW1iZXIgc2l4IGFuZCBzaGUnbGwgYmUgZ29uZSBmb3Igb3ZlciBlaWdodCBtb250aHMuICBTbywgdGhvdWdodCBpdCBtaWdodCBiZSBhIGdvb2QgdGltZSB0byBnZXQgdG8ga25vdyB5b3UgYWdhaW4sIGFmdGVyIGFsbCBpdCBoYXMgYmVlbiB0d2VsdmUgeWVhcnMgc2luY2UgSSBzYXcgeW91IGxhc3QhIiAgSSB3YXMgcGlzc2VkIG9mZiB3aXRoIGhpbSBidXQgSSBxdWlja2x5IGZvcmdvdCBteSBhbmdlciB3aGVuIHRoZSBtYW4gc3RhbmRpbmcgbmV4dCB0byBteSBkYWQgY2xlYXJlZCBoaXMgdGhyb2F0LiAgSG93IGVtYmFycmFzc2luZywgSSBoYWQgdG90YWxseSBmb3Jnb3R0ZW4gYWJvdXQgaGlzIHByZXNlbmNlLiAgTXkgZGFkIHR1cm5lZCB0byBsb29rIGF0IHRoZSBtYW4gYXMgaWYgaGUgZGlkbid0IGtub3cgd2hlcmUgaGUgaGFkIGNvbWUgZnJvbTsgb2J2aW91c2x5IGhlIGhhZCBmb3Jnb3R0ZW4gaGUgd2FzIHRoZXJlIGFsc28uICANCg0KIkRlYW4gRmxlbW1pbmcsIHRoaXMgaXMgbXkgRGF1Z2h0ZXIgTW9yZ2FuLuKAnSBoZSBpbnRyb2R1Y2VkIG1lIHRvIHRoZSBEZWFuIGJlZm9yZSB0dXJuaW5nIHRvIG1lIGFuZCBzYXlpbmcsIOKAnE1vcmdhbiwgdGhpcyBpcyBteSBCb3NzLCBEZWFuIEZsZW1taW5nLiIgIFRoZXJlIHdhcyBzb21ldGhpbmcgaW4gaGlzIGV5ZXMgYXMgaGUgbG9va2VkIGF0IG1lIGJ1dCBJIGNvdWxkbid0IHJlYWQgd2hhdCBpdCB3YXMuDQoNCiJOaWNlIHRvIG1lZXQgeW91IE1vcmdhbiwgaGF2ZSB5b3UgY29tZSB0byBqb2luIG91ciBzY2hvb2wgdGhlbj8iICBUaGUgRGVhbiBoYWQgYSBraW5kIHNtaWxlIHRoYXQgcmVhY2hlZCBoaXMgZXllcywgSSB3b25kZXJlZCBpZiBoZSBoYWQgYW55IGtpZHMuICBJIGtuZXcgdGhhdCBoZSB3b3VsZCBuZXZlciBsZWF2ZSB0aGVtIGJlaGluZCwgaW4gc2VhcmNoIG9mIGEgYmV0dGVyIGxpZmUuDQoNCkkgd2FzIHVuc3VyZSBvZiBob3cgdG8gZ28gYWJvdXQgYW5zd2VyaW5nIGhpcyBxdWVzdGlvbiwgYmVjYXVzZSBJIHJlYWxseSBkaWRuJ3Qgd2FudCB0byBsaWUgdG8gaGltLiAgIkkgaGF2ZSBhbGwgbXkgdGhpbmdzIG91dCBpbiB0aGUgY2FyLCBidXQgSSdtIG5vdCBleGFjdGx5IGVucm9sbGVkLiAgSSB3YXMga2luZCBvZiBob3BpbmcgdGhhdCBJIHdvdWxkIGJlIGFibGUgdG8gc3RheSBoZXJlIHdpdGggRGFkIGFuZCB0YWtlIGNsYXNzZXMgaGVyZSB3aXRoIGhpbS4iICBNeSB2b2ljZSB3YXMgZnVsbCBvZiBob3BlIHdoZW4gSSBzYWlkIHRob3NlIGxhc3QgZmV3IHdvcmRzLCBiZWNhdXNlIHRoZXkgd2VyZSBhcyBob25lc3QgYXMgSSBjb3VsZCBoYXZlIGJlZW4uDQoNCk15IERhZCB3YXMgc2hha2luZyBoaXMgaGVhZCB3aGVuIEkgbG9va2VkIGF0IGhpbS4gICJJIGRvbid0IGtub3cgTW9yZ2FuLCB3aGVyZSBhcmUgeW91IGdvaW5nIHRvIHNsZWVwPyAgTXkgcm9vbeKAmXMganVzdCBhcmUgbm90IHJlYWxseSBiaWcgZW5vdWdoIGZvciB0aGUgdHdvIG9mIHVzLiIgIEhlIHN0YXRlZCBoaXMgdm9pY2Ugc291bmRlZCBzdHJhaW5lZCB0byBtZS4NCg0KIkkgZ3Vlc3MgSSBjb3VsZCBzbGVlcCBvbiB0aGUgY291Y2guLi4uIiBJIHN0YXJ0ZWQgdG8gc2F5IGJ1dCBEYWQgaW50ZXJydXB0ZWQgbWUuDQoNCiJObywgdGhhdCB3b24ndCBkbyBhdCBhbGwuICBNb3JnYW4geW91J3JlIGEgc2l4dGVlbiB5ZWFyIG9sZCBnaXJsIGFuZCB5b3Ugd291bGRuJ3QgZ2V0IGFueSBwcml2YWN5IGxpdmluZyBsaWtlIHRoYXQuIiAgSGUgbG9va2VkIGF0IGEgbG9zcyBhbmQgZm9yIGEgbW9tZW50IEkgYmVnYW4gdG8gaG9wZSB0aGF0IGhlIG1pZ2h0IGFjdHVhbGx5IHdhbnQgbWUgdG8gc3RheS4NCg0KIlNoZSBjb3VsZCBnbyBvdmVyIHRvIHRoZSBHaXJscyBjYW1wdXMsIGJ1dCBpdCBkZWZlYXRzIHRoZSBwdXJwb3NlIG9mIHlvdSBzcGVuZGluZyB0aW1lIHRvZ2V0aGVyLiAgSSBrbm93ISAgTW9yZ2FuIGNvdWxkIG1vdmUgaW50byB0aGUgcm9vbSBuZXh0IHRvIE1yIFByYXR0LCBpdCdzIGp1c3QgYWNyb3NzIHRoZSBoYWxsLiAgWW91IGtub3cgdGhlIG9uZSBGaW5uLCBpdCB1c2VkIHRvIGJlIHRoZSBvbGQgc3RvcmFnZSByb29tLiAgSSBoYWQgaXQgcmVub3ZhdGVkIG92ZXIgdGhlIFN1bW1lciBicmVhay4gIEthdGUgYW5kIEkgdGhvdWdodCBIYW1pbHRvbiBtaWdodCBsaWtlIHRvIG1vdmUgaW4gdGhlcmUgYnV0IGhlIHRvbGQgdXMgdGhhdCBoZSB3YW50ZWQgdG8gc2hhcmUgYSByb29tIHdpdGggSmFrZS4gIFNvIHRoYXQgbGVhdmVzIHRoZSByb29tIGZyZWUsIHdoYXQgZG8geW91IHRoaW5rPyIgIERlYW4gRmxlbW1pbmcgYXNrZWQsIGNvbWluZyB0byBteSByZXNjdWUuICBJIGtuZXcgdGhhdCBJIHdhcyBnb2luZyB0byBlbmQgdXAgbGlraW5nIGhpbSBhbmQgSSBjb3VsZG4ndCB3YWl0IHRvIG1lZXQgaGlzIHNvbiwgaGUgd2FzIGEgbHVja3kgYm95IHRvIGhhdmUgdGhlIERlYW4gZm9yIGhpcyBmYXRoZXIuICBJIHdvbmRlcmVkIGlmIGhlIGxvb2tlZCBsaWtlIGhpbS4NCg0KIkl0IGNvdWxkIHdvcmsuIFdoYXQgZG8geW91IHRoaW5rIE1vcmdhbj8iIERhZCBsb29rZWQgYXQgbWUgYW5kIGtpbmQgb2Ygc21pbGVkIGJ1dCBpdCBkaWRuJ3QgcmVhbGx5IHJlYWNoIGhpcyBleWVzLiAgIk5vdyB3aGF0IGFyZSB3ZSBnb2luZyB0byBkbyBhYm91dCBjbGFzc2VzPyIgaGUgYXNrZWQuDQoNCiJJIHRoaW5rIGl0J3MgYSBncmVhdCBpZGVhLiAgV2hlbiBjYW4gSSBtb3ZlIGluPyAgQ2xhc3Nlcz8gIENhbid0IEkganVzdCBnbyB0byB0aGUgY2xhc3NlcyBoZXJlLCByYXRoZXIgdGhhbiBoYXZlIHRvIGdvIGNyb3NzIHRoZSB0d28gY2FtcHVzZXMgdG8gZ2V0IHRvIGNsYXNzZXMgZXZlcnlkYXk/IiAgSSBzbWlsZWQgYmFjayBhdCBEYWQuLi5hdCBsZWFzdCBoZSB3YXMgdHJ5aW5nLiAgQWZ0ZXIgSSBmaW5pc2hlZCBzcGVha2luZyBJIHdhaXRlZCBmb3Igc29tZSBvbmUgdG8gYW5zd2VyIG15IHF1ZXN0aW9ucy4NCg0KIllvdSBjYW4gbW92ZSBpbiB0b2RheSBpZiB5b3Ugd2FudCBNb3JnYW4sIGFsbCB0aGUgZnVybml0dXJlIGlzIGFscmVhZHkgaW4gdGhlIHJvb20uICBJJ20gbm90IHJlYWxseSBzdXJlIHdoYXQgdG8gZG8gYWJvdXQgdGhlIGNsYXNzZXMgdGhvdWdoLiAgSSB0aGluayB0aGUgYm9hcmQgb2YgdHJ1c3RlZXMgbWlnaHQgbWFrZSBhbiBleGNlcHRpb24gaW4geW91ciBjYXNlIGR1ZSB0byB0aGUgZmFjdCB0aGF0IEZpbm4gaXMgeW91ciBmYXRoZXIgYnV0IEknbGwgaGF2ZSB0byBydW4gaXQgYnkgdGhlbSBmaXJzdC4gIEkgZG9uJ3Qgc2VlIHdoeSBpdCB3aWxsIGJlIGEgcHJvYmxlbSBmb3IgeW91IHRvIGF0dGVuZCBjbGFzc2VzIGhlcmUgb24gdGhlIEJveXMgY2FtcHVzLCBhcyBsb25nIGFzIHlvdSBhcmUgZW5yb2xsZWQgaW4gYXMgbWFueSBvZiB0aGUgQ28tRWQgY2xhc3NlcyBhcyBwb3NzaWJsZS4gIFRoZSBvbmx5IHByb2JsZW0gdGhhdCBJIGNhbiBmb3Jlc2VlIGlzIHRoZSBwaHlzaWNhbCBlZHVjYXRpb24gYXNwZWN0IG9mIHRoZSBjdXJyaWN1bHVtLCBkdWUgdG8geW91IGJlaW5nIGEgZmVtYWxlIHlvdSByZWFsbHkgY2FuIG5vdCB0YWtlIHBhcnQgaW4gdGhlIGNyZXcgdGVhbS4iICBUaGUgRGVhbiBsb29rZWQgYXQgbXkgZmF0aGVyIHdoZW4gaGUgZmluaXNoZWQgaGlzIGxpdHRsZSBzcGVlY2ggYW5kIHdhaXRlZCBmb3IgYSBzb2x1dGlvbiB0byByZXZlYWwgaXRzZWxmIHRvIHVzLg0KDQoiTW9yZ2FuIHJ1bnMuICBDcm9zcy1jb3VudHJ5LCB0aGF0IGtpbmQgb2YgdGhpbmcuICBTaGUgY291bGQgcnVuIGFmdGVyIHRoZSBFbmdsaXNoIHBhcnQgb2YgdGhlIGxlc3NvbiBpcyBvdmVyIGFuZCB0aGUgcmVzdCBvZiB0aGUgY2xhc3MgaXMgY3Jld2luZy4iIEkgd2FzIHNob2NrZWQgd2hlbiBteSBEYWQgbWVudGlvbmVkIG15IHJ1bm5pbmc7IEkgd2Fzbid0IGF3YXJlIGhlIGV2ZW4ga25ldyBJIGV4aXN0ZWQsIGxldCBhbG9uZSB0aGF0IHJ1bm5pbmcgd2FzIG15IHBhc3Npb24uDQoNCiJUaGF0IHdvdWxkIHdvcmsgb3V0IG5pY2VseS4gIEFjdHVhbGx5IG91ciB0cmFjayB0ZWFtIGlzIGFsd2F5cyBzaG9ydCBhIENyb3NzLWNvdW50cnkgcnVubmVyIGZvciBhbGwgb2YgdGhlIG1lZXRzLCBtYXliZSB0aGlzIHllYXIgd2UgY2FuIHdpbiBzb21lIHJhY2VzIHdpdGggTW9yZ2FuIG9uIHRoZSB0ZWFtLiAgV2hhdCBkbyB5b3Ugc2F5IE1vcmdhbiwgYXJlIHlvdSBpbnRlcmVzdGVkPyIgIFRoZSBEZWFuIGxvb2tlZCByZWxpZXZlZCB0aGF0IGV2ZXJ5dGhpbmcgaGFkIHdvcmtlZCBvdXQ7IGhlIGxvb2tlZCBhdCBtZSBleHBlY3RhbnRseSB3YWl0aW5nIGZvciBteSBhbnN3ZXIuDQoNCiJJIHdvdWxkIHJlYWxseSBsb3ZlIHRvLiIgIEkgcmVwbGllZCwgd2F0Y2hpbmcgaGltIHNtaWxlLg0KDQoiV2VsbCwgSSBoYXZlIGxvdHMgdG8gb3JnYW5pc2UgYmVmb3JlIGNsYXNzZXMgc3RhcnQsIHNvIEkgYmV0dGVyIGJlIG9mZi4gIE1vcmdhbiBpdCB3YXMgdmVyeSBuaWNlIHRvIG1lZXQgeW91IGFuZCBkb24ndCB3b3JyeSBJJ2xsIGdvIGdpdmUgdGhlIGJvYXJkIG9mIHRydXN0ZWVzIGEgY2FsbCBub3cgYW5kIG1ha2Ugc3VyZSBldmVyeXRoaW5nIHdvcmtzIG91dCzigJkgaGUgZmluaXNoZWQgdGFsa2luZyBhbmQgbG9va2VkIGF0IG15IERhZCwg4oCYRmlubiB0aGUgY2xhc3MgcGxhbnMgZm9yIHRoaXMgU2Vzc2lvbiBsb29rIGZpbmUuICBJJ2xsIHNlZSB5b3UgYm90aCBsYXRlci4iICBBbmQgd2l0aCB0aGF0IGhlIHdhcyBnb25lLg0KDQpJIHR1cm5lZCBiYWNrIHRvIGxvb2sgYXQgRGFkLCAiU28sIEkgZ3Vlc3MgSSdsbCBnbyBtb3ZlIGluLiAgSXQgd2FzIGdvb2QgdG8gc2VlIHlvdSBhZ2FpbiBGaW5uLiIgSSBzYWlkIGFuZCB0aGVuIEkgdHVybmVkIHRvIGxlYXZlLCB3ZSdkIGJvdGggaGFkIGVub3VnaCBmYW1pbHkgYm9uZGluZyBmb3Igb25lIGRheSBJJ20gc3VyZSB0b21vcnJvdyB3aWxsIGJlIHNvb24gZW5vdWdoIGZvciBwYXJ0IHR3byBvZiBvdXIgcmVjb25jaWxpYXRpb24uIEkgd2FzIGFsbW9zdCBhdCB0aGUgZG9vciB3aGVuIERhZCBzYWlkIG15IG5hbWVkIG9uY2UsIGhpcyB2b2ljZSB3YXMgbG93IGFuZCBzZXJpb3VzLCBhbmQgb2J2aW91c2x5IHdlIHdlcmUgbm90IHF1aXRlIGZpbmlzaGVkIHlldC4gICJXaGF0PyIgSSBhc2tlZCwgdHVybmluZyB0byBmYWNlIGhpbSBvbmNlIGFnYWluLg0KDQoiV2hhdCdzIHdpdGggdGhlIHRhdHRvbyBNb3JnYW4/ICBUcnlpbmcgdG8gcGlzcyBtZSBvZmY/IiAgSGUgYXNrZWQgaGlzIGZhY2Ugc3Rvcm15LiAgSXQgd2FzIHNvIGxpa2UgaGltIHRvIHVzZSBteSBvd24gcXVlc3Rpb25zIGFnYWluc3QgbWUuDQoNCiJOb3QgcmVhbGx5LCBjYXJlZnVsIERhZCBJIG1pZ2h0IGJlZ2luIHRvIHRoaW5rIHlvdSBhY3R1YWxseSBjYXJlLiIgIEkgdHVybmVkIGFuZCB3YWxrZWQgdG8gdGhlIGRvb3IuICBBcyBJIHJlYWNoZWQgZm9yIHRoZSBkb29ya25vYiBoZSBzcG9rZSBhZ2Fpbi4NCg0KIklzIGl0IHJlYWw/IiBoZSBhc2tlZCBjbGVhcmx5IHRyeWluZyB0byBrZWVwIGhpcyBjb29sLg0KDQoiSXQgYmxvb2R5IHdlbGwgYmV0dGVyIGJlLCBpdCBjb3N0IG1lIGZpdmUgaHVuZHJlZCBkb2xsYXJzISIgSSBhbnN3ZXJlZCBhbmQgYmVmb3JlIGhlIGNvdWxkIHNheSBhbnl0aGluZyBlbHNlIEkgb3BlbmVkIHRoZSBkb29yIGFuZCByYW4gZG93biB0aGUgaGFsbCB0b3dhcmRzIHRoZSBwYXJraW5nIGxvdC4NCg0KPGNlbnRlcj4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCg0KUllERVINCg0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqPC9jZW50ZXI+DQoNCkJsb29keSB3b25kZXJmdWwsIEkgd2FzIGJhY2sgYXQgdGhpcyBzaGl0IGhvbGUgZm9yIEFtZXJpY2FuIGJyYXRzIGZvciBhbm90aGVyIHdob2xlIHNlc3Npb24uIE5vdyB0aGF0IEkgaGFkIHN1Y2Nlc3NmdWxseSBhbGllbmF0ZWQgdGhlIHdob2xlIHBvcHVsYXRpb24gb2YgUmF3bGV5IEFjYWRlbXksIEkgd29uZGVyZWQgd2hhdCBtb3JlIGRhbWFnZSBJIGNvdWxkIHBvc3NpYmxlIGRvLiBJIG1lYW4gV2lsbCBLcnVkc2tpIGFuZCBoaXMgbGl0dGxlIGdyb3VwIG9mIGZyaWVuZHMgaGFkIGJlZW4gbW9zdCBlbnRlcnRhaW5pbmcgbGFzdCBzZXNzaW9uIGJ1dCB0aGV5IGFsc28gc2VlbWVkIHRvIHN0aWNrIHRvZ2V0aGVyLCBzbyBjYXVzaW5nIHRyb3VibGUgaW4gdGhlIGdyb3VwIHdhc24ndCBnb2luZyB0byBiZSBlYXN5LiBXaHksIHlvdSBvbmx5IG5lZWRlZCB0byBsb29rIGF0IGhvdyB0aGV5IGRlYWx0IHdpdGggSGFtaWx0b24gYW5kIEpha2UncyBob21vc2V4dWFsaXR5IHRvIHNlZSB0aGF0IHRoZXkgZGlkbid0IGV2ZW4gY2FyZS4NCg0KTXkgbWluZCB3YXMgZnVsbCBvZiBwbG90cyBhbmQgc2NoZW1lcyBhcyBJIGVudGVyZWQgdGhlIGRvcm1zLCBzbyBJIGRpZG4ndCBzZWUgaGVyIHJpZ2h0IGF3YXkuICBJIHdhbGtlZCBzdHJhaWdodCBpbnRvIGhlciwgYW5kIHNoZSB3YXMgbm90IGltcHJlc3NlZC4gU2hlIGxlYW5lZCBmb3J3YXJkIGFuZCBwdWxsZWQgbXkgZWFycGhvbmVzIGZyb20gbXkgaGVhZCBiZWZvcmUgcmF0dGxpbmcgb2ZmIGEgbGlzdCBvZiBvYnNjZW5pdGllcyB0aGF0IGV2ZW4gSSBkb24ndCBkYXJlIHRvIHJlcGVhdC4gIEkgc21pbGVkIGF0IGhlcjsgc2hlIHdhcyBmdWxsIG9mIHNwaXRmaXJlLCBhIHJlZCBoZWFkIHNoZS1kZXZpbCB3aXRoIHRoZSBncmVlbmVzdCBleWVzIHRoYXQgSSd2ZSBldmVyIHNlZW4gYW5kIGEgYm9keSB0aGF0IGNvdWxkIG1ha2UgZXZlbiBhIGRlYWQgbWFuIGhhcHB5LiAgU2hlIHR1cm5lZCB0aGVuIGFzIGlmIHRvIHdhbGsgYXdheSBhbmQgSSBub3RpY2VkIGEgdGF0dG9vIG9uIGhlciBsb3dlciBiYWNrIGFib3V0IHRoZSBzaXplIG9mIG15IGhhbmQsIGl0IHdhcyBvZiBhIGZhaXJ5Lg0KCQ0KSSBkaWRuJ3Qgd2FudCBoZXIgdG8gbGVhdmUgeWV0OyBJIHdhbnRlZCB0byBrbm93IHdob20gc2hlIHdhcywgYW5kIHdoYXQgc2hlIHdhcyBkb2luZyBpbiB0aGUgYm95J3MgZG9ybXMuICAiQW5vdGhlciBmaW5lIEFtZXJpY2FuIHNwZWNpbWVuLCBhcmUgYWxsIEFtZXJpY2FuIGdpcmxzIGFzIHNsdXR0eSBhcyB5b3U/IiBJIGhhZCBiYXJlbHkgZmluaXNoZWQgbXkgc2VudGVuY2Ugd2hlbiBzaGUgdHVybmVkIGFyb3VuZCBhIGxvb2sgb2YgZnVyeSBldGNoZWQgdXBvbiBoZXIgYmVhdXRpZnVsIGZhY2UuICANCg0KIkJyaXRpc2gsIEkgc2hvdWxkIGhhdmUga25vd24hIiBXYXMgaGVyIHJldG9ydCwganVzdCBiZWZvcmUgc2hlIHNsYXBwZWQgbXkgZmFjZS4gIFRoZSBzdGluZyBvZiBoZXIgcGFsbSBhZ2FpbnN0IG15IGNoZWVrIGRpZG4ndCBzdXJwcmlzZSBtZSBhcyBtdWNoIGFzIHRoZSBleHByZXNzaW9uIG9uIGhlciBmYWNlIGFmdGVyIHNoZSByZWFsaXNlZCB3aGF0IHNoZSBoYWQgZG9uZS4gIA0KCQ0KVGhpcyBsaXR0bGUgcHJpbmNlc3Mgd2FzIHRyeWluZyB0byBiZSBhIGRyYWdvbiwgYnV0IEkgY291bGQgc2VlIGhlciBzb2Z0bmVzcy4gIEkgbG9va2VkIG1vcmUgY2xvc2VseSBhdCB3aGF0IHNoZSB3YXMgd2VhcmluZywgc2hlIGhhZCBvbmUgdGhlIHRpZ2h0ZXN0LCBzbWFsbGVzdCBwYWlyIG9mIGRlbmltIHNob3J0cyB0aGF0IEkgaGFkIGV2ZXIgc2VlbiBvbiBhIGdpcmwgYW5kIGEgcGluayBiaWtpbmkgdG9wLCBtYWRlIGZyb20gbGVhdGhlci4gIERpZG4ndCB0aGUgZ2lybCByZWFsaXNlIHRoYXQgaXQgd2FzIEZhbGw/ICBTaGUgc3Rvb2QgbG9va2luZyBhdCB0aGUgZGFtYWdlIHNoZSBoYWQgaW5mbGljdGVkLCBiZWZvcmUgc2hvY2tpbmcgbWUgb25jZSBhZ2Fpbi4gIEhlciBleWVzIGxpdCB1cCBhcyBzaGUgc21pbGVkLCBhbmQgc2hlIGFnYWluIHJlYWNoZWQgZm9yIG15IGZhY2UuICBJIHRyaWVkIG5vdCB0byBmbGluY2ggYXMgc2hlIGJyb3VnaHQgaGVyIGhhbmRzIHVwIHRvIG15IGZhY2U7IG9ubHkgaW5mbGljdGluZyBwYWluIHdhc24ndCBoZXIgcHVycG9zZSB0aGlzIHRpbWUuICBJIGJhcmVseSBmZWx0IGl0IGFuZCBpdCB3YXMgb3ZlciBiZWZvcmUgSSBrbmV3IGl0IGJ1dCBzaGUgaGFkIGxpY2tlZCBteSBmYWNlIHdoZXJlIGp1c3QgbWludXRlcyBlYXJsaWVyIHNoZSBoYWQgc2xhcHBlZCBpdCwgYXMgaWYgdHJ5aW5nIHRvIHRha2UgdGhlIHN0aW5nIGluZmxpY3RlZCBieSBoZXIgaGFuZCBhd2F5LiAgU2hlIHNtaWxlZCBhdCBtZSBhZ2FpbiBiZWZvcmUgc2F5aW5nLCAiWW91IGFuZCBtZSB3ZSdyZSBnb2luZyB0byBiZSB2ZXJ5IGdvb2QgZnJpZW5kcywiIHRoZW4gc2hlIGp1c3QgdHVybmVkIGFuZCBsZWZ0IGJlZm9yZSBJIGNvdWxkIHN0b3AgaGVyLg0KDQpJIHN0b29kIHRoZXJlIGluIHRoZSBoYWxsIGR1bWJmb3VuZGVkLCB3aG8gd2FzIHRoYXQgZ2lybD8gQW5kIHdoYXQgZGlkIHNoZSBtZWFuIGFib3V0IHVzIGJlaW5nIGZyaWVuZHM/ICBIZXIga2lzcywgb3IgaGVyIGxpY2sgaGFkIHNoYWtlbiBtZSwgSSB3b25kZXJlZCBicmllZmx5IGlmIEkgaGFkIGZpbmFsbHkgbWV0IG15IG1hdGNoLg0KDQo8Y2VudGVyPioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpIQU1JTFRPTg0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKio8L2NlbnRlcj4NCg0KSSBoYWQgYmVlbiBkeWluZyB0byBiZSBhbG9uZSB3aXRoIEpha2UgYWxsIGFmdGVybm9vbiwgYnV0IG5vdyB0aGF0IHdlIHdlcmUgZmluYWxseSBhbG9uZSBJIHdhcyBhdCBhIGxvc3MuICBUaGlzIGxpdmluZyB0b2dldGhlciB0aGluZyB3YXMgYSBsaXR0bGUgc3RyYW5nZSBhbmQgd291bGQgcHJvYmFibHkgdGFrZSBhIHdoaWxlIHRvIGdldCB1c2VkIHRvIGl0LiAgSSBsb29rZWQgYXJvdW5kIG91ciByb29tIGFuZCB0b29rIGluIGFsbCBvZiB0aGUgY2hhb3MgdGhhdCBzdXJyb3VuZGVkIHVzLiAgSSBzbWlsZWQgaW4gSmFrZSdzIGRpcmVjdGlvbiBiZWZvcmUgc2F5aW5nLCAiSSByZWFsbHkgd2FudCB0byBtYWtlIG91dCB3aXRoIHlvdSByaWdodCBub3cgYnV0IGRvIHlvdSB0aGluayB0aGF0IHdlIGNvdWxkIEZ1bmcgU2hpIG91ciByb29tIGZpcnN0LCBqdXN0IHRvIGJlIGNhcmVmdWwgYW5kIGdldCB0aGUgcG9zaXRpdmUgQ2hpIGZsb3dpbmc/ICBJIGRvbid0IHdhbnQgdG8gdGVtcHQgZmF0ZSBvciBhbnl0aGluZy4iDQoNCkpha2UgbGVhbnQgYWdhaW5zdCBoZXIgZGVzayBhbmQgc21pbGVkIGJhY2sgYXQgbWUsICJTdXJlLCBqdXN0IHRlbGwgbWUgd2hhdCB0byBkbywgd2hhdCB0byBtb3ZlIHdoZXJlLiAgSSB3YW50IGdvb2QgQ2hpIHRvbywgYnV0IGxldCdzIGRvIHRoaXMgcXVpY2tseSAnY2F1c2UgSSB3YW50IHNvbWUga2lzc2luZyBhbmQgc251Z2dsaW5nIHRvbywiIHNoZSBzYWlkLiAgV2Ugc3RhcnRlZCBtb3ZpbmcgZnVybml0dXJlIGFyb3VuZCBhbmQgYmVmb3JlIEkga25ldyBpdCB0aGUgcm9vbSB3YXMgYXMgRnVuZyBTaGksIGFzIEkgY291bGQgbWFrZSBpdC4gIEkgbG9va2VkIGFyb3VuZDsgdGhlIGZsb3cgb2YgY2hpIHdvdWxkIGJlIGNvbnN0cmFpbmVkIGJ5IG15IGJlZC4gIEkgc21pbGVkIGEgc29sdXRpb24gaW4gbWluZC4NCg0KIldlIHNob3VsZCBnZXQgcmlkIG9mIG9uZSBvZiB0aGUgYmVkcywgaXQgd291bGQgZ2l2ZSB1cyBoZWFwcyBhIGxvdCBtb3JlIHNwYWNlIHRvIG1vdmUgYXJvdW5kLiAgUGx1cyBpdCB3b3VsZCBtZWFuIEkgZ2V0IHRvIGZhbGwgYXNsZWVwIGV2ZXJ5IG5pZ2h0IHdpdGggeW91IGluIG15IGFybXMuIiBJIHdpbmtlZCBhdCBKYWtlIGFzIHNoZSBjcm9zc2VkIHRoZSByb29tIHRvIGhlciBiZWQ7IHNoZSBsb29rZWQgc2NhcmVkIGFsbCBvZiBhIHN1ZGRlbiBhbmQgSSBob3BlZCBzaGUgZGlkbid0IHRoaW5rIEkgd2FzIHRyeWluZyB0byBmb3JjZSB0aGUgaXNzdWUgb2Ygc2V4LiAgSSByZWFsbHkganVzdCB3YW50ZWQgdG8gZmFsbCBhc2xlZXAgd2l0aCBoZXIgaW4gbXkgYXJtcyBhbmQgSSB3YW50IHRoZSBmbG93IG9mIGNoaSB0byBiZSBuYXR1cmFsLg0KDQo8Y2VudGVyPioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpKQUtFDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKjwvY2VudGVyPg0KDQpBZnRlciBJIGdvdCBpbnRvIGJlZCBJIHR1cm5lZCB0byBmYWNlIEhhbWlsdG9uLCBJIGZlbHQgbGlrZSBJIHdhc24ndCBzdXJlIHdoYXQgc2hvdWxkIGhhcHBlbiBuZXh0LiAgSSBrbmV3IHRoYXQgSSB3YXNuJ3QgcmVhZHkgZm9yIGEgc2V4dWFsIHJlbGF0aW9uc2hpcCB5ZXQsIG5vdCB0aGF0IEkgZGlkbid0IHdhbnQgdG8gYmUgd2l0aCBIYW1pbHRvbiBiZWNhdXNlIEkgcmVhbGx5IGRpZC4gIEknbSBqdXN0IG5vdCByZWFkeS4gICJIYW0s4oCdIEkgc2FpZCBnYWluaW5nIGhpcyBmdWxsIGF0dGVudGlvbiwg4oCcSSBzdGlsbCBkb24ndCB0aGluayBJJ20gcmVhZHkgdG8geW91IGtub3csIGJ1dCBpZiB5b3UgZXZlciBqdXN0IHdhbm5hIHNudWdnbGUuLi4uIiBJIGxpZnRlZCB0aGUgZWRnZSBvZiBxdWlsdCBpbiB3ZWxjb21lLg0KDQpJIGRvbid0IHRoaW5rIEkndmUgZXZlcnkgc2VlbiBIYW1pbHRvbiBtb3ZlIGFzIGZhc3QgYXMgaGUgZGlkIGluIHRoYXQgbW9tZW50LCBiZWZvcmUgSSBrbmV3IHdoYXQgaGFkIGhhcHBlbmVkIGhlIHdhcyBqdW1waW5nIGludG8gYmVkIHdpdGggbWUuICBUaGUgbmV4dCB0aGluZyBJIGtuZXcgaGUgd2FzIHB1bGxpbmcgdXAgdGhlIGNvdmVycyBhbmQgaGUgaGFkIHR1Z2dlZCBtZSBpbnRvIHRoZSBjaXJjbGUgb2YgaGlzIGFybXMuICBBdCBmaXJzdCBJIHRob3VnaHQgaGUgaGFkIGdvbmUgdG8gc2xlZXAgYmVjYXVzZSBoZSB3YXMgYmVpbmcgc28gcXVpZXQsIGJ1dCB0aGVuIGhlIHNhaWQsICJJIGd1ZXNzIGl0IHdvdWxkIGxvb2sgcHJldHR5IHdlaXJkIGlmIHdlIG9ubHkgaGFkIG9uZSBiZWQgaW4gaGVyZSwgZXZlcnlvbmUgYWxyZWFkeSB0aGlua3MgdGhhdCB3ZSBhcmUgZ2F5LiIgIEkgbG9va2VkIHVwIGF0IGhpcyBmYWNlIHRvIHNlZSBpZiBoZSB3YXMgYm90aGVyZWQgYnkgdGhlIGZhY3QgdGhhdCBtb3N0IG9mIHRoZSBzdHVkZW50LWJvZHkgdGhvdWdodCB0aGF0IHdlIHdlcmUgZ2F5LCBidXQgaGUganVzdCBzbWlsZWQgYXQgbWUgYW5kIGtpc3NlZCBtZSBvbiB0aGUgZm9yZWhlYWQuICAiSSBsb3ZlIHlvdSBKYWtlLiAgTm93IGdvIHRvIHNsZWVwLiIgSGUgc2lnaGVkIGFuZCBiZWZvcmUgSSBjb3VsZCByZXBlYXQgdGhlIHZvdyBvZiBsb3ZlIGhlIHdhcyBmYXN0IGFzbGVlcC4gIA0KDQpJIGZlbGwgYXNsZWVwIHdpdGggYSBzbWlsZSBvbiBteSBmYWNlIHRoYXQgbmlnaHQuICBJZiBJIGhhZCBsZWFybmVkIGFueXRoaW5nIG92ZXIgdGhlIHN1bW1lciBhbmQgaW4gdGhlIGxhc3QgZmV3IHdlZWtzLCBpdCB3YXMgdGhhdCB0aGluZ3MgY2hhbmdlLiAgTm90aGluZyBzdGF5cyB0aGUgc2FtZSBmb3JldmVyLCBhbmQgd2l0aCBIYW1pbHRvbiBhbmQgbXkgZnJpZW5kcyBieSBteSBzaWRlIEkgd2Fzbid0IGFmcmFpZCB0byBmYWNlIHdoYXQgZXZlciB3YXMgaW4gc3RvcmUgZm9yIHVzIGFsbCBuZXh0Lg0KDQo8Y2VudGVyPioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpNT1JHQU5BDQoNCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKjwvY2VudGVyPg0KDQpJIHdhc24ndCBsb29raW5nIHdoZXJlIEkgd2FzIGdvaW5nIGFzIEkgc3Rvcm1lZCB0aHJvdWdoIHRoZSBoYWxsIG9mIFJhd2xleSBBY2FkZW15IGZvciBCb3lzOyBhbGwgSSBjb3VsZCB0aGluayBhYm91dCB3YXMgc2VlaW5nIG15IERhZCBhZ2Fpbi4gIEl0IGhhZCBiZWVuIHdlaXJkIGFuZCBhIGxpdHRsZSBiaXQgcGFpbmZ1bC4gIEF0IGxlYXN0IGhlIGtpbmQgb2YgYWN0ZWQgbGlrZSBoZSBjYXJlZC4gIEkgd29uZGVyZWQgYWdhaW4gaG93IGhlIGtuZXcgYWJvdXQgbXkgcnVubmluZy4gIEkgYWxzbyB0aG91Z2h0IGFib3V0IGhvdyBoZSdkIGNhbGxlZCBtZSAnTW9yZ2FuJzsgaGUgd2FzIHRoZSBvbmx5IG9uZSBpbiB0aGUgZmFtaWx5IHdobyBkaWRuJ3QgY2FsbCBtZSBNb3JnYW5hLiAgWWV0IGl0IHdhcyBpcm9uaWMgYmVjYXVzZSBoZSBjaG9zZSBteSBuYW1lIHdoZW4gSSB3YXMgYm9ybi4gIE15IE1vdGhlciBoYWQgd2FudGVkIHRvIG5hbWUgbWUgQW5uYWJlbCwgYnV0IERhZCBsb3ZlZCBNb3JnYW5hIGJlY2F1c2UgaXQgd2FzIGZyb20gU2lyIFRob21hcyBNYWxvcnkncyAnTGUgTW9ydGUgRCdBcnRodXInLCBvbmUgb2YgRGFkJ3MgZmF2b3VyaXRlIHByb3NlLiAgQnV0IGhlJ2QgYWx3YXlzIGNhbGxlZCBtZSBNb3JnYW4sIEkgZGlkbid0IGtub3cgd2h5IGhlIGNvdWxkbid0IHVzZSBteSBmdWxsIG5hbWUgYW5kIGl0IHVwc2V0IG1lIHNvbWV3aGF0LCB0aGF0IEkgaGFkIGJlZ3VuIHRvIHN1c3BlY3QgdGhhdCBpdCB3YXMgaGlzIHdheSBvZiBrZWVwaW5nIGhpbXNlbGYgYW5kIGhpcyBsaWZlIHNlcGFyYXRlIGZyb20gbWUgYW5kIG1pbmUuDQoNCkkgd2FzIG1lbnRhbGx5IGV2YWx1YXRpbmcgdGhlIG1lZXRpbmcgSSBoYWQganVzdCBoYWQgd2l0aCBteSBmYXRoZXIgd2hlbiBhbiBvYm5veGlvdXMsIGJ1dCBleHRyZW1lbHkgZ29vZC1sb29raW5nIGd1eSBiYXJyZWxsZWQgaW50byBtZS4gIEhlIGhhZCBzaG9ydCBibG9uZCBoYWlyIGFuZCBicm93biBleWVzLiAgSGUgd2FzIGxlYW4gYW5kIG11c2N1bGFyIGFuZCBoZSBtb3ZlZCB3aXRoIHRoZSBncmFjZSBvZiBhIGp1bmdsZSBjYXQuICBIZSBoYWQgcXVpY2sgcmVmbGV4ZXMgdG9vLiAgV2hlbiBoZSBsYXVuY2hlZCBoaW1zZWxmIGF0IG1lIGhlIGtub2NrZWQgbWUgb2ZmIGJhbGFuY2UgYnV0IGhlIHdhcyBxdWljayB0byBzdGVhZHkgbWUuICBIaXMgc3Ryb25nIGhhbmRzIHdpdGggbG9uZyBncmFjZWZ1bCBmaW5nZXJzIGdyYWJiZWQgYSBob2xkIG9mIG15IHVwcGVyIGFybXMgdG8gc3RvcCBtZSBmcm9tIG15IGRlc2NlbnQgdG93YXJkcyB0aGUgZmxvb3IuICBIZSB3b3JlIGFuIGFubm95aW5nbHkgc211ZyBzbWlyayBvbiBoaXMgZmFjZSwgYXMgaWYgaGUgd2FzIHByaXZ5IHRvIGFsbCBvZiB0aGUgd29ybGTigJlzIGFuZCBteSBvd24gcHJpdmF0ZSBzZWNyZXRzLg0KDQpNeSBhbm5veWFuY2UgcXVpY2tseSB0dXJuZWQgdG8gcmFnZSwgbm8gZG91YnQgaGUgd2FzIGdvaW5nIHRvIGJsYW1lIG1lIGZvciBoaXMgbGFjayBvZiBhdHRlbnRpb24gaW4gdGhlIGhhbGxzIGFuZCBJIGhhZCBhbHJlYWR5IGhhZCBvbmUgaGVsbCBvZiBhIGRheSBhbmQgaXQgd2Fzbid0IGxvb2tpbmcgbGlrZSBpdCB3YXMgZ29pbmcgdG8gZ2V0IG11Y2ggYmV0dGVyIGFueXRpbWUgc29vbi4gIEkgZGVjaWRlZCB0byBnZXQgaW4gZmlyc3QsIGFuZCB3aXRoIGEgc3RyaW5nIG9mIG9ic2Nlbml0aWVzIHRoYXQgd291bGQgaW1wcmVzcyBhIHNhaWxvciBJIGxldCBoaW0gaGF2ZSBpdC4gIFRoZW4gSSB0dXJuZWQgdG8gbGVhdmUgYnV0IHdhcyBzdG9wcGVkIGJ5IGhpcyBjcnVkZSByZW1hcmssIOKAmGFub3RoZXIgZmluZSBBbWVyaWNhbiBzcGVjaW1lbiwgYXJlIGFsbCBBbWVyaWNhbiBnaXJscyBhcyBzbHV0dHkgYXMgeW91P+KAmSANCg0K4oCYQnJpdGlzaCwgSSBzaG91bGQgaGF2ZSBrbm93biHigJkgV2FzIG15IHJldG9ydCwganVzdCBiZWZvcmUgSSBzbGFwcGVkIGhpcyBzbXVnIGZhY2UuICBPaCwgbXkgZ29kLiAgSSBqdXN0IGhpdCBoaW0sIGhvdyBjb3VsZCBJIGhhdmUgZG9uZSB0aGF0IGl0IG11c3QgaGF2ZSBiZWVuIGxlZnQgb3ZlciBhbmdlciBkaXJlY3RlZCBhdCBEYWQsIGFmdGVyIGFsbCB0aGlzIHBvb3IgZ3V5IGRpZCB3YXMgaGF2ZSB0aGUgbWlzZm9ydHVuZSB0byBydW4gaW50byBtZS4gIEl0IHdhcyBwcm9iYWJseSBtb3N0bHkgbXkgZmF1bHQgYW55IHdheSBzaW5jZSBJIHJlYWxseSB3YXNu4oCZdCBwYXlpbmcgYW55IGF0dGVudGlvbi4NCg0KVW5zdXJlIG9mIGhvdyB0byBjb250aW51ZSwgSSByZW1lbWJlcmVkIGEgYm9vayB0aGF0IEkgb25jZSByZWFkIGFib3V0IHRoaXMgZ2lybCB3aG8gZmlnaHRzIHdpdGggYSBzdHJhbmdlciBpbiB0aGUgbWlkZGxlIG9mIHRoZSBzdHJlZXQgYW5kIHNsYXBzIGhpcyBmYWNlLiAgVGhlIGdpcmwgaW4gdGhlIGJvb2sgcmVhbGlzZWQgd2hhdCBzaGUgaGFkIGRvbmUgYW5kIHJlYWNoZWQgb3ZlciBhbmQga2lzc2VkIGl0IGJldHRlciwgdGhlbiBzaGUgc2FpZCwgIllvdSBhbmQgbWUgd2UncmUgZ29pbmcgdG8gYmUgdmVyeSBnb29kIGZyaWVuZHMuIiAgIFdpdGggdGhhdCBtZW1vcnkgaW4gbXkgbWluZCwgSSBsZWFuZWQgb3ZlciBhbmQgbGlja2VkIHRoZSBwbGFjZSBvbiBoaXMgZmFjZSwgd2hlcmUgSSBoYWQgaGl0IGhpbSB3aXRoIG15IGhhbmQsIGFzIEkgZHJldyBhd2F5IGZyb20gaGltIEkgd2hpc3BlcmVkIGluIGhpcyBlYXIsICJZb3UgYW5kIG1lIHdlJ3JlIGdvaW5nIHRvIGJlIHZlcnkgZ29vZCBmcmllbmRzLiIgIEkgc2F3IGhpcyBsb29rIG9mIGNvbmZ1c2lvbiBhbmQgdHJpZWQgbm90IHRvIGxhdWdoLCB0aGUgYm95IGRpZG4ndCBrbm93IHdoYXQgaGFkIGhpdCBoaW0uICBIZSBsb29rZWQgbGlrZSBhIGJpdCBvZiBhbiBhc3Nob2xlIHRvIG1lIGJ1dCB0aGVuIEkgYWx3YXlzIGRpZCBsaWtlIGEgY2hhbGxlbmdlLg0KPC9sai1jdXQ+"
"eventtime","2006-01-31 03:43:00"
"current_moodid","87"
"url","http://placidlake.livejournal.com/810.html"
"userid","11991"
"itemid","2"
"event","I just sent my fic to my beta, so it should be posted soon."
"eventtime","2006-01-26 22:40:00"
"url","http://placidlake.livejournal.com/719.html"
"userid","11991"
"itemid","1"
"event","This is my lj for all things Young American:D"
"eventtime","2005-10-04 01:07:00"
"current_moodid","49"
"url","http://placidlake.livejournal.com/428.html"
"userid","11991"
