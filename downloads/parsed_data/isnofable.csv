"names","values"
"itemid","2"
"event","PGxqLWN1dCB0ZXh0PSIuLi5XSFkuIj5UaG9tYXMgaGFkIHRob3VnaHQsIGdyb3dpbmcgdXAgaW4gTG9uZG9uLCB0aGF0IGhlIGtuZXcgd2hhdCBub2lzZSBzb3VuZGVkIGxpa2UsIGJ1dCBpdCBpcyBvbmx5IGluIHRoZSBwYXN0IG1vbnRoIHRoYXQgaGUgaGFzIGJlZ3VuIHRvIHVuZGVyc3RhbmQgdGhlIDxlbT50cnVlPC9lbT4gYW5ub3lhbmNlIG9mIHRoZSBodW0gb2YgdGVuIHRob3VzYW5kIHBlb3BsZSA8ZW0+YW5kPC9lbT4gdGhlaXIgbWluZHMgYWxsIGJ1enppbmcgYXQgb25jZS4gR3JvY2VyeSBsaXN0cywgcGV0dHkgcm9tYW5jZXMsIGNvbmNlcm5zIGFib3V0IHRoZWlyIGNoaWxkcmVuLCBmZWFyIGFuZCBsb2F0aGluZyBhbmQgYSBnZW5lcmFsIGxhY2sgb2YgaHVtb3IsIGFsdGhvdWdoIGEgY29uc2lkZXJhYmx5IGJldHRlciBwZXJjZW50YWdlIGhlcmUgaW4gUGFyaXMgaGF2ZSB0aGVpciBtaW5kcyBvbiBwbGVhc2FudCB0aGluZ3MuDQoNClRvZGF5IGl0IGl0Y2hlcyBzbyBiYWRseSB0aGF0IGhlIGNhbm5vdCBzdHVkeS4gTm8gZ3JlYXQgbG9zcy4gSGUgZ29lcyBkb3duIHRvIHRoZSBTZWluZSBhbmQgbGVhbnMgYWdhaW5zdCBhIHdhbGwsIGluY3VyaW91c2x5IHdhdGNoaW5nIGZvciBzb21lb25lIG9mIGludGVyZXN0Lg0KDQpGb3IgbmVhcmx5IGhhbGYgYW4gaG91ciBubyBvbmUgdHVybnMgdXA7IGV2ZXJ5b25lIGlzIHVuZm9ydHVuYXRlbHkgZHVsbCBhbmQgcHJlb2NjdXBpZWQgd2l0aCB0aGVpciBvd24gcGV0dHkgY29uY2VybnMuIE9uZSBnaXJsIGlzIHRoaW5raW5nIGxvdWRseSBhbmQgYSBiaXQgc211Z2x5IGFib3V0IGhlciBpbGxpY2l0IGFmZmFpciBhcyBzaGUgaHVycmllcyBwYXN0LCBidXQgdGhhdCBpcyB0aGUgb25seSBicmVhayBpbiB0aGUgbW9ub3RvbnkuDQoNClRoZW4gVGhvbWFzIHNwb3RzIHNvbWVvbmUuDQoNCkl0J3MgYSBib3kgYWJvdXQgVGhvbWFzJyBhZ2UsIG5vcm1hbC1sb29raW5nLCBhIGJpdCBvbiB0aGUgcHJldHR5IHNpZGUsIGFuZCBoZSdzIHN0dWR5aW5nIFRob21hcyBpbnRlbnRseSBmcm9tIGFjcm9zcyB0aGUgcml2ZXIuIFdoZW4gaGUgc2VlcyBUaG9tYXMgbG9va2luZyBhdCBoaW0sIGhlIGdyaW5zIHNsb3dseSBhbmQgcmFpc2VzIGhpcyBoYW5kIGluIGEgc3R1cGlkIGZsdXR0ZXItZmluZ2VyZWQgd2F2ZS4NCg0KVGhvbWFzIHJhaXNlcyBhbiBleWVicm93IGF0IHRoZSBib3ksIHRyeWluZyB0byBpbmRpY2F0ZSBib3RoIHNrZXB0aWNpc20gYW5kIGRpc2RhaW4uIEl0J3MgYSBwaXR5IHRoZSBib3kncyBvdXQgb2YgcmFkaXVzIGp1c3Qgbm93OyBoZSdzIHByZXR0eSBlbm91Z2ggdG8gbG9vayBpbnRvLg0KDQpUaGUgYm95IHJvbGxzIGhpcyBleWVzIGFuZCBob2xkcyB1cCBhIGZpbmdlci0tIDxpPndhaXQ8L2k+LS0gdGhlbiBzaG92ZXMgaGlzIGhhbmRzIGluIGhpcyBwb2NrZXRzIGFuZCBzdHJvbGxzIG9mZiBhbG9uZyB0aGUgYmFuaywgaGVhZGluZyBmb3IgdGhlIG5lYXJlc3QgYnJpZGdlLg0KDQpUaG9tYXMgZG9lc24ndCBwYXJ0aWN1bGFybHkgc2VlIHdoeSBoZSA8ZW0+c2hvdWxkPC9lbT4sIGJ1dCBoZSByZWFycmFuZ2VzIGhpbXNlbGYgbW9yZSBjb21mb3J0YWJseSBhbmQgd2F0Y2hlcyB0aGUgYm95J3MgcHJvZ3Jlc3MuIEFic2VudGx5IGhlIHNsaXBzIGhpcyBtaW5kIG92ZXIgaW50byBGcmVuY2guDQoNClRoZSBib3kgY3Jvc3NlcywgaGVhZGluZyB0b3dhcmRzIFRob21hcywgc3RpbGwgd2l0aCB0aGF0IGludGVudCBsb29rIG9uIGhpcyBmYWNlLiBBIGZldyBmZWV0IGFuZCBoZSdzIGluIHJhbmdlLCBidXQgd2hlbiBUaG9tYXMgcHJvYmVzIGFic2VudGx5IGF0IHRoZSBib3kncyBtaW5kLCBpdCdzIGxpa2Ugc2xpZGluZyBvdmVyIGEgZ2xhc3Mgd2FsbC4NCg0KQSBmZXcgZmVldCBtb3JlIGFuZCBUaG9tYXMgamVya3MgdXByaWdodCwgaGlzIGV5ZXMgZ29pbmcgd2lkZS4gIjxlbT5Oby48L2VtPiINCg0KVGhlIGJveSdzIGNsb3NlIGVub3VnaCB0byBoZWFyIHRoaXMsIGFuZCBoZSBncmlucy4gIkJpdCBzbG93LCBhcmVuJ3QgeW91PyIgaGUgc2F5cywgYW5kIGl0J3MgRnJlbmNoIGJ1dCBub3QgPGk+cmVhbDwvaT4gRnJlbmNoLg0KDQpIaXMgcG93ZXIgaXMgc2V0dGluZyBUaG9tYXMnIGhhaXIgb24gZW5kLiAiTGV0J3Mgc2F5IHRoaXMgaXMgLi4uIHVuZXhwZWN0ZWQsIGFuZCBsZWF2ZSB0aGUgcGVyc29uYWwgY29tbWVudHMgYXNpZGUuIiBXaGljaCBpcyBsaWtld2lzZS4NCg0KIlNvcnJ5LCIgdGhlIGJveSBzYXlzLCB1bnJlcGVudGFudGx5LiAiSXQncyB1bmV4cGVjdGVkIGZvciBtZSBhcyB3ZWxsLiBNYXkgSSBzaXQ/IiBIZSBnZXN0dXJlcyB0byB0aGUgYmVuY2ggbmVhciB3aGVyZSBUaG9tYXMgaGFzIGJlZW4gc3RhbmRpbmcuICJQbGVhc2FudCBjb252ZXJzYXRpb24gbWlnaHQgYmUgZXhjaXRpbmcuIg0KDQoiRG8gd2hhdCB5b3Ugd2FudCwiIHNheXMgVGhvbWFzLCBsZWFuaW5nIGJhY2sgYWdhaW5zdCB0aGUgd2FsbCwgd2hpY2ggaXMgbW9yZSBjb21mb3J0YWJsZSB0aGFuIGEgUGFyaXNpYW4gYmVuY2guICJJIGltYWdpbmUgY29udmVyc2F0aW9uIG9mIGFueSBzb3J0IHdpdGggeW91IHdpbGwgYmUgZXhjaXRpbmcuIg0KDQpUaGUgYm95IGdyaW5zIGFuZCBzaXRzIGRvd24sIGZvbGRpbmcgb25lIGxlZyBvdmVyIHRoZSBvdGhlciBhbmQgc3dpbmdpbmcgaGlzIGZvb3QgY2FyZWxlc3NseS4gIkNhbGViIEF0aGVydG9uLCIgaGUgc2F5cy4gIkRpc3RyZXNzaW5nbHkgQW1lcmljYW4uIEknbSB0b2xkIG15IEZyZW5jaCBpcyBwYXNzYWJsZS4iDQoNClRob21hcyBtYWtlcyBhIHNhZCBmYWNlIG9mIHJlY29nbml0aW9uLiAiRXZlcnlvbmUgaGFzIHRoZWlyIGZsYXdzLCIgaGUgYWdyZWVzLCAiYnV0IHlvdXIgRnJlbmNoIGlzIGhhcmRseSB0aGUgaXNzdWUuIFRob21hcyBNb29yZS4iDQoNCiJXaGljaCBpc24ndCBGcmVuY2ggZWl0aGVyLCIgQ2FsZWIgc2F5cywgc3RpbGwgZ3Jpbm5pbmcuICJFeC1wYXRyaW90PyINCg0KIk5ldyBwYXRyaW90LCIgc2F5cyBUaG9tYXMgdmVyeSBmaXJtbHkuICJBbmQgd2hhdCBicmluZ3MgeW91IHRvIFBhcmlzIGluIHRoZSBzcHJpbmd0aW1lLCBDYWxlYj8iDQoNClRoZSBjb252ZXJzYXRpb24gd291bGQgYmUgYSBub3ZlbHR5IG9ubHkgYmVjYXVzZSBhc2lkZSBmcm9tIHRoZSB3b3JkcyBhbmQgYSBjZXJ0YWluIGJyaWdodCBnbGVlLCBDYWxlYiBpcyBzaWxlbnQsIHRoYXQgd2FsbCBvZiBnbGFzcyBmcm9tIGVhcmxpZXIuIEJ1dCBvbiB0b3Agb2YgdGhhdCBoZSBjYW4gZmVlbCwgZmFpbnRseSwgQ2FsZWIgbG9va2luZyBiYWNrIGF0IGhpbS4gSGlzIG11c2NsZXMgYmVnaW4gdG8gdGVuc2UgaW4gcmVzcG9uc2UuDQoNCiJJIGRlY2lkZWQgaXQgd291bGQgYmUgZnVuIHRvIHRha2UgYSBFdXJvdHJpcCwiIENhbGViIHNheXMuICJJIGhpdCBFbmdsYW5kIGZpcnN0LCBidXQgZXZlcnlvbmUncyA8aT5kdWxsPC9pPiB0aGVyZS4gUGFyaXMgaXMgYW4gaW1wcm92ZW1lbnQuIFRoaW5rIEkgbWlnaHQgaGl0IEFtc3RlcmRhbSBuZXh0LiIgSGUgcmFpc2VzIGhpcyBleWVicm93cyBhdCBUaG9tYXMuICJGaXJzdCBwZXJzb24gbGlrZSBtZSBJJ3ZlIG1ldCwgdGhvdWdoLiBIYXZlIGEgbGl0dGxlIGdvbGQgc3Rhci4iDQoNCiJBcmUgeW91IGFsd2F5cyB0aGlzIGJhbmFsPyIgVGhvbWFzIGFza3Mgd2l0aCBpbnRlcmVzdC4gIklzIGl0IHNvbWUgc29ydCBvZiBlbGFib3JhdGUgZGVmZW5zZSBtZWNoYW5pc20/Ig0KDQpDYWxlYidzIGJyaWdodCBncmluIGZsYXNoZXMgYmFjayBvbi4gIk5vLCBzZWUsIHVzdWFsbHkgYXQgdGhpcyBwb2ludCBJJ2QgaGF2ZSBhbGwgeW91ciBtb25leSwgeW91ciBmbGF0IGFuZCBmb29kIGZvciB0aGUgd2Vla2VuZCwgYW5kIHByb2JhYmx5IHNleHVhbCBmYXZvdXJzLCBidXQgSSBoYXZlbid0IGZpZ3VyZWQgb3V0IGhvdyB0byBhc2sgZm9yIGFsbCB0aGF0IHBvbGl0ZWx5LiINCg0KVGhvbWFzIGZpZ2h0cyBhIHNtaWxlLiAiVGhhdCdzIGFuIGV4Y2VsbGVudCBzdGFydC4gU3RhbmQgdXAuIg0KDQpDYWxlYiBkb2VzIHNvLCBzbG93bHk7IGEgYml0IG9mIGNvbG91ciBpcyByaXNpbmcgaW4gaGlzIGNoZWVrcywgYW5kIGhpcyBleWVzIGFyZSBnbGl0dGVyaW5nLCBidXQgVGhvbWFzIHN0aWxsIGNhbid0IGhlYXIgYW55dGhpbmcuDQoNClRob21hcyBwdXNoZXMgb2ZmIHRoZSB3YWxsIGFuZCB3YWxrcyBhcm91bmQgQ2FsZWIgaW4gYSBzbG93IGNpcmNsZS4gSGUgaGFzIGFib3V0IGEgZm9vdCBvbiB0aGUgYm95IGluIGhlaWdodC4gR29vZC4NCg0KIkknbSB0aGUgZmlyc3QgcGVyc29uIGxpa2UgeW91IHlvdSd2ZSA8ZW0+ZXZlcjwvZW0+IG1ldD8iIGhlIGlucXVpcmVzLiAiT3Igb25seSBvbiB5b3VyIEV1cm90cmlwPyBJIHdhbnQgdG8gPGVtPmRlc2VydmU8L2VtPiB0aGF0IGdvbGQgc3Rhci4iDQoNCiJFdmVyLCIgQ2FsZWIgc2F5cywgc3RpbGwgc3RhbmRpbmcgc2VlbWluZ2x5IGVudGlyZWx5IHJlbGF4ZWQgdW50aWwgVGhvbWFzIG5vdGljZXMgaGlzIGhhbmRzIGFyZSB0cmVtYmxpbmcgc2xpZ2h0bHkuICJOb3QgdGhhdCBJJ3ZlIGV2ZXIgYmVlbiB3ZXN0IG9mIHRoZSBNaXNzaXNzaXBwaS4iDQoNCiJMaWtld2lzZSwiIHNheXMgVGhvbWFzIHdpdGggc2xvdyBwbGVhc3VyZSwgYW5kIGhhbHRzIGluIGZyb250IG9mIENhbGViIGFnYWluLiAiSG93IHVuaXF1ZSBvZiB1cy4iDQoNCiJZZXMsIiBDYWxlYiBtdXJtdXJzLCBsb29raW5nIHVwIGF0IGhpbSB0aG91Z2h0ZnVsbHkuICJTY2llbnRpZmljIHRoZW9yeSBvbmU6IHdlIHdpbGwgZ28gYWJzb2x1dGVseSBtYWQgaWYgd2UgdG91Y2ggZWFjaCBvdGhlci4gU2NpZW50aWZpYyB0aGVvcnkgdHdvOiB3ZSdyZSBib3RoIGdvb2QgZW5vdWdoIHRoYXQgd2Ugd291bGQgaGF2ZSB0aGUgZmlyc3Qgbm9taW5hbGx5IDxpPm9yZGluYXJ5PC9pPiBleHBlcmllbmNlIG9mIG91ciBsaXZlcy4iDQoNCiJTY2llbnRpZmljIHRoZW9yeSB0aHJlZSwiIHNheXMgVGhvbWFzLCB3aXRoIGEgbGl0dGxlIGxhdWdoLCAid2UnbGwgbmV2ZXIga25vdyBpZiB3ZSBkb24ndCBhdHRlbXB0IGl0LCA8ZW0+ZGVhcjwvZW0+IENhbGViLCBhbmQgdGhhdCB3aWxsIGRyaXZlIHVzIG1hZCBtdWNoIG1vcmUgcXVpY2tseSB0aGFuIGFueXRoaW5nIHRhY3RpbGUuIg0KDQoiR29kLCIgQ2FsZWIgbXVybXVycywgInlvdSdyZSBpbnN1ZmZlcmFibGUgPGk+YWxyZWFkeTwvaT4uIg0KDQpJdCdzIG9ubHkgYmVjYXVzZSBUaG9tYXMgaXMgd2hhdCBoZSBpcyB0aGF0IGhpcyBoZWFydHJhdGUgaXMgc3RlYWR5IGFuZCBoaXMgYnJlYXRoaW5nIGhhcmRseSBjYXRjaGluZyBhdCBhbGwuIEV2ZW4gc28uICJJIHRyeS4gTGVhdmUsIGFuZCB5b3Ugc2hhbid0IGhhdmUgdG8gc3VmZmVyIG1lLiINCg0KIk9oIG5vLCIgQ2FsZWIgc2F5cyB3aXRoIGEgbGl0dGxlIGxhdWdoLCAieW91IGFyZSA8aT5ub3Q8L2k+IGdldHRpbmcgb3V0IG9mIHRoaXMsIE1vbnNpZXVyIE1vb3JlLiINCg0KIjxlbT5Hb29kLDwvZW0+IiBzYXlzIFRob21hcy4gIkhlcmU/Ig0KDQpDYWxlYiBsYXVnaHMgYWdhaW4gYW5kIHZlcnkgdGVudGF0aXZlbHkgcmVhY2hlcyBvdXQsIHRvdWNoaW5nIHBhbG0tdG8tcGFsbS4NCg0KRm9yIGEgbW9tZW50IHRoZXJlJ3Mgbm90aGluZywgYW5kIHRoZW4gdGhlIGdsYXNzIHdhbGwgbWVsdHMgYW5kIHRoZXkncmUgc2xpZGluZyBjYXJlZnVsbHkgaW50byBlYWNoIG90aGVyLCBhbmQgQ2FsZWIgaXMgZmFyIGxlc3MgY2FsbSB0aGFuIGhlIGFwcGVhcnMsIHRob3VnaHRzIGZsaWNrZXJpbmcgYXMgdGhvdWdoIGhlIHdpbGwgc29tZWhvdyBiZSBhYmxlIHRvIGdldCBhcm91bmQgVGhvbWFzIHdpdGhvdXQgVGhvbWFzIHRvdWNoaW5nIGhpcyBtaW5kIGF0IGFsbCwgYW5kIFRob21hcyBpcyBub3Qgc3VyZSB3aG8gamVya3MgdGhlaXIgaGFuZCBiYWNrLCBidXQgdGhleSdyZSBub3QgdG91Y2hpbmcgYW55bW9yZSBhbmQgQ2FsZWIgaXMgZ2l2aW5nIGhpbSBhIHdpZGUtZXllZCBsb29rLiAiPGk+Q29vbDwvaT4sIiBoZSBzYXlzLCBicmVhdGhsZXNzIEVuZ2xpc2guDQoNCiI8ZW0+Q29vbD88L2VtPiIgc2F5cyBUaG9tYXMsIGluIHRoZSBzYW1lIGxhbmd1YWdlLCBoaXMgdm9pY2UgY3JhY2tpbmcgYSBiaXQuIDxpPkFtZXJpY2Fucy48L2k+IEhlIGZsaWNrZXJzIGZyYW50aWNhbGx5IHRocm91Z2ggdGhlIGJhY2sgb2YgaGlzIGhlYWQgdG8gc2VlIGlmIGl0J3MgaW50YWN0IGFuZCBjYW4ndCBzcG90IGFueXRoaW5nIG5ldyAtLSBub3QgdGhhdCB0aGF0IG1lYW5zIGFueXRoaW5nIGF0IGFsbC4NCg0KVGhleSBtYXkgbm90IGJlIHRvdWNoaW5nIGJ1dCBDYWxlYidzIGdsYXNzIGlzbid0IGZyb3N0ZWQgYW55IGxvbmdlciwgYW5kIFRob21hcyBjYW4gc2VlIHRoZSB3aGl6eiBvZiBoaW0gdW5kZXIgdGhlIHN1cmZhY2UgcGVyZmVjdGx5IGNsZWFyIHRocm91Z2ggb3BlbiB3YWtpbmcgZXllcywgd2hpY2ggbWVhbnMgaGUgaXMgZXF1YWxseSB2aXNpYmxlLCB3aGljaCBtZWFucyBoaXMgaGVhcnRyYXRlIGJyZWFrcyByYW5rcyBhbmQgYmVnaW5zIHRvIHNwZWVkIHVwLg0KDQoiR29kLCB5b3UgcmVhbGx5IDxpPmFyZTwvaT4gYSBiYXN0YXJkLCIgQ2FsZWIgc2F5cyBpbiBzb21ldGhpbmcgbGlrZSBhZG1pcmF0aW9uLiBTdGlsbCBicmVhdGhpbmcgdG9vIGhhcmQsIGFuZCBoZSdzIG1ha2luZyBubyBlZmZvcnQgdG8gaGlkZSBpdCBub3cuDQoNCiJDb25zdW1hdGVseSwiIHNheXMgVGhvbWFzLCBsYXVnaGluZy4gIjxFbT5BZ2Fpbi48L2VtPiINCg0KIlNjaWVudGlmaWMgdGhlb3J5IGZvdXIsIiBDYWxlYiBtdXJtdXJzLCAiaXQgZG9lc24ndCBkcml2ZSB1cyBjcmF6eSBhbmQgaXQncyB0aGUgbW9zdCBpbnRlcmVzdGluZyB0aGluZyB0aGF0J3MgZXZlciBoYXBwZW5lZCBpbiBteSA8aT5saWZlPC9pPi4iDQoNCiJTdG9wIDxFbT50YWxraW5nPC9lbT4sIiBzdWdnZXN0cyBUaG9tYXMsIGFuZCB0aGlzIHRpbWUgaGUgcHV0cyBoaXMgaGFuZCBvbiBDYWxlYidzIGZhY2UsIHNraW4gdG8gYnJhaW4uDQoNCkNhbGViIGZsaW5jaGVzIGJhY2sgd2l0aG91dCBtb3ZpbmcsIGFuZCB3aGVuIFRob21hcyBmb2xsb3dzIGJvdGggQ2FsZWIncyBoYW5kcyBjb21lIHVwIHRvIHNlaXplIFRob21hcycgaGFpciwgc29tZSBtZWFuaW5nbGVzcyBwaHlzaWNhbCBnZXN0dXJlIGZvciB0aGUgcG93ZXIgc2xhbW1pbmcgaW50byBUaG9tYXMnIG1pbmQsIHNvIGZvciBvbmUgZGl6enkgaGVhcnRiZWF0IGFuZCBhbm90aGVyIGFuZCBhbm90aGVyLCBoZSdzIHR3byBwZW9wbGUgYXQgb25jZSBhbmQgdGhleSdyZSBib3RoIHRyeWluZyB0byBnZXQgdGhlIHVwcGVyIGhhbmQgYW5kIGl0J3MgdGhlIGJlc3QgZ2FtZSB0aGV5J3ZlIGV2ZXIgcGxheWVkLg0KDQpUaGlzIHRpbWUgbmVpdGhlciBvZiB0aGVtIGxldCBnbywgaGFuZHMgdGlnaHRlbmluZyBvbiB0aGUgY29udGFjdCwgYnV0IHRoZSBza2luIGRvZXNuJ3QgbWF0dGVyIGJlY2F1c2UgdGhlIHdvcmxkIGlzbid0IGJhc2VkIG9uIHN0dXBpZCBwZXR0eSB0aGluZ3MgbGlrZSBza2luIGFuZCBib25lIGFuZCBzaWdodCwgYW5kIG5vIG9uZSBlbHNlIGhhcyBldmVyIDxlbT5rbm93bjwvZW0+IHRoYXQgYmVmb3JlLiBJdCBpc24ndCBhdHRhY2sgKHRob3VnaCBpdCBpcyksIGl0J3MgZG9kZ2luZywgd2VhdmluZywgdG91Y2hpbmcgb24gdGhpcyBhbmQgdGhhdCBhbmQgdXNpbmcgaXQgdG8gdGllIHRoZSBvdGhlciBvbmUgdXAsIHRyaXAgdGhlbSwgc2xvdyB0aGVtIGRvd24sIGJ1dCBob3dldmVyIHRoZXkgc3BlZWQgdXAgdGhlIG90aGVyIG9uZSBpcyB0aGVyZSBrZWVwaW5nIHBlcmZlY3QgYnJlYXRobGVzcyBwYWNlLg0KDQpObyBvbmUgZWxzZSBoYXMgZXZlciBrbm93biB0aGF0IGJlZm9yZSwgc28gaXQncyB0aGUgb25seSB0aGluZyB0aGF0J3MgZXZlciBoYXBwZW5lZCB0byBlaXRoZXIgb2YgdGhlbSB3aGVuIFRob21hcyBpZ25vcmVzIHRoYXQgYW5kIGtpc3NlcyBDYWxlYiB3aXRoIHRoZSBsYXN0IGFpciBoZSBoYXMgbGVmdC4NCg0KQ2FsZWIga2lzc2VzIGhpbSBiYWNrIGZpZXJjZWx5LCBhbmQgZm9yIGEgbW9tZW50IGl0IDxpPmlzPC9pPiBqdXN0IHRoYXQsIHR3byB0ZWVuYWdlIGJveXMgb2NlYW5zIGF3YXkgZnJvbSBhbnlvbmUgd2hvIGtub3dzIHRoZW0sIGtpc3Npbmcgb24gdGhlIGJhbmsgb2YgdGhlIFNlaW5lLCBib2RpZXMgYW5kIGJsb29kIGFuZCBtaW5kcyBqdXN0IGxpa2UgYW55b25lIGVsc2UgaW4gdGhlIHdvcmxkLCBhbmQgdGhlbiBpdCBjcmFzaGVzIGJhY2s7IHRoZXkgYXJlIGVhY2ggb3RoZXIsIHRlYXJpbmcgYXQgdGhlaXIgb3duIGhhaXIgYW5kIHRyeWluZyB0byBnZXQgPGk+Y2xvc2VyPC9pPi4NCg0KVGhlIG1lbW9yaWVzIGNvbWUgZmlyc3QgYW5kIGdvIGZpcnN0LCBlbmRsZXNzIHJvd3Mgb2YgaWRlbnRpY2FsIGhvdXNlcyBvbiB0aGUgYmFua3Mgb2YgdGhlIFRoYW1lcyBtYXJjaGluZyBwYXN0IHRoZSBmYWNlIG9mIGEgc2hhcnBmZWF0dXJlZCB3b21hbiBsb29raW5nIGF3YXksIGFsbCB0aGUgbGl0dGxlIHRoaW5ncywgdGhlbiB3b3JkcyBpbiBhIHJpZGljdWxvdXMgc3RyZWFtIG9mIG1lYW5pbmdzLCBhbmQgYWZ0ZXIgdGhhdCB0aGUgcmF3IHBhcnRzIHRoYXQgbmVpdGhlciBvZiB0aGVtIGxvb2sgYXQsIHN0YXJpbmcgbm93LCBhbmQgYWZ0ZXIgdGhhdC0tIGFmdGVyLS0NCg0KT25lIG9mIHRoZW0gdGhyb3dzIGhpbXNlbGYgYmFja3dhcmRzIGFuZCB0aGVpciBib2RpZXMgYm90aCBqYXIgaW4gcmVzcG9uc2UsIGJyZWFraW5nIHRoZSBjb250YWN0Lg0KDQpUaGVyZSBpcyBubyBvbmUgYXJvdW5kLCBpbiB0aGUgaGVhcnQgb2YgUGFyaXMsIGZvciBhIGh1bmRyZWQgeWFyZHMsIGFuZCBvbiB0aGUgcGVyaW1ldGVyIHNvbWUgcGFzc2VyYnkgYXJlIGZyb3plbiBhbmQgc2hha2luZy4NCg0KIk9oLCIgQ2FsZWIgd2hpc3BlcnMsIGEgc3R1cGlkIGJyb2tlbiBzb3VuZCwgYW5kIGZvbGRzIHVwIG9uIHRoZSBiZW5jaCwgdHJlbWJsaW5nIHZpb2xlbnRseS4NCg0KVGhvbWFzIGlzIHByZXNzZWQgYWdhaW5zdCB0aGUgd2FsbCBpbiBzb21lIG9ic2N1cmUgaWRlYSB0aGF0IG9ubHkgdGhlIHdob2xlIGNpdHkgY2FuIHRha2UgaGlzIHdlaWdodCByaWdodCBub3c7IGhpcyBmZWV0IGFic29sdXRlbHkgd2lsbCBub3QgZG8gdGhlIGpvYi4NCg0KV29yZHMgYXJlbid0IHdvcmtpbmcganVzdCBub3cuIEhlIHN0YXJlcyBhdCBDYWxlYiB3aXRoIGRvdWJsZS12aXNpb24gYW5kIGlzIGF3YXJlLCBpbiBhIHdlaXJkIC0tIDxlbT5zdHJhbmdlPC9lbT4gLS0gd2F5LCB0aGF0IHRoZWlyIHBvd2VycyBoYXZlIGZlZCBvbiBlYWNoIG90aGVyLCBiZWNhdXNlIGhlIGNvdWxkbid0IHNlZSB0aGUgbGluZXMgb2YgQ2FsZWIgd2l0aG91dCB0cnlpbmcgYmVmb3JlLg0KDQpDYWxlYiBkcmFncyBpbiBhIGNvdXBsZSBvZiBkZWVwIGJyZWF0aHMsIHRpZ2h0ZW5pbmcgaGlzIGhhbmRzIG9uIHRoZSBlZGdlIG9mIHRoZSBiZW5jaCwgYW5kIGlzIGFibGUgdG8gbG9vayB1cCBhdCBUaG9tYXMuIFNvbWV0aGluZyB2YWd1ZWx5IGFwcHJvYWNoaW5nIGEgd3J5IHNtaWxlIGRhcnRzIGFjcm9zcyBoaXMgZmFjZSwgYW5kIGhlIHRpbHRzIGhpcyBoZWFkIGFuZCB0aGUgYnlzdGFuZGVycyBhbmQgdGhlIHJpbmcgb2YgaW52aXNpYmxlIGRlc3RydWN0aW9uIHN1cnJvdW5kaW5nIHRoZW0uICJUaGlzIGlzLi4uIG5ldywiIGhlIHNheXMsIHZvaWNlIHJhdy4NCg0KIkkgdGhpbmssIiBzYXlzIFRob21hcywgY2FyZWZ1bGx5IHNvIHRoYXQgaGlzIHZvaWNlIHdpbGwgbm90IHNoYWtlLCAiSSBhcHByb3ZlLiINCg0KIllvdSdyZSBub3QgY29tZm9ydGFibGUgd2l0aCBpbnRpbWFjeSwiIENhbGViIHNheXMuIFRha2VzIGFub3RoZXIgZGVlcCBicmVhdGguICJXZWxsLiBOZWl0aGVyIGFtIEkuIFNjaWVudGlmaWMgdGhlb3J5IG9uZSBvbiB0aGUgZmxvb3IgZm9yIHJldmlldy4iDQoNCiJHZW5lcmFsbHkgYWNjZXB0ZWQsIEkgdGhpbmssIiBUaG9tYXMgc2F5cywgYW5kIGxldHMgaGlzIGZhY2UgY3VybCB1cCBpbnRvIGEgZ3Jpbi4gIkhvdyB2ZXJ5IGludGVyZXN0aW5nIGluZGVlZC4iDQoNCkNhbGViJ3MgZmFjZSBtaXJyb3JzIGhpcyBleGFjdGx5LiAiWWVzLiIgSGUgZ2xhbmNlcyBhcm91bmQgYWdhaW4uICJZb3VyIGZsYXQuIFdlJ3JlIHNjYXJpbmcgdGhlIGxvY2Fscy4iDQoNClRob21hcyBmZWVscyBhIGJyaWVmIGxpdHRsZSBwYW5nIG9mIHJlZ3JldC4gSGUgcmF0aGVyIGVuam95cyB0aGlzIGVmZmVjdC4gIk9mIGNvdXJzZS4gSWYgeW91IHdvdWxkIGZvbGxvdyBtZT8iDQoNCiJJZiBJIGNvdWxkIGRvIG90aGVyd2lzZSwiIENhbGViIG11bWJsZXMsIGFuZCBzdGFuZHMgb24gdGhlIHNlY29uZCBhdHRlbXB0LiAiTGVhZCBvbi4iDQoNClRob21hcyBsZWFkcyBvbiwgYW5kIGRvZXNuJ3QgYm90aGVyIGxvb2tpbmcgYmFjay4gSGUgY2FuIGZlZWwgQ2FsZWIgZm9sbG93aW5nLiBJdCBpc24ndCBzbyBmYXIgdG8gaGlzIGZsYXQgYW5kIGhlIHRha2VzIGl0IGEgYnJpc2sgcGFjZS4NCg0KVGhlIGRvb3IncyByZWNlc3NlZCBpbnRvIHRoZSB3YWxsIHNsaWdodGx5IGFuZCBUaG9tYXMgdW5sb2NrcyB0aGUgZ2F0ZS4gSGUgcGlja2VkIHRoaXMgcGxhY2UgZm9yIGl0cyBwcml2YWN5OyBiZWNhdXNlIGl0cyBvcmlnaW5hbCBvd25lciBhbHNvIGxpa2VkIHRoZWlyIHByaXZhY3ksIGFuZCB3YXMgbm90IG1pc3NlZC4NCg0KIk5pY2UgcGxhY2UgeW91IGhhdmUgaGVyZSwiIENhbGViIG11cm11cnMsIGtub3dpbmcgZXhhY3RseSBob3cgVGhvbWFzIGNhbWUgYnkgdGhpcyBmbGF0Lg0KDQoiWWVzLCB3ZSB3ZXJlIHZlcnkgbHVja3kgdG8gaGl0IHRoZSBsb3cgZW5kIG9mIHRoZSBtYXJrZXQsIiBzYXlzIFRob21hcyBkcnlseSwgYW5kIHB1c2hlcyB0aGUgZG9vciBvcGVuLiAiQ29tZSBpbi4iDQoNClRoZSByb29tIDxlbT5pczwvZW0+IHNwYWNpb3VzIGFuZCB3ZWxsLWxpdCwgaWYgbGFyZ2VseSBlbXB0eS4gVGhvbWFzIGRvZXNuJ3QgYWNjcmV0ZSB0aGluZ3MgYW55bW9yZS4NCg0KQ2FsZWIgd2Fsa3MgaW4gYXMgdGhvdWdoIGhlJ3MgaW50aW1hdGVseSBmYW1pbGlhciB3aXRoIHRoZSBwbGFjZSwgYW5kIGxvb2tzIGFyb3VuZCBjb25zaWRlcmluZ2x5LiAiS2VlcCBpdCwiIGhlIHNheXMsIHNocnVnZ2luZy4gIkxldCdzIGVhdCBub3c7IHdoYXRldmVyIHRoZSBoZWxsIGhhcHBlbmVkIGJhY2sgdGhlcmUsIGl0J3MgbWFkZSBtZSBodW5ncnkuIg0KDQpUaG9tYXMgcmFpc2VzIGFuIGV5ZWJyb3cgYnV0IHB1c2hlcyBvcGVuIGEgc2hlbGYgYW5kIHJ1bW1hZ2VzIGFyb3VuZCBmb3IgdGhlIG1ha2luZ3Mgb2YgYSBtZWFsLiBTdGlyLWZyeSBpcyBxdWljayBhbmQgd2lsbCBzaGFtZSBub2JvZHksIGlmIHdlbGwtbWFkZSwgYW5kIGhlIDxlbT5pczwvZW0+IFBhcmlzaWFuOyBpdCB3aWxsIGJlLg0KDQoiV2hlcmUgYWZ0ZXIgQW1zdGVyZGFtPyIgaGUgYXNrcy4gIk9yaWdpbmFsbHkuIg0KDQoiSSBkb24ndCBrbm93LCIgQ2FsZWIgc2F5cywgbGVhbmluZyBiYWNrIGNvbWZvcnRhYmx5IGFnYWluc3QgdGhlIGNvdW50ZXIuICJHZXJtYW55LiBJdGFseS4gUnVzc2lhLiBJIHdhcyB0aGlua2luZyBJIG1pZ2h0IHRyeSB2aXNpdGluZyBldmVyeSBjb3VudHJ5IGluIHRoZSB3b3JsZC4gSXQgc2hvdWxkIGtlZXAgbWUgZnJvbSBnZXR0aW5nIGJvcmVkIGZvciBhIHdoaWxlLiBOZXcgbGFuZ3VhZ2VzIHRvIHRyeS4iIEEgcGF1c2UuICJXaHkganVzdCBQYXJpcz8iDQoNClRoZSB2ZWdldGFibGVzIHNpenpsZS4gIkkgaGF2ZW4ndCBoYWQgbG9uZyB0byBkZWNpZGUsIiBUaG9tYXMgc2F5cyB0aG91Z2h0ZnVsbHksIGJlY2F1c2Ugbm8gdXNlIGNvbmNlYWxpbmcgPGVtPnRoYXQ8L2VtPiBub3cuICJJIHRoaW5rIGV2ZW50dWFsbHktLSBwZXJoYXBzIGV2ZXJ5d2hlcmUuIFBhcmlzIGlzIGFuIGV4Y2VsbGVudCBwbGFjZSB0byBzdGFydC4iDQoNCiJZb3UncmUgd2VsY29tZSB0byBpdCwiIENhbGViIG11cm11cnMsIGFuZCBydWJzIGhpcyBmb3JlaGVhZCwgYW5kIHN3aXRjaGVzIHRvIEVuZ2xpc2guICJZb3UgcmVhbGx5IGdvdHRhIGV4cGxhaW4gdG8gbWUgaG93IHlvdSBkbyBpdCwiIGhlIGFkZHMuICJXYW50IGV2ZXJ5dGhpbmcuIFNvbWUgZGF5cyBJIGhhdmUgdHJvdWJsZSB3YW50aW5nIGFueXRoaW5nIGF0IGFsbC4iDQoNClRob21hcyB3YXRjaGVzIHRoZSBwYW4uICJJIHNhdywiIGhlIG11cm11cnMuICJJdCBzZWVtcyBkdWxsLiBJIHdvdWxkIGNoYW5nZSBpdCwgYnV0IHRoZW4gSSB3b3VsZCBoYXZlIGNvbXBldGl0aW9uLCB3b3VsZG4ndCBJPyINCg0KQ2FsZWIgbGF1Z2hzLiAiRG9uJ3QgeW91IGRhcmUgY2hhbmdlIGEgc2luZ2xlIGZ1Y2tpbmcgdGhpbmcsIiBoZSBzYXlzLCB3aXRob3V0IG11Y2ggdmVub20uICJJdCA8aT5pczwvaT4gZHVsbC4gVGhhdCdzIHdoeSB5b3UgcmVhbGx5IGdvdHRhIGV4cGxhaW4gaG93IHlvdSBrZWVwIGl0IGludGVyZXN0aW5nIGFsbCB0aGUgdGltZS4gVGhlcmUncyBubyA8aT5jaGFsbGVuZ2U8L2k+LiINCg0KIkkga25vdywiIHNheXMgVGhvbWFzLiAiSSB3YXMgYmVnaW5uaW5nIHRvIGJlIGFmcmFpZCBvZiB0aGF0LiBCdXQgbm93IHRoZXJlJ3MgdHdvIG9mIHVzLiINCg0KIlllcywiIENhbGViIG11cm11cnMsIGFuZCB3YXRjaGVzIGluIHJlbGF0aXZlIHNpbGVuY2UgYXMgVGhvbWFzIGRpc2hlcyB0aGUgc3Rpci1mcnkgb250byBhIGRpc2guIEhpcyBtaW5kIGlzIGh1bW1pbmcsIGEgcmFwaWQtZmlyZSBiYWNrZ3JvdW5kIG5vaXNlLCBhbmQgYWZ0ZXIgYSBtb21lbnQgaGUgYWRkcywgIkRvIHlvdSBrbm93IHdoYXQgeW91IHdhbnQgZnJvbSBtZT8iDQoNCiJObywiIHNheXMgVGhvbWFzLCBhbmQgbWVhbnMgaXQsIGJlY2F1c2UgaGUgaXNuJ3Qgc3VyZSB3aGF0IHRoZXJlIGlzIG9mIENhbGViIHlldCB0byB3YW50LiAiSSBiZWxpZXZlIGF0IHRoZSBtb21lbnQgSSB3YW50IHlvdSB0byBhcHByZWNpYXRlIGEgZ29vZCBzdGlyLWZyeS4iDQoNCkhlIGxpc3RlbnMgdG8gQ2FsZWIgd2hpci4NCg0KVGhleSBlYXQgdGhlIHN0aXIgZnJ5IGluIHRoZSBsb3VkZXN0IHNpbGVuY2Ugb2YgVGhvbWFzJyBsaWZlLCBib3RoIG9mIHRoZW0gcHJvZGRpbmcgZ2VudGx5IGF0IGVhY2ggb3RoZXIncyBtaW5kcyBhbmQgPGk+a25vd2luZzwvaT4gaXQsIGEgY29uc2Npb3VzIG5vdmVsdHk7IENhbGViJ3MgdGhlIG9uZSB0byBzdGFydCBncmlubmluZyBmaXJzdCwgd2lsZCBhbmQgc211Zywgc3RhcmluZyBkb3duIGF0IGhpcyBwbGF0ZS4NCg0KVGhvbWFzIGtlZXBzIGhpcyBpbiwgZWxlY3RpbmcgdG8gaW5zdGVhZCBsb29rIHN1cGVyaW9yLCBidXQgaXQncyBhIG1lYW5pbmdsZXNzIGdlc3R1cmUuIEhlIHN1ZGRlbmx5IGNhbid0IGVhdCBhbm90aGVyIGJpdGUgb2YgdGhlIHN0aXIgZnJ5LiBJdCBmYXNjaW5hdGVzIGhpbSAtLSBkZWxpZ2h0cyBoaW0gLS0gdGhhdCBoZSBkb2Vzbid0IGtub3cgd2hldGhlciBvciBub3QgdGhhdCBlbW90aW9uIGlzIENhbGViJ3MgaWRlYSwgb3IgbWVyZWx5IGhpcyBvd24gZXhjaXRlbWVudC4NCg0KQ2FsZWIgc2hvdmVzIGhpcyBvd24gc3Rpci1mcnkgYXdheS4gIlNvLCIgaGUgc2F5cyBicmVhdGhsZXNzbHkuDQoNCiJZZXM/IiBUaG9tYXMgYXNrcywgdGhlIGdyaW4gZmlnaHRpbmcgaXRzIHdheSBmb3J0aC4NCg0KIkkgZG9uJ3Qga25vdywiIENhbGViIHNuYXBzLCBzdGFuZGluZy4gSGUncyB0cmVtYmxpbmcgd2l0aCB0ZW5zaW9uLiAiR29kLiBJIGRvbid0IDxpPmtub3c8L2k+LiIgVGhlIGdyaW4gY29tZXMgYmFjaywgYmxpbmRpbmdseS4NCg0KVGhvbWFzIGRlbXVyZWx5IGZvbGRzIGhpcyBuYXBraW4gYW5kIHB1c2hlcyB0aGUgcGxhdGUgYXdheS4gSGUgdGFrZXMgYXMgbG9uZyBhcyBoZSBwb3NzaWJseSBjYW4gdG8gc3RyZXRjaCBhbmQgc3RhbmQuICJEbyB0ZWxsIG1lIHdoZW4gdGhpcyBnZXRzIHRlZGlvdXMsIiBoZSBtdXJtdXJzLg0KDQoiSSBjb3VsZCBraWxsIHlvdSwiIENhbGViIHNheXMsIHN3YWxsb3dpbmcgaGFyZC4gIkdvZCwgZm9yIGJlaW5nIHNvIDxpPmluZnVyaWF0aW5nPC9pPi4iIEhlJ3Mgc3RpbGwgZ3Jpbm5pbmcuICJJIGNvdWxkIDxpPnRyeTwvaT4uIg0KDQoiVHJ5LCIgc2F5cyBUaG9tYXMsIGhpcyBzbWlsZSBnZXR0aW5nIHNoYXJwZXIsICJhbmQgZmluZCBvdXQuIg0KDQpDYWxlYiBtYXkgYmUgYWJsZSB0bywgYWZ0ZXIgYWxsLCBhbmQgaXQgd2lsbCBiZSA8ZW0+ZmFzY2luYXRpbmc8L2VtPiB0byBzZWUuDQoNCiJObywiIENhbGViIHNheXMsICJubywgaXQgd291bGQgYmUgYSB3YXN0ZSBub3cuIEl0IHdvdWxkIGdldCBib3JpbmcgYWdhaW4gc28gPGk+cXVpY2tseTwvaT4uIg0KDQoiQW5kIHdlIGNhbid0IGhhdmUgeW91IGdldHRpbmcgYm9yZWQsIiBhZ3JlZXMgVGhvbWFzLCBzdGVwcGluZyBhcm91bmQgdGhlIHRhYmxlLiAiRG8geW91IHdvbmRlciBpZiBwZXJoYXBzIEkgYW0gb25seSBzb21ldGhpbmcgdGhhdCB5b3VyIG1pbmQgaGFzIGludmVudGVkLCB0byBzdGF2ZSBvZmYgc3RhZ25hdGlvbj8iDQoNCiJObywiIENhbGViIHNheXMsIHNtaWxpbmcgc2xpZ2h0bHkuICJObywgeW91J3JlIHRoZSBtb3N0IHJlYWwgdGhpbmcgSSd2ZSBldmVyIGZlbHQuIg0KDQoiVGhhdCBkb2Vzbid0IG1lYW4gYW55dGhpbmcsIiBzYXlzIFRob21hcywgbGF1Z2hpbmcuIEhlJ3MgY2xvc2UgZW5vdWdoIG5vdyB0aGF0IGhlIGRvZXNuJ3QgPGVtPmhhdmU8L2VtPiB0byB0b3VjaCBDYWxlYiB0byByZWFjaCBvdXQsIG5vdCB3aGVuIHRoZWlyIHBvd2VycyBhcmUgZmVlZGluZyBvZmYgZWFjaCBvdGhlciwgYW1wbGlmeWluZy4NCg0KSGUgZG9lc24ndCA8ZW0+aGF2ZTwvZW0+IHRvIGtpc3MgaGltLCBidXQgd2hlcmUncyB0aGUgZnVuIGluIDxlbT50aGF0PzwvZW0+DQoNCiJJdCBtZWFucyA8aT5ldmVyeXRoaW5nPC9pPiwiIENhbGViIG11cm11cnMsIGFuZCBpdCBkb2Vzbid0IG1hdHRlciB3aG8gc3RhcnRzIHRoZSBraXNzLCBidXQgaXQncyBzbG93IGFuZCBkZWVwIGFuZCBkZWNlcHRpdmVseSBnZW50bGUsIHRoZWlyIGhhbmRzIHRhbmdsaW5nIGluIGVhY2ggb3RoZXIncyBoYWlyLCBtaW5kcyBjYXJlZnVsbHkgc2xpcHBpbmcgaW4sIGFuZCB0aGlzIHRpbWUgaXQgaXNuJ3QgYSByYWNlLCB0aGlzIHRpbWUgdGhleSdyZSBwcm9kZGluZyBhdCB3ZWFrbmVzc2VzIGFuZCBsZWF2aW5nIHRoZW0gYmUgZm9yIG5vdywgPGk+bGVhcm5pbmc8L2k+Lg0KDQpUaGV5IHB1bGwgYXdheSB3aXRob3V0IGxldHRpbmcgZ28sIGFuZCBDYWxlYiBpcyBmbHVzaGVkLCBhIGRhemVkIGxvb2sgaW4gaGlzIGV5ZXMuIEhlIGdpdmVzIFRob21hcyBhIHNsb3cgcHJlZGF0b3J5IGdyaW4uDQoNCiI8ZW0+VGhhdCdzPC9lbT4gaG93IEkgZG8gaXQsIiBUaG9tYXMgc2F5cyBzb2Z0bHkuDQoNCiJTZXg/IiBDYWxlYiByZXR1cm5zIGFmdGVyIGEgbW9tZW50LiAiSGFyZGx5LiBUaGF0J3Mgbm90aGluZyBuZXcuIg0KDQoiQ3V0ZSwiIG11cm11cnMgVGhvbWFzLiAiTm8uIFlvdSB1bmRlcnN0YW5kLiBCZWNhdXNlIGlmIHlvdSBkaWRuJ3QsIHlvdSdkIGhhdmUga2lsbGVkIG1lLiINCg0KIllvdSdyZSBkaWZmZXJlbnQsIiBDYWxlYiBzYXlzLiAiWW91J3JlIG5ldy4gQW5kIHBvc3NpYmx5IHlvdSBjb3VsZCBraWxsIG1lIGp1c3QgYXMgd2VsbCBhcyBJIGNvdWxkIGtpbGwgeW91LiBJIG1heSBiZSBib3JlZCwgYnV0IEkgaGF2ZSBzZWxmLXByZXNlcnZhdGlvbiBpbnN0aW5jdHMuIg0KDQoiVGhlbiBJJ20gZGlzYXBwb2ludGVkLCIgc2F5cyBUaG9tYXMsIHNhZGx5LiAiQmVjYXVzZSBpdCA8ZW0+YWxtb3N0PC9lbT4gbG9va2VkIGxpa2UgeW91IHdhbnRlZCB0byBrZWVwIGdvaW5nLiINCg0KIk5vLCIgQ2FsZWIgbXVybXVycywgYW5kIGhpcyBoYW5kcyB0aWdodGVuIGluIFRob21hcycgaGFpci4gIk5vLCB5b3UgbWlzdW5kZXJzdGFuZC4gVGhpcyBpc24ndCBhYm91dCBraWxsaW5nIG9yIGR5aW5nLCB0aGlzIGlzIGFib3V0IGJlaW5nIDxpPmFsaXZlPC9pPiwiIGFuZCBoZSBraXNzZXMgVGhvbWFzIGFnYWluLCBub3QgZ2VudGx5IGF0IGFsbCwgYml0aW5nIGhpcyBsaXAgYW5kIHR3aXN0aW5nIGhpcyBoYW5kcyBhbmQgVGhvbWFzIGlzIGdpdmluZyBhcyBnb29kIGFzIGhlIGdldHMuDQoNCkJlaW5nIGFsaXZlLS0gdGhlIGZpcnN0IHRoaW5nIFRob21hcyBoYXMgbGVhcm5lZCBmcm9tIHRoaXMgYm95IGlzIHRoYXQgdGhlIGZpY3Rpb25zIGhlIGxvdmVkIHNvIHZlcnkgbXVjaCBhcyBjaGlsZCBkb24ndCBhcHBseSBoZXJlLCBub25lIG9mIHRoZW07IHRoZXkgYXJlbid0IHdhaXRpbmcgYW5kIHRoZXkgYXJlbid0IHN0cnVnZ2xpbmcgYW5kIGl0J3MgYWxsIGVhc3kgYW5kIHNvIGl0IGlzbid0IGxpdmluZywgaXQncyBzb21ldGhpbmcgZW50aXJlbHkgZGlmZmVyZW50LCB3aGF0IEVkZW4gd291bGQgaGF2ZSBiZWVuIGJ1dCB0aGUgYXBwbGUgaXMgYWxsIHRoZXJlIGlzIC0tIGNhbid0IHBvc3NpYmx5IGJlIHRoaXMgaGFyZCBhbmQgdGhpcyBzaW1wbGUsIGl0IGNhbid0IGp1c3QgYmUgdGhpcyBtYXplIHRoYXQncyBDYWxlYiwgYW5kIFRob21hcyBkb2Vzbid0IHdhbnQgdG8gdGhpbmsgd2hhdCB3aWxsIGhhcHBlbiB3aGVuIGhlIHJlYWNoZXMgdGhlIGNlbnRlciAtLSBidXQgbm8sIHRoYXQncyBub3QgaXQsIGl0J3MgQ2FsZWIgdGhhdCdzIGFmcmFpZCBvZiB0aGUgZ29hbCwgYmVjYXVzZSBDYWxlYidzIG5ldmVyIHNlZW4gd2hhdCBpdCBjYW4gYmUgbGlrZSAtLSBvciBtYXliZSBpdCdzIGJvdGggb2YgdGhlbSBicmVhdGhpbmcgaGFyZCBhbmQgZ2V0dGluZyB0aGUgb25seSBoaWdoIG9mIHRoZWlyIGxpZmUgb2ZmIHRoaXMgZmVhci4NCg0KQ2FsZWIgZG9lc24ndCBldmVuIGJvdGhlciB0byBicmVhayB0aGUga2lzcyB0byB2b2ljZSB0aGUgZ2FzcGluZyBmcmFudGljIDxpPmNsb3RoZXMgb2ZmIG5vdzwvaT4gdGhhdCBsZWFwcyBpbnRvIFRob21hcycgaGVhZC4gSGUgcHVsbHMgYXQgVGhvbWFzJyBjbG90aGVzLCBncmFjZWxlc3MgYnV0IHByZWNpc2UsIGFuZCBpdCdzIGEgY29tcGxldGVseSBwb2ludGxlc3MgaW1wdWxzZSBiZWNhdXNlIHRoaXMgaXMgYWxyZWFkeSBmYXIgbW9yZSBpbnRpbWFjeSB0aGFuIGVpdGhlciBvZiB0aGVtIGhhdmUgZXZlciBoYWQsIGJ1dCBwaHlzaWNhbCBjbG9zZW5lc3MgaGVpZ2h0ZW5zIHRoZSB3YXkgdGhlaXIgbWluZHMgY29ubmVjdCBhbmQgdGhlIGh1bSBpbiBDYWxlYidzIG1pbmQgaXMgPGk+bW9yZSBtb3JlIG1vcmUtLTwvaT4NCg0KVGhvbWFzIGlzIGxhdWdoaW5nIHNvdW5kbGVzc2x5IGFuZCB0aGV5J3JlIHJpcHBpbmcgYXQgZWFjaCBvdGhlciwgaWYgdGhlIHNraW4gY2FtZSBvZmYgYXMgZWFzeSB0aGV5J2QgcHJvYmFibHkgdGFrZSB0aGF0IG9mZiB0b28sIGJ1dCB0aGUgcm9vbSBmbGlja2VycyBpbiBhbmQgb3V0IG9mIHZpc2lvbiBldmVyeSB0aW1lIHRoZWlyIGJvZGllcyBjb21lIGludG8gY29udGFjdCB3aXRoIGEgc3VyZmFjZSBvciBhIGZsb29yIHNvIHRoZXkncmUgc2NyYWJibGluZyBvbiB0aGUgZ3JvdW5kLiA8aT5Nb3JlIG1vcmUgbW9yZTwvST4gcGFzdCBzaGFkb3dzIG9mIGZhY2VzIGFuZCBvdGhlciBib2RpZXMgYW5kIHRoZSBzaW5naW5nIG9mIENhbGViJ3MgdGhvdWdodHMgZGlzc29sdmluZywgdG8gdGhlIGhpZ2ggYnJpZ2h0IGVtcHR5IHBsYWNlIGluIHRoZSBtaWRkbGUsIHdoZXJlIFRob21hcyBjYW4ndCBnbyBiZWNhdXNlIGl0IG1lYW5zIG5vdCBiZWluZyBUaG9tYXMgYW5kIHRoYXQncyBub3Qgc29tZXRoaW5nIGhlJ3Mgc3R1cGlkIGVub3VnaCB0byB0cnksIHlldCwgYnV0IENhbGViIGhhcyBhIGdyaXAgb24gaGltIGFuZCB0aGV5IHdhbnQgdG8gZmFsbC4NCg0KPGk+Q2xvc2VyLDwvaT4gQ2FsZWIgZ2FzcHMsIGFuZCBpdCdzIGEgcG93ZXJmdWwgY29tcHVsc2lvbiB3aXRob3V0IG1lYW5pbmcgdG8gYmUgYnV0IFRob21hcyB0YWtlcyBpdCwgcGh5c2ljYWwgYm9kaWVzIGJyZWF0aGxlc3NseSBjbG9zZSB1bnRpbCB0aGV5IGNhbiBiYXJlbHkgdGVsbCB3aGljaCBvZiB0aGVtIGlzIHdoaWNoIGFuZCB0aGF0IGFsb25lIG1ha2VzIGl0IGJldHRlciB0aGFuIG5lYXJseSBhbnl0aGluZyB0aGV5J3ZlIGV2ZXIgZG9uZSwgYW5kIHRoZXkncmUgZGFuZ2Vyb3VzbHkgY2xvc2UgdG8gdGhlIGJyaWdodCBwbGFjZSwgYW5kIENhbGViIHNheXMsIGV2ZW4gaGlzIHJlYWwgaW5uZXIgdm9pY2Ugc291bmRpbmcgZGF6ZWQgYW5kIGJyZWF0aGxlc3MsIDxpPkkgZGFyZSB5b3U8L2k+Lg0KDQo8aT5Cb3JlZCB5ZXQ/PC9pPiBzYXlzIFRob21hcywgbWFraW5nIHRoZSB3b3JkcyBhbG1vc3QgcmVhbC1lZGdlZCwgYmVjYXVzZSBoZSBzdGlsbCBoYXMgZW5vdWdoIG9mIGZlZWxpbmcgbGVmdCB0byBiZSB0ZXJyaWZpZWQuIDxJPlNoYW1lLiBXaG8ga25vd3MgaWYgdGhlcmUncyBhbnl0aGluZyBhZnRlciB0aGlzLjwvaT4NCg0KPGk+SWYgdGhlcmUgaXMsIEkgd2FudCB0byBkbyB0aGlzIGFnYWluPC9pPiwgQ2FsZWIgdGVsbHMgaGltLCB0aGUgd29yZHMgZGlzc29sdmluZyBpbnRvIHNvbWV0aGluZyB3aWxkbHkgYW11c2VkIGFzIHNvb24gYXMgVGhvbWFzIGNhdGNoZXMgdGhlaXIgbWVhbmluZywgYW5kIENhbGViIGJydXNoZXMgdGhlIGVkZ2Ugb2YgdGhlIHdoaXRlbmVzcywgZmVlbGluZyBvdXQgZmlyZXdvcmtzLg0KDQo8aT5JZGlvdCw8L2k+IFRob21hcyB0ZWxscyBoaW0sIG1lYW5pbmcgZXZlcnlvbmUgaW4gdGhlcmUsIGFuZCBkaXZlcyBzbyBhcyB0byBiZSBmaXJzdC4NCg0KVGhleSBoaXQgYXQgdGhlIHNhbWUgdGltZSBhbnl3YXkuDQoNCkl0IDxpPmJ1cm5zPC9pPi4NCg0KQW5kIGZvciB0aGUgc2Vjb25kIHRoYXQgaXQgbGFzdHMgaXQgaXMgcGVyZmVjdGx5IGFic29sdXRlbHkgPGk+cmVhbC48L2k+DQoNClRpbWUgc3RyZXRjaGVzIGFuZCBzbmFwcyBhbmQgdGhleSBhcmUgZmx1bmcgYmFjayBvdXQgdmlvbGVudGx5LCBnYXNwaW5nIGFuZCBzaGl2ZXJpbmcsIFRob21hcycgaGFuZHMgcHJlc3NlZCBzb2xpZGx5IGludG8gdGhlIGNvbGQgZ3JvdW5kIGFuZCBDYWxlYidzIHNob3VsZGVyYmxhZGVzIGRpZ2dpbmcgaW50byB0aGUgZmxvb3IgdW5jb21mb3J0YWJseSwgYW5kIHNpbmNlIFRob21hcyBjYW4gc3RpbGwgZmVlbCBpdCB0aGV5J3JlIHN0aWxsIHNvbWVob3cgaGFsZi1zdWJtZXJnZWQsIGJ1dCBoZSBjYW4gc2VlIG91dCBvZiBoaXMgb3duIGV5ZXMgbm93IGFuZCBoZSBzdGFyZXMgZG93biBhdCBDYWxlYiwgd2hvIGJsaW5rcyB1cCBhdCBoaW0sIG1vdXRoIG9wZW4gYSBsaXR0bGUgYW5kIGEgbG9vayBvZiBzdWNoIGFic29sdXRlIGRlYmF1Y2hlcnkgb24gaGlzIGZhY2UgdGhhdCBpdCdzIG5lYXJseSByaWRpY3Vsb3VzLg0KDQoiPGk+WWVzLDwvaT4iIFRob21hcyB3aGlzcGVycy4gSXQncyB0aGUgb25seSB0aGluZyB0byBzYXksIHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzLg0KDQpDYWxlYiBsYXVnaHMgd2Vha2x5LiAiSS0tIEkgY2FuJ3QgbW92ZS4iDQoNCiJPdmVycmF0ZWQsIiBzYXlzIFRob21hcywgZmlybWx5LCB3aG8gY291bGQuIElmIGhlIGNob3NlLg0KDQpIZSB0aGlua3MuDQoNCiJNbSwiIENhbGViIGFncmVlcyBkYXplZGx5LiBHcmlucywgaW4gYSBmYWludCB3YXkuICJEb24ndCBsaWtlIHlvdSBhbnkgYmV0dGVyIG5vdy4iDQoNCiJZb3UgZG9uJ3QgaGF2ZSB0byA8ZW0+bGlrZTwvZW0+IG1lLCIgc2F5cyBUaG9tYXMsIHZlcnkgYW11c2VkLiAiVGhhdCB3b3VsZCB0YWtlIGF3YXkgdGhlIHdob2xlIHBvaW50IG9mIHRoZSBleGVyY2lzZS4iDQoNCkhlIGZlZWxzIGhpcyBlZGdlcyBjb2FsZXNjaW5nIGFnYWluLCBhbmQgaGUgc2hha2VzIGhpbXNlbGYgbWVudGFsbHkgbGlrZSBhIGNhdCB0byBzZXR0bGUgaW50byB0aGVtLg0KDQoiSSBkb24ndCBrbm93LCIgQ2FsZWIgc2F5cyB0aG91Z2h0ZnVsbHksICJsaWtpbmcgc29tZW9uZSB3b3VsZCBiZSBhIG5vdmVsdHkuIg0KDQpUaG9tYXMgbWFrZXMgdGhlIHRyZW1lbmRvdXMgZWZmb3J0IHRvIHJhaXNlIGEgaGFuZCwgcGF0dGluZyBDYWxlYiBvbiB0aGUgc2lkZSBvZiB0aGUgZmFjZS4gIlBlcmhhcHMgdGhlcmUgYXJlIG1vcmUgb2YgdXMsIiBoZSBzYXlzIGluIGEgY29tZm9ydGluZyBzb3J0IG9mIG1hbm5lci4gIkl0J3MgdW5saWtlbHkgd2UncmUgdGhlIG9ubHkgcGFpciBpbiB0aGUgdW5pdmVyc2UuIg0KDQoiRG9uJ3Qgc2F5IHRoYXQsIiBDYWxlYiBzYXlzIHBsYWludGl2ZWx5LiAiSSBsaWtlIGZlZWxpbmcgc3BlY2lhbC4iDQoNCiJZb3UncmUgY2VydGFpbmx5IDxlbT50aGF0PC9lbT4sIiBzYXlzIFRob21hcywgdGhvdWdodGZ1bGx5Lg0KDQoiSSBhaW4ndCBzdXJlIHRoYXQncyBhIGNvbXBsaW1lbnQsIiBDYWxlYiBtdXJtdXJzLg0KDQoiTGV0J3Mgc2F5IC4uLiBhbiBvYnNlcnZhdGlvbi4iIFRob21hcyBsb29rcyBhdCBoaW0gY29uc2lkZXJpbmdseS4gSGlzIHBvd2VyJ3MgZXZlcnl3aGVyZSBidXQgaW4gaGltIHJpZ2h0IG5vdywgc28gd2hlbiBoZSBraXNzZXMgQ2FsZWIgbGlnaHRseSBpdCdzIDxlbT5hbG1vc3Q8L2VtPiBqdXN0IGEgcGh5c2ljYWwgc2Vuc2F0aW9uLg0KDQpDYWxlYiBzdGlsbCBtYWtlcyBhIGxpdHRsZSBub2lzZSBoYWxmd2F5IGJldHdlZW4gcGFpbiBhbmQgcGxlYXN1cmUsIGtpc3NpbmcgaGltIGJhY2sgZGF6ZWRseS4NCg0KPGk+Tm8gb25lIGVsc2Ugd2lsbCBldmVyIGZlZWwgdGhpcyw8L2k+IHBvaW50cyBvdXQgVGhvbWFzLCBmYXNjaW5hdGVkLiA8aT5ObyBvbmUgZWxzZSB3aWxsIGV2ZXIgYmUgc3VycHJpc2VkIHRoYXQgdGhleSdyZSBqdXN0IHRvdWNoaW5nLjwvaT4NCg0KQ2FsZWIgc21pbGVzIGZhaW50bHkgYWdhaW5zdCBUaG9tYXMnIGxpcHMuIDxpPkFpbid0IHdlIHRoZSBsdWNraWVzdCBiYXN0YXJkcyBvbiB0aGUgcGxhbmV0LjwvaT4NCg0KDQoNClRob21hcyB3YWtlcyB1cCB0aGUgbmV4dCBtb3JuaW5nIGNvbXBsZXRlbHkgY29uc2Npb3VzIHRoYXQgaGUgaXMgcHJlc3NlZCBza2luIHRvIHNraW4gd2l0aCBhbm90aGVyIDxpPnBlcnNvbjwvaT4gaW4gaGlzIDxpPmJlZDwvaT4uIEl0IGRvZXMgbW9yZSBmb3IgaGltIHRoYW4gdGhyZWUgb3IgZm91ciBjdXBzIG9mIGNvZmZlZS4NCg0KSGlzIHNob2NrIGplcmtzIENhbGViIGF3YWtlOyBDYWxlYiBmbGFpbHMgdmFndWVseSBhbmQgc2F5cyBzb21ldGhpbmcgYXBwcm94aW1hdGluZyAid2F6emF0PyIgYW5kIHRoZW4gc3RhcmVzIGF0IFRob21hcyBpbiB3aWRlLWV5ZWQgc2hvY2suICJPaCwiIGhlIGFkZHMuDQoNCkJ5IHRoZW4gVGhvbWFzIGhhcyB0aHJvd24gdXAgdGhlIGhpZ2hlc3QsIHRoaWNrZXN0IHdhbGxzIGhlIGNhbiBtYW5hZ2UsIHdoaWNoIGlzIHdoeSBoZSBzYXlzICJHb29kIG1vcm5pbmcsIHByaW1yb3NlLCIgd2l0aCBhIHNtaWxlIGFuZCBub3QgY2F0YXRvbmlhLg0KDQpDYWxlYiBzbWlsZXMgYmFjayBhZnRlciBhIG1vbWVudC4gIkJlc3QgZnVja2luZyBsYXkgSSd2ZSBldmVyIGhhZCwiIGhlIHNheXMuDQoNCiJPbmx5IGZ1Y2tpbmcgbGF5IHlvdSd2ZSBldmVyIGhhZCwiIHNheXMgVGhvbWFzLCAiaWYgeW91IHdhbnQgdG8gYmUgYWNjdXJhdGUgYWJvdXQgaXQuIFNob3VsZCBJIG9mZmVyIHlvdSBvcmFuZ2UganVpY2Ugb3IgYXNrIHlvdSBhYm91dCB5b3VyIGZlZWxpbmdzIGZpcnN0PyINCg0KSGUncyBncmlubmluZy4NCg0KIkknbSBmZWVsaW5nIGluc2VjdXJlIGFuZCB1bmNvbWZvcnRhYmxlIGFib3V0IHBpbGxvd3RhbGsgYW5kIEkgZG9uJ3Qga25vdyB3aGVyZSB0aGlzIHJlbGF0aW9uc2hpcCBpcyBnb2luZywgb2ggbm8gb2ggbXksIiBDYWxlYiBkcmF3bHMuICJHb2QsIHBsZWFzZSwgb3JhbmdlIGp1aWNlLiINCg0KVGhvbWFzIHR3aXRjaGVzIHRoZSBjdXJ0YWlucyBvcGVuIGFuZCBzdGFuZHMsIGJsaW5raW5nIGluIHRoZSBzdW5saWdodC4NCg0KSGUgcmVhbGlzZXMgdGhhdCBoZSBoYWRuJ3QgZHJlYW1lZCBsYXN0IG5pZ2h0LiBVc3VhbGx5IGhlIGhlYXJzIHRoZSBwZW9wbGUgaW4gdGhlIGZsYXRzIGFyb3VuZCBoaW0gcnVzdGxpbmcgYWxsIG5pZ2h0IGxvbmc7IGl0J3MgYSBzdHJhbmdlIGtpbmQgb2YgcmVzdC4gTm93IGhlIGZlZWxzIGZyZXNoIGFuZCBmdWxsLg0KDQpUaGUgb3JhbmdlIGp1aWNlIGlzIGluIHRoZSBmcmlkZ2UsIHNvIGhlIGhlYWRzIHZhZ3VlbHkgb3ZlciB0b3dhcmRzIHRoZSBraXRjaGVuLg0KDQpDYWxlYiB3YW5kZXJzIG91dCBhZnRlciBoaW0sIHN0aWxsIGxvb2tpbmcgZGF6ZWQuIElmIFRob21hcyB3ZXJlIGluIHRvcCBmb3JtLCBwZXJoYXBzIGhlJ2QgdGFrZSBhZHZhbnRhZ2Ugb2YgdGhhdDsgYXMgaXMsIGhlIGtub3dzIGhlIG11c3QgbG9vayBtdWNoIHRoZSBzYW1lLg0KDQoiSSBkb24ndCBhY3R1YWxseSBrbm93IHdoZXJlIG15IGNsb3RoZXMgd2VudCwiIENhbGViIGNvbW1lbnRzLg0KDQoiSSBidXJuZWQgdGhlbSwiIFRob21hcyBpbmZvcm1zIGhpbS4gWWVzdGVyZGF5J3MgY2xvdGhlcyBhcmUgcmFncyBvbiB5ZXN0ZXJkYXkncyBmbG9vcmJvYXJkcywgYWN0dWFsbHksIGJ1dCBDYWxlYiBjYW4gYm9ycm93IFRob21hcycuICJNeSBjbG9zZXQgaXMgaW4gdGhlIG90aGVyIHJvb207IHdlJ2xsIGZpbmQgY2xvdGhlcyBmb3IgeW91IGxhdGVyLiIgSGUgaGFuZHMgb3ZlciB0aGUgY3VwLg0KDQpDYWxlYiB0YWtlcyBpdCBncmFjaW91c2x5LCBlbnRpcmVseSBhdm9pZGluZyBjb21pbmcgaW50byBjb250YWN0IHdpdGggVGhvbWFzJyBza2luLiAiU2hvcHBpbmcgaXNuJ3QgaGlnaCBvbiBteSBsaXN0IG9mIHRoaW5ncyB0byBkbyBhdCB0aGUgbW9tZW50LiINCg0KIldobyBzYWlkIGFueXRoaW5nIGFib3V0IHNob3BwaW5nPyIgaW5xdWlyZXMgVGhvbWFzLiAiSSdtIHN1cmUgdGhlcmUncyBzb21lb25lIGVsc2UgaW4gUGFyaXMgd2hvJ3MgeW91ciBzaXplIGFuZCBzaGFyZXMgeW91ciB0YXN0ZSBmb3IgcGFudHMgdGhhdCBhcHBlYXIgdG8gYmUgc3ByYXktcGFpbnRlZCBvbiB5b3VyIGxlZ3MuIg0KDQoiSW5zdWx0IG9yIG9ic2VydmF0aW9uIHJlZ2FyZGluZyBteSBmYXNoaW9uIHNlbnNlPyIgQ2FsZWIgZW5xdWlyZXMsIHNpcHBpbmcgaGlzIG9yYW5nZSBqdWljZS4NCg0KIk9ic2VydmF0aW9uLCIgIFRob21hcyBhc3N1cmVzIGhpbSwgYW5kIGxlYW5zIGFnYWluc3QgdGhlIGNvdW50ZXI7IDxlbT5ub3Q8L2VtPiB0aGF0IGhlIG5lZWRzIGl0Lg0KDQoiSSB3b3VsZCBoYXZlIGdvbmUgZm9yIHlvdSwiIENhbGViIHNheXMgYWZ0ZXIgYSBtb21lbnQsICJldmVuIGlmIHlvdSdkIGJlZW4gdG90YWxseSBub3JtYWwuIiBIZSBzaHJ1Z3MuDQoNCiJJJ20gYWx3YXlzIGdsYWQgdG8gbWVldCBzb21lb25lJ3Mgc2V4dWFsIHN0YW5kYXJkcywiIHNheXMgVGhvbWFzIGNhbG1seS4gIkRyaW5rIHlvdXIganVpY2UuIg0KDQpDYWxlYiBkb2VzIHNvLCBncmlubmluZyBhcm91bmQgdGhlIGdsYXNzLiAiQW5kIHRvZGF5PyIgaGUgYXNrcyBhZnRlciBhIG1vbWVudC4NCg0KIkkgZG9uJ3Qga25vdywiIHNheXMgVGhvbWFzLiAiSWYgd2UgcnVuIG91dCBvZiBpZGVhcyB3ZSBjYW4gYWx3YXlzIHRyeSB0byBraWxsIGVhY2ggb3RoZXIuIEJ1dCBJIHRoaW5rIEknZCBsaWtlIHRvIHRyeSBsYXN0IG5pZ2h0IGFnYWluLCBmaXJzdC4iDQoNCiI8aT5ZZXM8L2k+LCIgQ2FsZWIgc2F5cyB3aXRoIHF1aWV0IGZlcnZlbmN5LCBhbmQgZnJvd25zLiAiV2hhdCB0aGUgaGVsbCB3YXMgdGhhdCwgYW55d2F5PyINCg0KVGhvbWFzIGdpdmVzIGhpbSBhbiBhbXVzZWQgbG9vay4gIkknbSBzdXJlIHRoZXJlJ3MgYSB0ZWNobmljYWwgdGVybS4iDQoNCiJJIGRvdWJ0IGl0LCIgQ2FsZWIgc2F5cywgc2V0dGluZyBoaXMgZ2xhc3MgYXNpZGUuICJJJ20gc3VyZSBGcmV1ZCB3b3VsZCBoYXZlIGEgZmllbGQgZGF5LiIgSGUgdGFwcyB0aGUgZ2xhc3MgdGhvdWdodGZ1bGx5IHdpdGggYSBmaW5nZXJuYWlsLiAiSSBkb24ndCB0aGluayBJIHdhbnQgdG8ga2lsbCB5b3Ugbm93LCIgaGUgYWRkcy4gIkZ1bm55LCB0aGF0LiINCg0KIkknZCBjb25zaWRlciBpdCBhIGZhdm9yLCIgbXVybXVycyBUaG9tYXMsIHdobyBpc24ndCBxdWl0ZSBhcyBzdXJlIHRoYXQgdGhpcyB3aWxsIGxhc3QuIEhlIGtub3dzIGhlIGRvZXNuJ3Qgd2FudCB0byBraWxsIENhbGViIDxlbT5ub3c8L2VtPjsgdGhhdCBpbiBpdHNlbGYgaXMgc3RyYW5nZS4NCg0KQ2FsZWIgZnJvd25zLCBzdGFyaW5nIHBhc3QgVGhvbWFzJyBzaG91bGRlciBvdXQgdGhlIHdpbmRvdy4gVGhvbWFzIGNhbiBuZWFybHkgc2VlbiB0aGUgUGFyaXNpYW4gc2t5bGluZSB0aHJvdWdoIENhbGViJ3MgZXllcy4gDQoNCiJUaGUgcHJvYmxlbSwiIENhbGViIHNheXMsICJpcyB0aGF0IHlvdSB3b3VsZCBoYXZlIGJlZW4gaGFyZGx5IHdvcnRoIG15IHRpbWUgaW4gdGhlIGdlbmVyYWwgd2F5IG9mIHRoaW5ncywgYW5kIEkgPGk+a25vdzwvaT4gdGhhdDsgSSd2ZSBzZWVuIHdobyB5b3Ugd2VyZSB1bnRpbCByZWNlbnRseS4gQnV0LS0iIGhlIHN3YWxsb3dzLCBzaGl2ZXJpbmcgYSBsaXR0bGUsICJteSBnb2QsIFRob21hcywgSSd2ZSBuZXZlciBzZWVuIGFueXRoaW5nIHNvIGJlYXV0aWZ1bC4iDQoNClRob21hcyBsYXVnaHMsIGtub3dpbmcgaXQgdG8gYmUgYSBoYXJzaCBsaXR0bGUgbm9pc2UsIGFuZCBmaW5kcyBhIGNoYWlyLiAiV2hlcmUgd2UgbWVldCwgdGhlIHBvZXRzIGZlYXIgdG8gdHJlYWQuIg0KDQpIZSBkb2Vzbid0IGFjY3JldGUgdGhpbmdzIGFueW1vcmUuIEV2ZW4gcGVvcGxlLiBDYWxlYidzIHRlbXB0aW5nIGFuIGV4Y2VwdGlvbi4NCg0KIkJ1dCBJIGRvbid0IGhvbmVzdGx5IGxpa2UgeW91LCIgQ2FsZWIgbXVybXVycy4gSGUgc3RhcmVzIGF0IFRob21hcywgc2VlbWluZ2x5IHVuc2VlaW5nbHkuICJJIGRvbid0IGxpa2UgbXlzZWxmIGVpdGhlci4gQnV0IDxpPnlvdTwvaT4gbGlrZSB5b3UuIg0KDQogVGhvbWFzIG5vZHMuICJUaGF0J3MgdGhlIGRpZmZlcmVuY2UsIiBoZSBzYXlzIHNsb3dseS4gIkkgaGF2ZSB0aGUgZWRnZSBpbiBub3RoaW5nIGVsc2UgYnV0IGFycm9nYW5jZS4iDQoNCiJBcmUgeW91IGhhcHB5PyIgQ2FsZWIgYXNrcyBhYnJ1cHRseS4NCg0KIk5vLCIgc2F5cyBUaG9tYXMuICJOb3QganVzdCBub3cuIg0KDQpDYWxlYiBsYXVnaHMgc2hvcnRseS4gIklzIHRoYXQgbXkgZmF1bHQ/Ig0KDQoiWWVzLCIgc2F5cyBUaG9tYXMuICJUaGFuayA8ZW0+Z29kLjwvZW0+Ig0KDQpDYWxlYiBncmlucywgZmFpbnQgYnV0IHJlYWwuICJPaCwgZG8gdGVsbC4iDQoNCiJBbnkgYW5pbWFsIGNhbiBiZSBoYXBweSwiIHNheXMgVGhvbWFzLCBhbmQgcHVzaGVzIG9mZiB0aGUgY291bnRlciwgdG93YXJkcyBDYWxlYi4gIldpdGggZW5vdWdoIHNvbWEgaW4gdGhlIHdhdGVyLiINCg0KIlNvIHlvdXIgdW5oYXBwaW5lc3MgaXMgYSBibGVzc2luZywiIENhbGViIGRlYWRwYW5zLg0KDQoiRGlkIEkgc2F5IEkgd2FzIDxlbT51bmhhcHB5PC9lbT4/IiBUaG9tYXMgYXNrcy4gSGUgZmVlbHMgaGlzIGJyZWF0aCBvbiBDYWxlYidzIHNraW4uICJJJ20gLi4uIHVuY29tZm9ydGFibGUuIg0KDQpDYWxlYiBmbGFzaGVzIGEgcXVpY2sgZ3Jpbi4gVGhvbWFzIGNhbiBmZWVsIGhpcyBoZWFydCByYXRlIHBpY2sgdXAuICJOZXZlciBiZXR0ZXIuIg0KDQoiQXJlIDxlbT55b3U8L2VtPiBoYXBweT8iIFRob21hcyBhc2tzIGhpbSwgc2xpZGluZyByaWdodCBuZXh0IHRvIGhpbSwgd2FsbCB0byB3YWxsLg0KDQoiSS0tIiBDYWxlYiBzYXlzLCBhbmQgc2hpdmVycyBhZ2Fpbi4gIkkndmUgbmV2ZXIgdHJpZWQgdG8gYmUuIg0KDQoiVHJ5LCIgc3VnZ2VzdHMgVGhvbWFzLCAic29tZXRpbWUuIg0KDQoiV2hhdCBhcmUgeW91IHN1Z2dlc3Rpbmc/Ig0KDQpUaG9tYXMgc2lnaHMgYW5kIHNsaXBzIGNhcmVmdWxseSBpbnRvIENhbGViJ3MgbWluZCwgYWxsIG91dCBpbiB0aGUgb3BlbiBzbyB0aGF0IENhbGViIGRvZXNuJ3QgZmxpbmNoIGF3YXkuICJIYXBweSwiIGhlIHNheXMsICJpcyBlYXN5LCIgYW5kIHRvdWNoZXMgdGhlIHJpZ2h0IGNvbnRhY3QuDQoNCkl0IGdsb3dzIGluIENhbGViJ3MgZmFjZSBmb3IgYSBtb21lbnQsIHB1cmUgY29udGVudG1lbnQsIGFuZCB0aGVuIENhbGViJ3Mgc2xhcHBpbmcgaGltLCBtaW5kIGFuZCBoYW5kIGFsaWtlLCB0b3RhbGx5IGVucmFnZWQuDQoNClRob21hcyB0YWtlcyB0aGUgc2xhcCBsYXVnaGluZy4gIlllcywiIGhlIHNheXMuICJEbyB5b3Ugc2VlPyINCg0KIjxpPkRvbid0IGNoYW5nZSBtZTwvaT4sIiBDYWxlYiBzbmFybHMuDQoNCiJXaGF0IGRpZCB5b3UgdGhpbmsgdGhhdCBwbGFjZSA8ZW0+d2FzPC9lbT4/IiBUaG9tYXMgZGVtYW5kcy4gIkEgaGF2ZW4/IElmIHdlIHRvdWNoLCB3ZSdsbCBjaGFuZ2UgZWFjaCBvdGhlciwgb3ZlciBhbmQgb3ZlciBhbmQgb3ZlciwgYmVjYXVzZSB0aGF0LCBkYXJsaW5nIENhbGViLCBpcyB3aGF0IHdlIDxlbT5kby48L2VtPiINCg0KQ2FsZWIgbGF1Z2hzIGFuZ3JpbHkgYW5kIGdvZXMgdG8gdGhlIHdpbmRvdywgc3RhcmluZyBvdXQgYXQgUGFyaXMuICJUaGF0J3Mgc3RpbGwgZXF1YWwgZ3JvdW5kLCIgaGUgc2F5cy4NCg0KVGhvbWFzIHByZXNzZXMgaGlzIGhhbmRzIHRvIGhpcyBleWVzLCBsb29rcyB0aHJvdWdoIENhbGViJ3MgaW5zdGVhZC4gIlRoZXJlJ3Mgbm8gc3VjaCB0aGluZywiIGhlIHNheXMuDQoNCiJUb3VjaMOpLCIgQ2FsZWIgbXVybXVycywgYW5kIGJsaW5rcywgdHVybmluZywgc28gZm9yIGEgbW9tZW50IFRob21hcyBpcyBsb29raW5nIGF0IGhpbXNlbGYuICJZb3UncmUgdG9vIGFycm9nYW50IHRvIGJlIGFmcmFpZC4iDQoNCiJJJ20gdGVycmlmaWVkLCIgc2F5cyBUaG9tYXMgc2hhcnBseS4gIkkgZGlkbid0IHdhbnQgdG8gdG91Y2ggaXQgYXQgYWxsLiBJIGxpa2UgbWUsIHJlbWVtYmVyPyINCg0KQnV0IHlvdSBkaWQsIiBDYWxlYiBjb3VudGVycy4gIldoeSBkaWQgeW91LCBpZiB5b3UgZGlkbid0IHdhbnQgdG8/Ig0KDQoiQmVjYXVzZSB5b3UgZGFyZWQgbWUgdG8sIiBzYXlzIFRob21hcy4gIkkgZG9uJ3Qga25vdy4iDQoNCiJDdXJpb3NpdHksIiBDYWxlYiBtdXJtdXJzLiAiQW55dGhpbmcgbmV3LiINCg0KIjxlbT5FdmVyeXRoaW5nPC9lbT4gbmV3LCIgc2F5cyBUaG9tYXMsIGEgY2FyZWZ1bCBsaXR0bGUgY29ycmVjdGlvbi4NCg0KQ2FsZWIgc3dhbGxvd3MuICJJJ20gYWZyYWlkIGV2ZW4geW91J2xsIGdldCBib3JpbmcuIg0KDQoiSSBrbm93IHlvdSB3aWxsLCIgbXVybXVycyBUaG9tYXMuICJUaGVyZSBpc24ndCB0ZXJyaWJseSBtdWNoIHRvIGVpdGhlciBvZiB1cy4gT25seSBtb3JlIHRoYW4gd2UndmUgaGFkIGJlZm9yZS4iDQoNCkNhbGViIHNpZ2hzLCBsZWFuaW5nIGJhY2sgYWdhaW5zdCB0aGUgd2luZG93c2lsbCBhbmQgdGlwcGluZyBoaXMgaGVhZCBiYWNrLiAiR29kLiBNYXliZS0tIG1heWJlIGl0J2xsIGJlIGRpZmZlcmVudCBpZiB3ZSBkbyBpdCBhZ2Fpbi4iDQoNCiJBbmQgYWdhaW4sIGFuZCBhZ2FpbiwgYW5kIGFnYWluLCIgc2F5cyBUaG9tYXMgcmVsZW50bGVzc2x5LiAiSSdtIHNvcnJ5LiIgSGUgcmVhY2hlcyBmb3IgQ2FsZWIncyBmYWNlLiAiV2UgY2FuLCBvZiBjb3Vyc2UsIHRyeS4iDQoNCkNhbGViIG1vdmVzIHRvd2FyZHMgaGltLCBoZWFkIHRpbHRlZCBpbnRvIHRoZSB0b3VjaCwgYW5kIG11cm11cnMsICJJZiBpdCdzIG5vdCwgZHlpbmcgbWlnaHQgYmUgbmV3IGFuZCBpbnRlcmVzdGluZy4iDQoNCiJZb3UgY2FuIGZpbmQgb3V0LCIgVGhvbWFzIHRlbGxzIGhpbSwgImJlY2F1c2UgSSBkb24ndCBwbGFuIHRvLCIgYW5kIGRpdmVzIGluLg0KDQpBbmQgaXQgPGVtPmlzPC9lbT4gZGlmZmVyZW50IHRoaXMgdGltZSwgYmVjYXVzZSB0aGV5J3JlIGRpZmZlcmVudGx5IGNhcmVmdWwsIGFuZCB0aGlzIHRpbWUgd2hlcmUgdGhlIGVkZ2VzIGFyZSBpdCBpc24ndCBhIGRhbmNlIGJ1dCBhbiBleHBsb3JhdGlvbi4gTm9uZSBvZiB0aGUgc2FtZSB1cmdlbmN5LCBidXQgQ2FsZWIgc3BlbmRzIHRvbyBsb25nIGxvb2tpbmcgYXQgc29tZXRoaW5nIGJlZm9yZSBUaG9tYXMgY2FuIHB1bGwgaGltIGF3YXkgYW5kIHRoZXkgYXJlbid0IGFzIGVsZWdhbnQgYnV0IHRoZXkgYnJ1c2ggdXAgbW9yZSBvZnRlbiBhbmQgZXZlcnkgdGltZSBpdCdzIGxpa2UgbGlnaHRuaW5nLg0KDQpIZSdzIGZhaW50bHkgYXdhcmUgb2YgdGhlaXIgYm9kaWVzOyB0aGlzIHRpbWUgaXQncyBub3QgYWJvdXQgYmVpbmcgZnJhbnRpY2FsbHkgY2xvc2UsIGVpdGhlciwgYnV0IGEgc2xvdyBzbGlkZSBvZiBoYW5kcywgQ2FsZWIgYmFja2VkIHVwIGFnYWluc3QgdGhlIHdpbmRvd3NpbGwsIGRpZ2dpbmcgaW50byBoaXMgYmFjayBhZ2FpbiwgYW5kIHRoZXkncmUgbm90IGtpc3NpbmcgYnV0IHRoZWlyIGZvcmVoZWFkcyBhcmUgcHJlc3NlZCB0b2dldGhlciBsaWtlIHNvbWUgcGFyb2R5IG9mIHByYXllciwgYW5kIGluc2lkZSB0aGVpciBtaW5kcyBDYWxlYiBpcyB3aGlzcGVyaW5nIDxpPm9oIG9oIG9oLS08L2k+DQoNCjxlbT5ZZXM8L2VtPiwgVGhvbWFzIGlzIGh1bW1pbmcsIDxlbT55ZXM8L2VtPiwgYmVjYXVzZSB0aGlzIGlzIG5ldywgdGhpcyBpcyBhIHN0YXJ0LCBidXQgaGUgaXMgYWxyZWFkeSBiZWdpbm5pbmcgdG8gbGVhcm4gdGhlIHNvdW5kIG9mIENhbGViJ3MgbWluZCBhbmQgdGhlIHdheSB0aGF0IHdoZW4gaGUgZ29lcyB1cCBDYWxlYiBzaW5rcy4gSXQgd2lsbCBub3QgbGFzdC4gSXQgbWFrZXMgdGhlIHdheSB0aGV5IGdvIGluIHNsb3cgc3BpcmFscyB0b3dhcmRzIHRoZSBjZW50ZXIgbW9yZSBwYWluZnVsIGFuZCB0aGVyZWZvcmUgaXQgc2lua3MgaW4gbW9yZS4NCg0KSGUgZmVlbHMgQ2FsZWIgbGF1Z2hpbmcsIGJ1dCBmb3Igc29tZSByZWFzb24gQ2FsZWIgZmVlbHMgY29tcGVsbGVkIHRvIHNheSBpdCBhbG91ZCwgd2hpc3BlcmluZyBhZ2FpbnN0IFRob21hcycgbGlwcywgIkkgPGk+d2FudDwvaT4gdG8gbGV0IGdvLiINCg0KVGhvbWFzIHNtaWxlcywgPGVtPmVxdWFsIGdyb3VuZDwvZW0+LCBhbmQgaXMgaGlzIGJvZHkgbG9uZyBlbm91Z2ggdG8gaW5maW5pdGVzaW1hbGx5IG5vZC4NCg0KVGhleSBzaW5rIGludG8gdGhlIHdoaXRlIHBsYWNlIHRvZ2V0aGVyLCBzbyBzbG93bHkgdGhhdCB0aGUgc2Vjb25kIG9mIHRydXRoIHN0cmV0Y2hlcyBpbnRvIHVuYmVhcmFibGUgcGFpbi4NCg0KQW5kIHRoZW4gdGhleSdyZSB0aHJvdWdoLCBhbmQgc2VwYXJhdGUgYWdhaW4sIGFuZCBUaG9tYXMgbGF1Z2hzIGFuZCBzbGlkZXMgZ3JhY2VsZXNzbHkgdG8gdGhlIGdyb3VuZCBiZWNhdXNlIGhpcyBsZWdzIHdvbid0IGhvbGQgaGltIGFueW1vcmUuDQoNCkNhbGViIGZvbGxvd3MgYSBzZWNvbmQgYWZ0ZXIsIHRoZSB3aW5kb3cgaG9sZGluZyBoaW0gZm9yIGEgbW9tZW50IGJlZm9yZSBoZSBjb2xsYXBzZXMgaW4gYSBoZWFwLg0KDQoiV2UgY2FuIGhhbmcgb3Vyc2VsdmVzIHRvbW9ycm93LCBpZiB3ZSBicmluZyByb3BlLCIgc2F5cyBUaG9tYXMgd2l0aCBoaXMgZXllcyBjbG9zZWQuDQoNCiJJbmdsb3Jpb3VzLCIgQ2FsZWIgc2F5cyBhZnRlciBhIG1vbWVudC4gIkluZWxlZ2FudC4gTm8uIg0KDQpUaG9tYXMgY3JhY2tzIGFuIGV5ZSBvcGVuIHRvIGdpdmUgdGhlIEFtZXJpY2FuIGEgZ2xhcmUuICJUaGF0IHdhcyA8ZW0+QmVja2V0dC48L2VtPiINCg0KIldoYXQ/IiBDYWxlYiBhc2tzLCBhcHBhcmVudGx5IGhvbmVzdGx5IGJhZmZsZWQuDQoNCiJXYWl0aW5nIGZvciBHb2RvdD8gTm8/IiBUaG9tYXMgc2lnaHMuICJSZWFkIGl0LiBJdCdkIGJlIGluc3RydWN0aXZlLiINCg0KIk9oLCIgQ2FsZWIgc2F5cywgcmVnYXJkaW5nIHRoZSBjZWlsaW5nLiAiTmloaWxpc20uIFRoYXQncyBzaWxseS4iDQoNClRob21hcyBzaGFrZXMgaGlzIGhlYWQuICJJIGRvbid0IG11Y2ggbGlrZSB5b3UgZWl0aGVyLCBDYWxlYi4iDQoNCiJEw6lqw6AgdnUsIiBDYWxlYiBtdXJtdXJzLiAiSSB3b25kZXIgd2hhdCBhZGRpY3Rpb24gZmVlbHMgbGlrZS4iDQoNClRob21hcyBzbWlsZXMgc2xvd2x5LiAiSSBzaG91bGQgYmUgZmxhdHRlcmVkLiINCg0KIkl0J3MgaGFwcGVuaW5nIHRvIHlvdSB0b28sIiBDYWxlYiBzYXlzIGZsYXRseS4NCg0KIk5vLCIgc2F5cyBUaG9tYXMsIHNhZGx5LiAiVGhhdCB3b3VsZCBtYWtlIHRoaW5ncyBlYXNpZXIuIg0KDQpDYWxlYiBnaXZlcyBoaW0gYSBjb25zaWRlcmluZyBsb29rLiAiQm9yZWQ/IiBoZSBhc2tzLg0KDQoiTm90IHlldCwiIHNheXMgVGhvbWFzLiAiT25lIGRheS4iDQoNCiJPbmUgZGF5IDxpPmFueXRoaW5nPC9pPiBtaWdodCBoYXBwZW4sIiBDYWxlYiBzYXlzIHRpZ2h0bHkuDQoNCiJJZiBvbmx5LCIgc2F5cyBUaG9tYXMsIGxpc3RlbmluZyB0byBDYWxlYiBicmVhdGhlLg0KDQoiSSBzaG91bGQgZ28sIiBDYWxlYiBtdXJtdXJzLg0KDQpUaG9tYXMgbGV0cyBoaW1zZWxmIGZlZWwgdGhlIGxpdHRsZSBydXNoIG9mIG5lZWQ7IGl0IHdpbGwgY29tZm9ydCBDYWxlYi4gIk5vLiINCg0KIk5vdCByZWFsLCIgQ2FsZWIgc2F5cyBpbiBmYWludCBhY2N1c2F0aW9uLCBidXQgaGUgc3RheXMgc2l0dGluZy4NCg0KIlJlYWwsIiBtdXJtdXJzIFRob21hcy4gIkRvbid0IGdvLiBXaGVyZSA8ZW0+d291bGQ8L2VtPiB5b3UgZ28/Ig0KDQoiQW1zdGVyZGFtLCIgQ2FsZWIgc2F5cywgYW5kIGxhdWdocyBzb2Z0bHkuICJJJ20ganVzdCB0aXNzdWVzLCBUaG9tYXMuIE1heWJlIGludGVyZXN0aW5nIGNvbG91cnMgdGhpcyB3ZWVrLiINCg0KIkFuZCBJJ20gc29tZXRoaW5nIGVsc2U/IiBUaG9tYXMgYXNrcyBzb2Z0bHkuICJEb24ndCByb21hbnRpY2lzZSB0aGlzLCBDYWxlYi4gSXQncyByZWFsOyBjb25ncmF0dWxhdGlvbnMuIEFuZCA8ZW0+d2hhdD88L2VtPiINCg0KIkkgZG9uJ3Qga25vdywiIENhbGViIHNheXMsIHNocnVnZ2luZyBsb29zZWx5IGFuZCBsb29raW5nIGF3YXkuICJJdCdzIHRoZSBvbmx5IHRoaW5nIEkndmUgZXZlciBmb3VuZCBJIGRvbid0IGtub3cgSSdsbCBnZXQgYm9yZWQgd2l0aC4gTWF5YmUtLSBtYXliZSB0aGVyZSdzIGluZmluaXRlIHBlcm11dGF0aW9ucyBmb3IgdGhpcy4gV2UgZG9uJ3Qga25vdy4iDQoNCiJJIGFtIG5vdCBib3JlZCB5ZXQuIiBUaG9tYXMgbm9kcy4gIlRoYXQncyBzb21ldGhpbmcuIg0KDQoiTWF5YmUgSSdsbCBiZWNvbWUgeW91IGVub3VnaCBpdCB3b24ndCBtYXR0ZXIsIiBDYWxlYiBzYXlzLCBhbmQgYW5nZXIgZmxhc2hlcyBhY3Jvc3MgaGlzIGZhY2UgZm9yIGEgbW9tZW50LiAiRnVja2luZyBiYXN0YXJkLCB5b3UnbGwgbmV2ZXIgbGV0IDxpPmFueXRoaW5nPC9pPiBtYXR0ZXIuIg0KDQoiPGk+SSBkb24ndCB3YW50IHRvIGJlIHlvdTwvaT4sIiBzYXlzIFRob21hcyBmdXJpb3VzbHksIGJlY2F1c2UgdGhhdCA8ZW0+ZG9lcy48L2VtPg0KDQoiSSB3b3VsZG4ndCB3aXNoIHRoYXQgb24gYW55b25lLCIgQ2FsZWIgc2F5cyBmbGF0bHkuICJJIGRvbid0IHdhbnQgdG8gbWFrZSB5b3UgbWUgZWl0aGVyLiBJJ2QganVzdCBiZSBiYWNrIHdoZXJlIEkgc3RhcnRlZC4iDQoNCiJObywiIHNheXMgVGhvbWFzLiBIZSdzIHN1ZGRlbmx5IHRpcmVkLiAiWW91IHN0aWxsIGRvbid0IHVuZGVyc3RhbmQuIg0KDQpDYWxlYiBzaWdocywgc3F1ZWV6aW5nIGhpcyBleWVzIHNodXQ7IGxvb2tzIGF0IFRob21hcyBhZ2Fpbi4gIlRoZW4gZXhwbGFpbi4iDQoNCiJObywiIFRob21hcyByZXBlYXRzLCBoaXMgbW91dGggdHdpdGNoaW5nLCBhbmQgZ2V0cyB1cC4gSGUncyBodW5ncnkuDQoNCkNhbGViIHN0YXlzIG9uIHRoZSBmbG9vci4gQWZ0ZXIgYSBtb21lbnQgaGUgc3RyZXRjaGVzIGhpcyBsZWdzIG91dCBhbmQgbGVhbnMgYmFjayBhZ2FpbnN0IHRoZSB3YWxsIGJlbG93IHRoZSB3aW5kb3cuICJNYWtlIHNvbWV0aGluZyBmb3IgbWUgdG9vLCIgaGUgc2F5cy4NCg0KVGhlIGtpdGNoZW4gZmVlbHMgbGlrZSBmYW1pbGlhciBncm91bmQgdG9kYXkuIEhlIGJ1c2llcyBoaW1zZWxmIGJ5IG1ha2luZyBhIG1vcmUgZWxhYm9yYXRlIG9tZWxldHRlIHRoYW4gaGUgaGFzIGFueSBuZWVkIHRvLiBUaGF0IHVzZWQgdG8gYmUgc29tZXRoaW5nIGhlIGxpa2VkLCBoZSByZW1lbWJlcnMsIGJlY2F1c2UgaGlzIHNpc3RlciB3b3VsZCBhbHdheXMgYm90aGVyIGhpbSBhYm91dCBub3Qgd2FudGluZyB0byBjb29rLCBhbmQgbWFrZSByYW1lbiBpbnN0ZWFkLg0KDQpIZSBjYXN1YWxseSBtYWtlcyBoaW1zZWxmIGVuam95IGl0IG1vcmUuIEhlJ3MgdGlyZWQgb2Ygbm90IGJlaW5nIGhhcHB5IGp1c3Qgbm93Lg0KDQpUaGUgb21lbGV0dGUncyBuZWFybHkgZmluaXNoZWQgY29va2luZyB3aGVuIENhbGViIHdhbmRlcnMgaW50byB0aGUga2l0Y2hlbi4gIkkgc2hvdWxkLCIgaGUgc2F5cyBjb252ZXJzYXRpb25hbGx5LiAiSSByZWFsbHkgc2hvdWxkIGdvLiINCg0KVGhvbWFzIHNocnVncy4gIlRoZW4gbGVhdmUuIg0KDQoiTm8sIiBDYWxlYiBzYXlzLCBzb2Z0IGFuZCBtb2NraW5nLiAiWW91IHNhaWQgbm8uIFlvdSBzYWlkIHNheWluZyBubyB3YXMgcmVhbC4iDQoNCiJJdCBpcywiIHNheXMgVGhvbWFzLCBlcXVhbGx5IHNvZnQuICJCdXQgeW91IGluc2lzdCBvbiBwcmV0ZW5kaW5nIHRoYXQgeW91IDxlbT5jYW48L2VtPiBsZWF2ZS4gV2hvIGFtIEkgdG8gc3RvcCB5b3UgZnJvbSB0aGF0PyINCg0KIllvdSB0aGluayBJIGNhbid0LCIgQ2FsZWIgc2F5cyBmbGF0bHkuDQoNCiJDYW4geW91PyIgVGhvbWFzIHNheXMgaW5zdGVhZCBvZiBhbnN3ZXJpbmcuDQoNCiJZZXMsIiBDYWxlYiBzYXlzLg0KDQpIZSBkb2Vzbid0IG1vdmUuDQoNClRob21hcyBzbWlsZXMgYSBsaXR0bGUuICI8RW0+V2lsbDwvZW0+IHlvdT8iDQoNCkNhbGViIG9wZW5zIGhpcyBtb3V0aCBzbGlnaHRseS4gSGVzaXRhdGVzLiANCg0KIkkgdGhpbmsgSSBoYXRlIHlvdSwiIGhlIHNheXMgYWZ0ZXIgYSBtb21lbnQuDQoNCiJUaGF0IHdvdWxkIGJlIGEgbm92ZWx0eSwiIG11cm11cnMgVGhvbWFzLCBhbmQgaGFuZHMgQ2FsZWIgYSBwbGF0ZS4NCg0KQ2FsZWIncyBrbnVja2xlcyBnbyB3aGl0ZSBhcyBoZSBob2xkcyBpdC4gVGhvbWFzIGNhbiBmZWVsIENhbGViIHByb2RkaW5nIGF0IHRoZSBlZGdlcyBvZiBoaXMgbWluZCwgbm90IHN1YnRseSwgbm90IDxpPnRyeWluZzwvaT4gYW55dGhpbmcsIGFuZCBDYWxlYiBzYXlzLCAiWW91IGRvbid0IGZlZWwgPGk+YW55dGhpbmc8L2k+IHJlYWwsIGRvIHlvdS4iDQoNCiJUaGVyZSdzIG5vIHN1Y2ggdGhpbmcsIiBzYXlzIFRob21hcywgc29mdGx5LiAiVGhlcmUgbmV2ZXIgaGFzIGJlZW4uIFdlJ3JlIGNoZW1pY2FscywgY2hlbWljYWxzIG1vdmluZyBhcm91bmQgaW4gaW50ZXJlc3RpbmcgcGF0dGVybnMuIFRoZSB0d28gb2YgdXMgY2FuIDxFbT5zZWU8L2VtPiBpdDsgdGhhdCdzIGFsbC4iDQoNCiJHb2QsIiBDYWxlYiBzYXlzIHRvbmVsZXNzbHksIGFuZCBlYXRzIGhpcyBvbWVsZXQuDQoNCkhlJ3Mgc3RvcHBlZCBwcm9iaW5nIGFyb3VuZCB0aGUgZWRnZXMgb2YgVGhvbWFzJyBtaW5kLCBzbyBUaG9tYXMgcmV0dXJucyB0aGUgZmF2b3Igd2hpbGUgaGUgZWF0cywgdHJ5aW5nIGp1c3QgdG8gdW5kZXJzdGFuZCB0aGUgc2hhcGUgb2YgaGltLiBIZSB0aGlua3MgcGVyaGFwcyBoZSA8ZW0+ZG9lczwvZW0+IGxpa2UgQ2FsZWIsIGJlY2F1c2UgQ2FsZWIgaXMgc28gdmVyeSwgdmVyeSBodW1hbi4NCg0KQ2FsZWIgaXMgaHVtbWluZzsgQ2FsZWIgaXMgc2NhcmVkLCBhbmQgaGUncyBsZXR0aW5nIFRob21hcyBzZWUgaXQsIGluIGEgZGVmaWFudCBzb3J0IG9mIHdheSwgYXMgdGhvdWdoIGhlIHJlYWxseSBkb2VzIHRoaW5rIGhlIGNvdWxkIHRocm93IHRoZSB3YWxscyBiYWNrIHVwIHdoZW5ldmVyIGhlJ2QgbGlrZSBhbmQgaGUncyBnaXZpbmcgVGhvbWFzIHNvbWUgc29ydCBvZiBnaWZ0LiBIZSB3b24ndCBtZWV0IFRob21hcycgZXllcy4NCg0KIldoYXQgYXJlIHlvdSBhZnJhaWQgb2Y/IiBhc2tzIFRob21hcywgZmFzY2luYXRlZC4gIldoYXQgPGVtPmlzPC9lbT4gdGhlcmUgdG8gYmUgYWZyYWlkIG9mPyINCg0KQ2FsZWIgamVya3MgaGlzIGhlYWQgdXAgdG9vIHF1aWNrbHkgYW5kIHN0YXJlcyBhdCBUaG9tYXMuICJPZi4uLiIgaGUgc2F5cywgYW5kIHRyYWlscyBvZmYsIGZyb3duaW5nLiAiSSBkb24ndCBrbm93LiA8aT5XYW50aW5nPC9pPiB0byBiZSBiZXN0ZWQuIg0KDQoiT2gsIiBzYXlzIFRob21hcyBpbiBhIGRpc2FwcG9pbnRlZCBmYWxsLiAiWWVzLiINCg0KIldoYXQsIiBDYWxlYiBzYXlzLCB3aXRoIGEgcXVpY2sgZ3JpbiwgInlvdSB3ZXJlIGV4cGVjdGluZy0tIGRlZXAgYWJhbmRvbm1lbnQgaXNzdWVzPyBUaGF0IEknbSBhZnJhaWQgb2YgPGk+eW91PC9pPj8iDQoNCiJZb3UgYXJlLCIgVGhvbWFzIHBvaW50cyBvdXQsIHdpdGggYW4gYW5zd2VyaW5nIGdyaW4uICJCdXQgdGhhdCBpc24ndCBpdC4iDQoNCiI8aT5SZWFsbHk8L2k+LCIgQ2FsZWIgc2F5cywgc2V0dGluZyBoaXMgcGxhdGUgYXNpZGUuICJGaW5lLiBOb3cgc3RvcCBiZWluZyBhbGwgc21hcnRlci10aGFuLXRob3UgYW5kIHRlbGwgbWUgeW91ciBncmFuZCB0aGVvcnkgYWJvdXQgbWUuIg0KDQoiTm8sIiBzYXlzIFRob21hcyBibGl0aGVseS4gIkdldCBpdCB5b3Vyc2VsZi4iDQoNCkNhbGViIHNocnVncyBhbmQgc3RlcHMgZm9yd2FyZCwgY3VwcGluZyBUaG9tYXMnIGZhY2UgaW4gaGlzIGhhbmRzIGFuZCBkcmF3aW5nIGl0IG91dC4NCg0KSXQncyBhbiBpbXByZXNzaW9uIG1vcmUgdGhhbiBhbnl0aGluZy4gSW1wZXJtYW5lbmNlLCBhbmQgbmV3IGtpbmRzIG9mIGJhbmFsaXR5LCBhbmQgdGhlIHdheSB0aGF0IENhbGViIHdhbnRzIGVxdWlsaWJyaXVtIGFuZCByZWFsaXR5LCBhbmQgdGhlIHdheSB0aGF0IFRob21hcyBnYXZlIHVwIG9uIGVxdWlsaWJyaXVtIHRoZSBkYXkgaXQgYnJva2Ugb24gaGltIHRoYXQgaGUgd2FzIG5ldmVyIGdvaW5nIHRvIGJlIG9yZGluYXJ5IGFnYWluLiBUaG9tYXMgd2F0Y2hlcyBpdCBnbyBwYXN0IHdpdGggYSBiaXQgb2YgaW50ZXJlc3Q7IGhlIGhhZG4ndCB2b2NhbGlzZWQgaXQgdG8gaGltc2VsZiBhcyB3ZWxsIGFzIGl0J3MgY29taW5nIG91dCBub3cuIEhlIGNhbiBzZWUgd2hlcmUgdGhpcyBpcyBnb2luZy4gSXQgd2lsbCBlbmQgaW4gZmlyZSBvciBpdCB3aWxsIGVuZCBpbiBpY2UuIFRoZXJlJ3Mgbm90aGluZyB0aGF0IGRvZXNuJ3QgZW5kLCBsaWtlIENhbGViIHdhbnRzLCBhbmQgdGhlcmUncyBub3RoaW5nIHRoYXQgaHVydHMgZW5vdWdoIHRvIG1ha2UgaXQgd29ydGggcHVyc3VpbmcuDQoNCkhlIHdpc2hlcyBhbG1vc3QgdGhhdCB0aGV5IGhhZCB0cmllZCBmaWdodGluZyBmaXJzdCwgc28gaXQgY291bGQgZW5kIGluIHRoZSBoaWdoIGJyaWdodCBwbGFjZSwgYnV0IHRoZXkndmUgYmVlbiB0aGVyZSBhbHJlYWR5LCBhbmQgZXZlbnR1YWxseSBpdCB3aWxsIG5vdCBiZSBlbm91Z2ggdG8gZ28gYmFjay4NCg0KQ2FsZWIgbGV0cyBnbyB3aXRoIGEgY2hva2VkIGxhdWdoLiAiUG9vciBiYXN0YXJkLCIgaGUgd2hpc3BlcnMuDQoNCiJGdW5ueSwiIHNheXMgVGhvbWFzLCBzYWRseS4gIkkgd2FzIGdvaW5nIHRvIHNheSB0aGUgc2FtZSB0aGluZy4iDQoNCiJJIGRvbid0IGtub3cgaWYgSSB3YXMgdGFsa2luZyBhYm91dCB5b3UsIiBDYWxlYiBhZG1pdHMuDQoNCiJVcywgdGhlbiwiIHNheXMgVGhvbWFzLCBhbmQga2lzc2VzIENhbGViIGxpZ2h0bHkgb24gdGhlIGZvcmVoZWFkLiAiQXJlbid0IHlvdSBldmVyIHNvIGdsYWQgd2UgbWV0LiINCg0KIlllcywiIENhbGViIHNheXMsIHJ1bm5pbmcgaGlzIHRodW1icyBvdmVyIFRob21hcycgY2hlZWtib25lcy4gSGlzIGV5ZXMgZmxpY2tlciBhd2F5IGFuZCBiYWNrIHRvIFRob21hcycgZmFjZS4gIk1heWJlIEkgc2hvdWxkIHRyeSB0byBraWxsIHlvdS4iDQoNCiJNYXliZSB5b3Ugc2hvdWxkLCIgc2F5cyBUaG9tYXMsIGZvciB0aGUgaHVuZHJlZHRoIHRpbWUuICJFdmVudHVhbGx5LiINCg0KIkV2ZW50dWFsbHksIiBDYWxlYiBlY2hvZXMsIGFuZCBzaWdocywgc3RlcHBpbmcgYmFjay4gIk5vdywgdGhvdWdoLCBJIGRvbid0IGtub3cuIg0KDQoiTmVpdGhlciBkbyBJLCIgc2F5cyBUaG9tYXMsIHF1aWV0bHkuICJJJ20gZ29pbmcgZm9yIGEgd2Fsay4iDQoNCiJBbmQgSSdtIGdvaW5nIHRvIGZpbmQgc29tZSBjbG90aGVzLCIgQ2FsZWIgc2F5cy4NCg0KIlRoYXQncyBhIG1pc3Npb24gSSBjYW4gZ2V0IGJlaGluZCwiIHNheXMgVGhvbWFzLCB3aXRoIGEgbGF1Z2gsIGFuZCBzbGlwcyBhIGtleSBpbnRvIGhpcyBwb2NrZXQsIHN0ZXBwaW5nIG91dCB0aGUgZG9vci4NCg0KQ2FsZWIgZm9sbG93cyBoaW0gdG8gdGhlIGRvb3J3YXkuICJJbiB0aGUgbWVhbnRpbWUgSSdtIHB1dHRpbmcgb24gc29tZSBvZiB5b3VyIGNsb3RoZXMsIiBoZSBzYXlzLCBhbmQgaGVzaXRhdGVzIGZvciBhIG1vbWVudC4gIkknbGwuLi4gcmV0dXJuIHRoZW0gb25jZSBJIGZpbmQgbXkgb3duLiINCg0KIkRvLCIgc2F5cyBUaG9tYXMsIGZpcm1seS4gIkkgbGlrZSBteSB0dXJ0bGVuZWNrcyBhcyB3ZWxsLiINCg0KIlJpZ2h0LCIgQ2FsZWIgc2F5cy4gIk5vdyBnZXQgb3V0IG9mIGhlcmUuIg0KDQpUaG9tYXMgc2xpcHMgb3V0IHRoZSBkb29yLg0KDQpJdCdzIGltbWVkaWF0ZWx5IGFwcGFyZW50LCBvbmNlIGhlIGhpdHMgdGhlIHN0cmVldHMsIHdoYXQgY29udGludWVkIGV4cG9zdXJlIHRvIHNvbWVvbmUgZWxzZSdzIHBvd2VyIGhhcyBkb25lIHRvIGhpbS4gVGhlIHBlb3BsZSBvbiB0aGUgc3RyZWV0IGFyZSB1dHRlcmx5IHRyYW5zcGFyZW50LiBIZSBmbGlja3MgaGlzIHdhbGxzIGJhY2sgdXAgd2hlbiBoZSBub3RpY2VzIHRocmVlIHBlb3BsZSBzaHVkZGVyIGFzIGhlIHdhbGtzIGJ5LCBhbmQgaGVhZHMgc3RvcCB0dXJuaW5nLiBPbiBhIHdoaW0gaGUgZmluZHMgYSBiZW5jaCBhbmQgbWFrZXMgZXZlcnkgb3RoZXIgcGVyc29uIHBhc3NpbmcgcGF1c2UuIEl0J3MgYWJzdXJkbHkgZWFzeS4gSXQgaGFkbid0IGJlZW4sIGJlZm9yZS4gVGhlcmUgYXJlIGEgaHVuZHJlZCB0aG91c2FuZCBuZXcgcGF0dGVybnMgdmlzaWJsZSBub3cuIEhlIHdpbGwgaGF2ZSB0byBsb29rIGludG8gdGhlbSwgbGF0ZXIuDQoNCkhlIHN0cmV0Y2hlcyBoaW1zZWxmIGFuZCB0cmllcyB0byBsaXN0ZW4gZm9yIHRoZSBmYWludGVzdCBoaW50IG9mIGFueSBvdGhlciBtaW5kIGxpa2UgaGlzLCBidXQgb25seSBoZWFycyBDYWxlYiwgQ2FsZWIgbGlrZSBhIGxhbnRlcm4gc29tZXdoZXJlIGluIHRoZSBNYXJhaXMsIGFuZCB0aG91Z2ggaGUncyBmYXIgYXdheSBoZSdzIHVubWlzdGFrYWJsZS4NCg0KUGVyaGFwcyB0aGV5IHJlYWxseSA8ZW0+YXJlPC9lbT4gYWxvbmUuIE9ubHkgdGhlIHR3byBvZiB0aGVtLg0KDQpBZnRlciBzb21lIHRpbWUgdGhlIGJlYWNvbiBvZiBDYWxlYidzIG1pbmQgYmVnaW5zIGhlYWRpbmcgdW5taXN0YWthYmx5IGluIGhpcyBkaXJlY3Rpb247IHNsb3dseSBhbmQgd2FuZGVyaW5nbHksIGJ1dCByZXR1cm5pbmcuDQoNCkhlIGNsb3NlcyBoaXMgZXllcyBhbmQgd2F0Y2hlcyB0aGUgbWluZHNjYXBlIGZsb3cgYXJvdW5kIGhpbS4gSGUgd29uZGVycyBpZiBDYWxlYiBrbm93cyB0aGF0IHRoZSBwZW9wbGUgaGUgaXMgcGFzc2luZyB0YWtlIG9uIGEgbGl0dGxlIGJpdCBvZiBoaXMgbGlnaHQuIENhbGViIGlzIGxlYXZpbmcgbWFya3MsIGEgdHJhaWwgYmVoaW5kIGhpbSwgYXMgaXMgVGhvbWFzLCBldmVyeW9uZSBoZSB0b3VjaGVzIGV2ZXIgc28gc2xpZ2h0bHkgZGlmZmVyZW50Lg0KDQpUaGF0LCBoZSB0aGlua3MsIHdpbGwgbmV2ZXIgYmUgb2xkLCBidXQgaGUga25vd3MgdGhlIGlkaW9jeSBvZiB0aGF0IHRob3VnaHQuDQoNCkNhbGViIGlzIGJsaW5kaW5nIGJ5IHRoZSB0aW1lIGhlIHJlYWNoZXMgdGhlIHN0cmVldCBhdCB3aGljaCBUaG9tYXMgaXMgc2l0dGluZywgYW5kIHRoYXQgaXMgYSBuZWFybHkgZnJpZ2h0ZW5pbmcgdGhpbmc7IENhbGViIHdhc24ndCB0aGlzIGJyaWdodCB3aGVuIFRob21hcyBsZWZ0IGhpbS4gSGUgb3BlbnMgaGlzIGV5ZXMgYW5kIENhbGViIGlzIHN0aWxsIGxpa2UgdGhhdCwgc2hpbmluZyBvdXRzaWRlIHRoZSBzcGVjdHJ1bSBvZiB2aXNpYmlsaXR5LCB3ZWFyaW5nIHNvbWV0aGluZyBjbG9zZWx5IGFwcHJveGltYXRpbmcgeWVzdGVyZGF5J3Mgb3V0Zml0IGFuZCBsb29raW5nIHF1aXRlIHBsZWFzZWQgd2l0aCBoaW1zZWxmLg0KDQoiV2VsbCBkb25lLCIgc2F5cyBUaG9tYXMgZHJ5bHkuICJGaW5kaW5nIGZhc2hpb24gaW4gUGFyaXMsIHRoYXQncyA8ZW0+dmVyeTwvZW0+IGRpZmZpY3VsdCBpbmRlZWQuIFlvdSBtdXN0IGJlIGdpZnRlZC4iDQoNCkNhbGViIGdyaW5zLiAiSSBmZWVsIGEgYml0IGNoZWF0ZWQsIGFjdHVhbGx5LCIgaGUgc2F5cy4gIkd1eSBJIGdvdCB0aGlzIGZyb20gd2FzIGFsbW9zdCB0b28gc3RydW5nLW91dCB0byBub3RpY2UgSSB3YXMgZXZlbiB0YWtpbmcgaGlzIGNsb3RoZXMuIg0KDQoiV2hpY2ggc2hvdWxkIHRlbGwgeW91IHNvbWV0aGluZyBhYm91dCB5b3VyIGZhc2hpb24gc2Vuc2UsIiBtdXJtdXJzIFRob21hcy4gIklzIGhlIGFkb3JuaW5nIHNvbWUgc3RyZWV0IGluIGhpcyBiaXJ0aGRheSBzdWl0IHJpZ2h0IG5vdz8iDQoNCiJZZXMsIiBDYWxlYiBzYXlzIHNvbGVtbmx5LCBob2xkaW5nIG91dCBhIGJ1bmRsZSBvZiBjbG90aGluZy4gIkkgd291bGRuJ3QgZHJlYW0gb2Ygd2FzdGluZyB5b3VyIGJlYXV0aWZ1bCB0dXJ0bGVuZWNrcyBvbiB0aGUgbGlrZXMgb2YgaGltLiINCg0KIlRoYW5rIHlvdS4iIFRob21hcyB0YWtlcyB0aGUgY2xvdGhlcyBhbmQgc3RhbmRzLiBUaGUgc3RyZWV0IGlzIGJlZ2lubmluZyB0byBlbXB0eSwgbGlrZSB5ZXN0ZXJkYXksIHBlb3BsZSBza2lydGluZyBhcm91bmQgdGhlIGRpc3R1cmJhbmNlIHRoYXQgdGhleSBkbyBub3QgdW5kZXJzdGFuZC4NCg0KQ2FsZWIgZ2xhbmNlcyBhcm91bmQgYW5kIHNtaWxlcyBzbG93bHkuICJUaG9tYXMuLi4iDQoNCiJZZXM/IiBUaG9tYXMgYXNrcywgdHJ5aW5nIG5vdCB0byBtYXRjaCB0aGUgc21pbGUuDQoNCiJIZXJlLCIgQ2FsZWIgc2F5cywgYSBiaXQgYnJlYXRobGVzc2x5LCAibm93LCBsZXQncy0tIFRoYXQnbGwgbWFrZSBpdCBpbnRlcmVzdGluZywgbGV0J3Mgc2VlIGlmIFBhcmlzIHdpbGwgPGk+bm90aWNlPC9pPi4iDQoNCiJZZXMuIiBUaGUgc21pbGUgYnJlYWtzIGZvcnRoLiAiTGV0J3MuIg0KDQpIZSB0YWtlcyBDYWxlYidzIGhhbmQgaW4gYSBsaXR0bGUgcGFyb2R5IG9mIGEgZGFuY2UgYW5kIHRoZSBsaWdodCBmbGFyZXMgb3V0d2FyZHMuDQoNClRoaXMgdGltZSBpdCdzIHB1cmUgZW5lcmd5OyB0aGVpciBib2RpZXMgbWlnaHQgYmUgZG9pbmcgc29tZXRoaW5nIChhbHRob3VnaCB3aGF0ZXZlciBpdCBpcywgc29tZSBzbWFsbCBwYXJ0IG9mIENhbGViIGlzIGVudGlyZWx5IGZpcm0gb24gdGhhdCBpdCBkb2Vzbid0IGludm9sdmUgcmVtb3ZpbmcgdGhlIGNsb3RoZXMgaGUgb25seSBqdXN0IGRhbW4gPGk+Z290PC9pPikgYnV0IHRoZSBpbXBvcnRhbnQgdGhpbmcgaXMgdGhlIHdheSB0aGV5J3JlIGRpdmluZyBpbnRvIGVhY2ggb3RoZXIncyBtaW5kcywgdGhlIHBhdGh3YXlzIGFscmVhZHkgZmFtaWxpYXIsIGFuZCBDYWxlYiBpcyBibGluZGluZ2x5IDxpPmFuZ3J5PC9pPiwgZWFjaCBmbGFyZSBicmlsbGlhbnQgYW5kIG5vdCA8aT5xdWl0ZTwvaT4gYW4gYXR0YWNrLg0KDQo8ZW0+QXJlIHlvdSBoYXBweT88L2VtPiBDYWxlYiBoYWQgYXNrZWQuIFllcy4gVGhvbWFzIGlzIGJyaWxsaWFudGx5IGhhcHB5IG5vdyBhbmQgaWYgaGUgd2VyZSBub3QgZmluZGluZyB0aGUgYmFsYW5jZSBiZXR3ZWVuIGZpZ2h0aW5nIGFuZCAtLSBub3QgLS0gcXVpdGUgc28gaGFyZCBoZSB3b3VsZCBiZSBhZG1pcmluZyBob3cgYmVhdXRpZnVsIENhbGViIGlzIGxpa2UgdGhpcywgYmVjYXVzZSBDYWxlYiwgeWVzLCBDYWxlYiBpcy4gQW5kIFBhcmlzIDxlbT5pczwvZW0+IG5vdGljaW5nLiBQYXJpcyBrbm93cyB0aGV5J3JlIHRoZXJlLCBhbmQgaXMgbW92aW5nIGFyb3VuZCB0aGVtLCBhIGhvbGUgZ3Jvd2luZyB3aGVyZSB0aGV5IHN0YW5kIGFuZCB0aGUgcmVzdCBvZiBpdCBjb2xvcmluZyB1cCBsaWtlIGEgYnJ1aXNlLiBUaG9tYXMgdGhyb3dzIGhpbXNlbGYgYWdhaW5zdCBDYWxlYidzIGJvcmRlcnMgZnJvbSB0aGUgaW5zaWRlLCA8aT5tb3JlLCBtb3JlLCBnaXZlIHRoZW0gbW9yZS48L2k+DQoNCkNhbGViIHR3aXN0cywgZmlnaHRpbmcgYmFjayBhbmQgcHVzaGluZyBvdXQgYW5kIGhhbmdpbmcgb250byBUaG9tYXMgbGlrZSBhIGxpZmVsaW5lLCBzb21lIHdpbGQgd29yZGxlc3MgdGhpbmcgbGlrZSBsYXVnaHRlciB3cmFwcGluZyB0aGVtIGNsb3NlIGFuZCByaXBwbGluZyBvdXR3YXJkcyBhcm91bmQgdGhlbSBpbiBzaG9ja3dhdmVzLCBhbmQgVGhvbWFzIGNhbiBmZWVsIENhbGViIGlzIHN0cnVnZ2xpbmcgdG8gdGVsbCBoaW0gc29tZXRoaW5nIGFuZCBub3QgaGF2aW5nIHRoZSB3b3JkcyByaWdodCBhbmQgbm90IDxpPndhbnRpbmc8L2k+IHRvIHRlbGwsIGFuZCBoaXMgZnJ1c3RyYXRpb24gY29tZXMgb3V0IGluIHRoZSB3YXkgaGUncyBncmlwcGluZyB0aWdodGx5IGF0IFRob21hcyBmcm9tIHRoZSBpbnNpZGUgb3V0Lg0KDQpUaG9tYXMgc2hha2VzIGhpbSBvciBoZSBzaGFrZXMgVGhvbWFzLiBJdCdzIGxpa2UgYSBwbGF5Z3JvdW5kIGZpZ2h0IG5vdywgYWxsIGtuZWVzIGFuZCBlbGJvd3MsIGJ1dCBUaG9tYXMgaXNuJ3QgZXZlbiBzdXJlIGhlIHN0aWxsIGhhcyBhIGJvZHksIGFuZCBuZWl0aGVyIG9mIHRoZW0ga25vdyB3aGljaCBvbmUgaXMgdGhlIG9uZSBzcGl0dGluZyBzYW5kIGFuZCBwdXNoaW5nIHVwLiBOZWl0aGVyIG9mIHRoZW0gd2lsbCBnaXZlLS0gaXQgd291bGRuJ3QgYmUgd29ydGggaXQgaWYgdGhleSBldmVyIGdhdmUtLSBidXQgVGhvbWFzIHdvbid0IGxldCBnbywgc2NyYXRjaGluZyBzZWNyZXRzIG9wZW4gbG9va2luZyBmb3Igd2hhdCBpdCBpcyBDYWxlYiBkb2Vzbid0IHdhbnQgZW5vdWdoIHRvIHdhbnQgaXQuDQoNClRob21hcyBzcGFyZXMganVzdCBhIHNlY29uZCB0byB3b25kZXIgaWYgYW55Ym9keSdzIGRpZWQsIGJlY2F1c2UgUGFyaXMgaXMgZ2xvd2luZywgbm93Lg0KDQpUaGV5J3JlIHN0aWxsIGxhdWdoaW5nLg0KDQpDYWxlYidzIG5vdCBmaWdodGluZyBhcyBoYXJkIGFzIGhlIG1pZ2h0LCBhbmQgdGhleSBib3RoIGtub3cgaXQsIGFuZCBpdCB0YWtlcyBzbGlnaHRseSB0b28gbG9uZyBidXQgdGhleSBmbGlja2VyIHRvZ2V0aGVyIHRocm91Z2ggdGhpbmdzIENhbGViIGhhcyBkb25lIGFuZCBUaG9tYXMgaGFzIGRvbmUgYW5kIHRocm91Z2ggdGhpbmdzIHRoZXkgaGF2ZSB0aG91Z2h0IG9mIGRvaW5nIG9yIG1pZ2h0IG9uZSBkYXksIGFuZCBpdCdzIG5vdCBhbnkgb2YgdGhvc2UsIGl0J3MganVzdCB0aGUgbGl0dGxlIHdoaXNwZXIgb2YgYW4gaWRlYSB0aGF0IHdoYXRldmVyIENhbGViIGZlZWxzIGZvciBUaG9tYXMsIHBhc3QgdGhlIHJ1c2ggYW5kIHRoZSBsYXVnaHRlciBhbmQgdGhlIGRhbmdlciBhbmQgdGhlIGxpZ2h0LCBpdCdzLS0gdW5xdWFudGlmaWFibGUgYW5kIDxpPnRoYXQnczwvaT4gdGhlIHJlYWwgcmVhc29uIENhbGViJ3MgYWZyYWlkLg0KDQo8aT5PaDwvaT4sICBUaG9tYXMgc2F5cywgPGk+b2YgY291cnNlLCBvZiBjb3Vyc2U8L2k+LCBhbmQgbGF1Z2hzIGhhcmRlciBhbmQgZGl2ZXMgZm9yIHRoYXQgaWRlYSBhcyBoYXJkIGFzIGhlIGNhbiB0byBkcmFnIGl0IG91dCBpbnRvIHRoZSBvcGVuLiBCZWNhdXNlIGl0J3Mgc28gb2J2aW91cy4NCg0KQ2FsZWIgc3RvcHMgZmlnaHRpbmcuDQoNClRoZSB3b3JsZCBsaWdodHMgdXAuDQoNClRob21hcyBzYXlzLCBwaXR5aW5nbHksIDxJPllvdSBjb3VsZCBoYXZlIHNhaWQuPC9pPg0KDQo8aT5JIGRpZG4ndCBrbm93PC9pPiwgQ2FsZWIgcmV0dXJucywgdGhlIGZhaW50ZXN0IG9mIHNvdW5kcywgYW5kIGl0IGNyYXNoZXMgYmFjayBkb3duIGFyb3VuZCB0aGVtLg0KDQpQaHlzaWNhbGl0eSBjb21lcyBiYWNrIHNsb3dseTsgdGhleSdyZSBjcnVtcGxlZCB0b2dldGhlciBvbiB0aGUgcGF2ZW1lbnQsIHNoYWtpbmcgYW5kIGNsdXRjaGluZyBhdCBlYWNoIG90aGVyJ3MgaGFpciwgYW5kIENhbGViIHdvbid0IGxvb2sgYXQgVGhvbWFzLiBUaGVyZSBhcmUgdGVhcnMgZ2xpdHRlcmluZyBvbiBoaXMgY2hlZWtzLCBidXQgaXQncyBlbnRpcmVseSBsaWtlbHkgaGUncyB1bmF3YXJlIG9mIHRoZW0uDQoNClRob21hcyBicnVzaGVzIGF0IG9uZSBvZiB0aGVtLCBmYXNjaW5hdGVkLCBhbWF6ZWQsIGFuZCBsb29rcyB1cCwgYmVjYXVzZSB0aGUgY2l0eSBhcm91bmQgdGhlbSBpcyA8ZW0+c2lsZW50LjwvZW0+DQoNCkF0IHRoZSB2ZXJ5IGVkZ2Ugb2YgaGlzIHZpc2lvbiB0aGVyZSBhcmUgcGVvcGxlIGZyb3plbiBpbiB0aGVpciB0cmFja3MuIE9uZSBvZiB0aGVtIG1vdmVzOyB0aGVuIGFub3RoZXIuIFNsb3dseSBidXQgc3VyZWx5IHRoZSBub2lzZSBvZiB0aGUgY2l0eSBzdGFydHMgdXAgYWdhaW4sIGJ1dCB0aGVyZSBhcmUgY2FyIGFsYXJtcyBnb2luZyBvZmYgd2hlcmUgcGVvcGxlIGhhdmUgY3Jhc2hlZC4gTm8gb25lIHNlZW1zIHRvIGhhdmUgbm90aWNlZC4gV2VsbCwgb2YgY291cnNlLg0KDQpIZSBsb29rcyBiYWNrIGF0IENhbGViLiAiSSBkb24ndCBrbm93IHdoYXQgdG8gZG8sIiBoZSBzYXlzLg0KDQpDYWxlYiBzdGlsbCB3b24ndCBsb29rIGF0IGhpbS4gIkdvZCwgbWUgbmVpdGhlciwiIGhlIHdoaXNwZXJzIGJyb2tlbmx5LCBzcXVlZXppbmcgaGlzIGV5ZXMgc2h1dC4gQSBjb3VwbGUgbW9yZSB0ZWFycyBzbGlwIG91dC4gIjxpPkRhbW48L2k+LiINCg0KVGhvbWFzIGxvb2tzIGF3YXksIGFzIHRob3VnaCB0aGF0IHdpbGwgaGVscCB0aGUgc2l0dWF0aW9uLiAiTm90IHlldCwiIGhlIHNheXMsIHRob3VnaHRmdWxseS4NCg0KVGhlcmUncyBhIHN1ZGRlbiByaXBwbGUgaW4gQ2FsZWIncyB0aG91Z2h0cywgYXMgdGhvdWdoIGhlJ3MgZ29pbmcgdG8gc3RyaWtlIG91dCBhZ2FpbjsgaXQgc3Vic2lkZXMgYWxtb3N0IGluc3RhbnRseS4gIk5vdCB5ZXQsIiBoZSBlY2hvZXMgaW4gYSB3aGlzcGVyLCBhbmQgZmluYWxseSBsb29rcyBiYWNrIGF0IFRob21hcy4gIkkgY291bGQgY2hhbmdlIGl0LCIgaGUgc2F5cy4gIlRvIGhhdGUgeW91LiBFYXN5Lg0KDQoiSWYgeW91IGhhdGVkIG1lLCIgc2F5cyBUaG9tYXMsICJ0aGF0IHdvdWxkbid0IGNoYW5nZSA8ZW0+YW55dGhpbmcuPC9lbT4iDQoNCkNhbGViIGxldHMgZ28gb2YgVGhvbWFzIGFuZCB0cmllcyB0byBzdGFuZDsgaGUgZW5kcyB1cCBzY3JhYmJsaW5nIGJhY2t3YXJkcywgc3RpbGwgb24gdGhlIHBhdmVtZW50LiAiRnVjayB5b3UuIg0KDQoiSWYgeW91IHdhbnQsIiBzYXlzIFRob21hcywgYW5kIHN0YW5kcyB3aXRob3V0IHRvbyBtdWNoIGVmZm9ydC4gSGUgcHVzaGVzIGEgaGFuZCB0aHJvdWdoIGhpcyBoYWlyIHRvIHRyeSB0byBzZXR0bGUgaXQuICJJJ20gc29ycnksIiBoZSBzYXlzLCBiZWNhdXNlIGhlIGlzLg0KDQoiR29vZCBmb3IgeW91LCIgQ2FsZWIgc25hcmxzLg0KDQpUaG9tYXMgc21pbGVzLiAiWW91IHdhbnRlZCB0byBrbm93LCIgaGUgc2F5cywgc29mdGx5LiAiWW91IGFza2VkIG1lIHRvIC0tIHdoYXQgd2FzIGl0PyAtLSB0byB0ZWFjaCB5b3UgaG93IHRvIHdhbnQgc29tZXRoaW5nLiINCg0KIk5vdyBJIHdhbnQgdG8gZm9yZ2V0LCIgQ2FsZWIgc2F5cywgYW5kIGxldHMgb3V0IGEgc2h1ZGRlcmluZyBzaWdoLCBkdWNraW5nIGhpcyBoZWFkLg0KDQoiVGhlbiBmb3JnZXQsIiBzYXlzIFRob21hcywgd2l0aG91dCBzeW1wYXRoeS4gIkl0J3MgZWFzeS4gT25lIGxpdHRsZSBjaGFuZ2UuIg0KDQoiUmlnaHQsIiBDYWxlYiBzYXlzLCBhbmQganVzdCBzdGF5cyBzaXR0aW5nIHRoZXJlLCBkb2luZyBub3RoaW5nIGF0IGFsbC4NCg0KVGhvbWFzIHdhaXRzIGVub3VnaCB0aW1lIHRvIG1ha2UgaXQgYWxsIHBlcmZlY3RseSBvYnZpb3VzLCBhbmQgdGhlbiBwdXRzIG91dCBhIGhhbmQgdG8gaGVscCBoaW0gdXAuDQoNCkNhbGViIGRvZXNuJ3QgaGVzaXRhdGUgdG8gdGFrZSBpdDsgaGUgaGFzIHRoYXQgbXVjaCBncmFjZSwgYXQgbGVhc3QuDQoNCiJXaGVyZSBub3c/IiBhc2tzIFRob21hcy4gIkFyZSB5b3UgaHVuZ3J5IGFnYWluPyINCg0KIk5vLCIgQ2FsZWIgc2F5cyBxdWlldGx5LCAibm90IHJlYWxseS4iDQoNClRob21hcyB0b3VjaGVzIENhbGViJ3MgZmFjZSBkZWxpY2F0ZWx5LCB3aXRoIHRoZSB2ZXJ5IHRpcHMgb2YgaGlzIGZpbmdlcnMsIGtlZXBpbmcgaGlzIG1pbmQgZmFyIGJhY2suIENhbGViIDxlbT5pczwvZW0+IHByZXR0eTsgaGUnZCBub3RpY2VkIHRoYXQsIHllc3RlcmRheS4gQ2FsZWIgaXMgYmVhdXRpZnVsIHdoZW4gdGhlaXIgZXllcyBhcmUgY2xvc2VkLg0KDQpJdCdzIGEgc2hhbWUuDQoNCiJZb3UgZG9uJ3QgY2FyZSBhIGJpdCwiIENhbGViIG11cm11cnMuICJOb3QgcmVhbGx5LiINCg0KIk5vLCIgc2F5cyBUaG9tYXMuICJOb3QgcmVhbGx5LiINCg0KIklzIGl0IGJlY2F1c2UgeW91IGFpbid0IGJlZW4gYSBtaW5kd2l0Y2ggbG9uZz8iIENhbGViIHdhbnRzIHRvIGtub3cuICJCZWVuIHRoZXJlLCBkb25lIHRoYXQsIHNjb3JuZWQgaHVtYW4gZW1vdGlvbj8iDQoNCiJQcm9iYWJseSwiIHNheXMgVGhvbWFzLCBidXQgQ2FsZWIgZG9lc24ndCB1bmRlcnN0YW5kIGFnYWluLiBDYWxlYiBuZXZlciBzZWVtcyB0by4NCg0KIk5vLCIgQ2FsZWIgc25hcHMsICJJIGRvbid0LiBJIHdvdWxkIHVuZGVyc3RhbmQsIGJ1dC0tIFRob21hcywgaWYgSSB3YXMgYW55b25lIGVsc2UgdGhpcyB3b3VsZCBiZSBlYXN5LiBJZiB5b3Ugd2VyZSBhbnlvbmUgZWxzZSB0aGlzIHdvdWxkIGJlLi4uIGFtdXNpbmcsIGZvciBhIHdoaWxlLCBhbmQgdGhlbiBib3JpbmcsIGFuZCBJJ2QgYmUgcmlkIG9mIHlvdS4gQnV0IHRoaXMtLSB0aGlzIGlzIG5ldywgYW5kIHlvdSBlaXRoZXIgZ2V0IGJvcmVkIHNvIHF1aWNrbHkgaXQncyBhIHdvbmRlciB5b3UgaGF2ZW4ndCBraWxsZWQgeW91cnNlbGYsIG9yIHlvdSB0aGluayB0b28gZmFyIGFoZWFkLiINCg0KIkV4YWN0bHksIiBUaG9tYXMgbXVybXVycywgImJ1dCB5b3UgPGVtPnN0aWxsPC9lbT4gZG9uJ3QgdW5kZXJzdGFuZC4gV2hhdCBkbyB5b3UgPGVtPmRvPC9lbT4gd2hlbiBzb21lb25lIGRvZXMgc29tZXRoaW5nIHlvdSBkb24ndCB3YW50LCBDYWxlYj8iDQoNCiJDaGFuZ2UgaXQsIiBDYWxlYiBzYXlzIHByb21wdGx5Lg0KDQpUaG9tYXMgcHJlc3NlcyBoaXMgaGFuZCB0byBDYWxlYidzIGNoZWVrLiAiWWVzLiINCg0KIk5vLCIgQ2FsZWIgc2F5cywgYW5kIHNtaWxlcywgZmFpbnQgYW5kIGJpdHRlci4gIkl0J3Mgbm90IHNvIGVhc3kgd2l0aCBtZS4iDQoNCiJZb3UgZG9uJ3QgPGVtPmdldDwvZW0+IGl0LCIgc2F5cyBUaG9tYXMsIGhhcnNobHkuICJOb3QgPGVtPnlvdS48L2VtPiINCg0KQ2FsZWIgZnJlZXplcy4gIk9oLCIgaGUgc2F5cywgbGlrZSBicmVhdGhpbmcuICJCdXQgeW91IHNhaWQtLSINCg0KIkl0IDxlbT5tYXR0ZXJzPC9lbT4sIiBzYXlzIFRob21hcyBzb2Z0bHkuICJBbmQgSSBkb24ndCB3YW50IHlvdSB0by4gPGVtPkRvIHlvdSB1bmRlcnN0YW5kPzwvZW0+Ig0KDQoiTm8sIiBDYWxlYiBzYXlzLCBsYXVnaGluZyBub3QgPGk+cXVpdGU8L2k+IHdpdGhvdXQgaHVtb3VyLCBhbmQgc2xpcHMgaW50byBUaG9tYXMnIG1pbmQsIHByb2JpbmcgYW5kIDxpPmZpZ3VyaW5nIG91dDwvaT4uDQoNCiBUaG9tYXMgbGF1Z2hzIGFuZCBzbGlkZXMgb3V0IG9mIHRoZSB3YXksIG1ha2luZyBpdCBoYXJkZXIuIEJlY2F1c2UgdGhhdCBvZiBjb3Vyc2UgaXMgdGhlIDxlbT5wb2ludC48L2VtPiA8aT5XaGF0J3MgcmVhbCBhbmQgd2hhdCBtYXR0ZXJzIGlzIGFsbCB0aGVyZSBpcywgQ2FsZWIsIGRhcmxpbmcgYm95LDwvaT4gaGUgc2F5cyBzaWxlbnRseSwgYW5kIGRpdmVzIGRlZXAuDQoNCkFuZCBDYWxlYiB0d2lzdHMgdGhpcyB0aW1lIHRvbywgZmlnaHRpbmcsIDxpPnJlYWxseTwvaT4gZmlnaHRpbmcsIGFuZCBpdCdzIHRoZSBmaXJzdCB0aW1lIENhbGViJ3Mgbm90IGhvbGRpbmcgYmFjayBvciBob2xkaW5nIG9uLCBidXJ5aW5nIGhpbXNlbGYgaW4gVGhvbWFzJyBtaW5kOyBzdWNoIGEgZGFuZ2Vyb3VzIGdhbWJpdCwgaXQgbGVhdmVzIGhpcyBvd24gbWluZCBlbnRpcmVseSBleHBvc2VkIGJ1dCBoZSBpcyBjaGFuZ2luZyB0aGluZ3MsIDxpPmNoYW5naW5nIHRoaW5nczwvaT4sIGZpZXJjZWx5IG1ha2luZyBUaG9tYXMgPGk+ZmVlbDwvaT4uDQoNClRob21hcyBnYXNwcyBhbmQgaHVydHMgYW5kIGZpZ2h0cyBiYWNrLCBsb2NraW5nIHRoaW5ncyBvZmYsIGJyZWFraW5nIGJpdHMgb2YgQ2FsZWIgaW4gaGlzIHJ1c2ggdG8gZ2V0IGF3YXksIGZyYW50aWNhbGx5IG1vdmluZywgYmVjYXVzZSB0aGlzIGlzIHJlYWwgYW5kIGhlIGNhbid0IGhpZGUgdGhhdCBoZSdzIHRlcnJpZmllZC4gRmx1Y3R1YXRpbmcgdGhyb3VnaCBiZXRyYXlhbCBhbmQgbHVzdCBhbmQgYWZmZWN0aW9uIGFuZCBhbGwgdGhlIGNvbnRhY3RzIENhbGViJ3MgbWFraW5nIGFuZCBhbGwgdGhlIHdpcmVzIENhbGViIGlzIGNyb3NzaW5nIGFuZCBub3RoaW5nIGlzIHJlYWwgYmVjYXVzZSBzdWRkZW5seSA8ZW0+ZXZlcnl0aGluZzwvZW0+IGlzLCBUaG9tYXMgc3RyaWtlcyBoYXJkIGFuZCBmZWVscyB0aGUgZGFtcyBpbiBDYWxlYiBicmVhay4NCg0KSXQncyBtZW1vcmllcywgPGk+dG9ycmVudHM8L2k+IG9mIHRoZW0sIGNvbWluZyB0b28gcXVpY2tseSBmb3IgVGhvbWFzIHRvIGNhdGFsb2d1ZSBidXQgdGhleSdyZSBzdWRkZW5seSA8aT5oaXM8L2k+LCBhbmQgdGhleSBib3RoIGNyeSBvdXQgaW4gYWJzb2x1dGUgdGVycm9yIGFuZCBtYXliZSB0aGV5J3JlIGZpZ2h0aW5nIHRvIGJyZWFrIHRoZSBjb250YWN0IG5vdyBvciBtYXliZSB0aGV5IHN0aWxsIHdhbnQgaXQgYnV0IHRoZXkgPGk+Y2FuJ3Q8L2k+LCBhbmQgd29yc2UgdGhhbiB0aGUgbWVtb3JpZXMgaXMgdGhlIG9ucnVzaCBvZiBlbW90aW9uIHRoYXQgdGhleSBkaWRuJ3Qga25vdyB3YXMgcmVhbCBidXQgPGk+aXM8L2k+LCBhbmQtLQ0KDQpUaGVyZSBpcyBhIG1vbWVudCBvZiBwdXJlIGNsYXJpdHksIHRoZSB0d28gb2YgdGhlbSBhbG9uZSBpbiB0aGUgdW5pdmVyc2UsIGNvbXBsZXRlbHkgc2VwZXJhdGUsIGFuZCBDYWxlYiBsb29rcyBhdCBUaG9tYXMgYW5kIGxhdWdocyBhbmQgc2F5cyA8aT5JIHRoaW5rIEktLTwvaT4gYW5kIHRoZW4gaXQgY29sbGFwc2VzIGFnYWluLg0KDQpPbiB0aGUgb3RoZXIgc2lkZSBvZiBpdCwgVGhvbWFzIGlzIHNoYWtpbmcsIGJ1dCBmb3Igb25jZSB0aGV5IGhhdmVuJ3QgZmFsbGVuIG92ZXIuDQoNCiJZZXMsIiBoZSBzYXlzLCBiaXR0ZXJseSwgYW5kIHRoZW4gY2FuJ3QgYnJlYXRoZSBhZ2Fpbi4NCg0KQ2FsZWIgZG9lc24ndCBoYXZlIHRoZSBhaXIgdG8gbGF1Z2gsIGJ1dCBoZSBraXNzZXMgVGhvbWFzLCB2ZXJ5IHNvZnRseS4NCg0KVGhvbWFzIGtpc3NlcyBoaW0gYmFjaywganVzdCBhIGtpc3MsIGFuZCBjbG9zZXMgaGlzIGV5ZXMgYW5kIHNlZXMgbm90aGluZyBiZWhpbmQgdGhlbS4NCg0KIlRob21hcz8iIENhbGViIG11cm11cnMsIGFuIGFpbWxlc3Mgc291bmQuDQoNClRob21hcyByZXN0cyBoaXMgZm9yZWhlYWQgb24gQ2FsZWIncy4gIlllcz8iDQoNCiJEbyB5b3Ugd2FudCBtZSB0byBzdGF5PyINCg0KPGVtPlllczwvZW0+LCBUaG9tYXMgd2hpc3BlcnMuIDxlbT5JIGJlbGlldmUgSSBkby48L2VtPg0KDQpDYWxlYiBzaHVkZGVycy4gIjxpPkdvZDwvaT4gdGhhdCBzY2FyZXMgbWUsIiBoZSBzYXlzLCBhbG91ZCwgYmVjYXVzZSBpdCdzIGEgYml0IGxlc3MgcmVhbCB0aGF0IHdheS4NCg0KIkkgbWlnaHQga2lsbCB5b3Ugbm93LCIgc2F5cyBUaG9tYXMsIHRob3VnaHRmdWxseSwgYW5kIHZlcnkgbmVhcmx5IGRvZXMgc28uDQoNCkNhbGViIHNlZXMgaXQgc3RhcnRpbmcgaW4gaGlzIGhlYWQsIGFuZCB0b3VjaGVzIFRob21hcycgdGVtcGxlIGdlbnRseSwgYW5kIHdoaXNwZXJzLCAiTm90IG5vdy4iDQoNClRob21hcyBub2RzIGFuZCBzdWJzaWRlcywgYW5kIGZlZWxzIGEgbGl0dGxlIHN0YWIgb2YgZmVhciB0aGF0IGhlJ3MgZG9pbmcgc28uDQoNCjxlbT5GZWVsczwvZW0+IGl0Lg0KDQpDYWxlYiBncmlucyBmaWVyY2VseS4gIlllYWgsIHRoYXQncyBpdCwiIGhlIG11cm11cnMuDQoNCiJTbyB0aGlzIGlzIHdoeSB5b3Ugd2VyZSBhZnJhaWQsIiBzYXlzIFRob21hcy4gIkhvdyBzd2VldC4iDQoNCiJZb3Ugc2F3LCIgQ2FsZWIgc2F5cywgbWVhbmluZyB0aGUgdG9ycmVudCBvZiBtZW1vcmllczsgImF0IGxlYXN0IGZlZWxpbmcgaXMgPGk+ZGlmZmVyZW50PC9pPi4iDQoNCiI8ZW0+WW91PC9lbT4gc2F3LCIgVGhvbWFzIGNvdW50ZXJzLCBidXQga25vd3MgYWxsIHRoZSBzYW1lLiAiWWVzLiINCg0KQ2FsZWIgcHVsbHMgYmFjayBhIGxpdHRsZS4gIklmIHlvdSBkb24ndCBsaWtlIGl0LCIgaGUgc2F5cywgZ2VudGxlIGFuZCBtb2NraW5nLCAiZml4IHlvdXIgb3duIGhlYWQuIg0KDQpUaG9tYXMgc2hha2VzIGhpcyBoZWFkLiAiTm8sIiBoZSBzYXlzLCBhbmQgcHVsbHMgYXdheSBoaW1zZWxmLiAiTm90IHlldC4iDQoNCiJMYXRlciwiIENhbGViIG11cm11cnMuICJXaGVuIHdlIGtpbGwgZWFjaCBvdGhlci4iDQoNClRob21hcyBsYXVnaHMgYW5kIGtpc3NlcyBDYWxlYiBhZ2Fpbi4NCg0KSXQncyBzdGFydGVkIHRvIHJhaW4sIHZlcnkgZ2VudGx5LCBhbmQgdGhlIHNlbnNhdGlvbiBrZWVwcyBoaW0gaGVyZS4NCg0KQ2FsZWIgc2hha2VzIGEgYml0IG9mIHdldCBoYWlyIG91dCBvZiBoaXMgZXllcyBhbmQgbXVybXVycywgIkxldCdzIGZpbmQgYSBjYWbDqT8gSSBoYXZlbid0IHNlZW4geW91IHdvcmsgZmlyc3RoYW5kIHlldC4iDQoNCjxlbT4iRG9tZXN0aWM8L2VtPiwiIHNheXMgVGhvbWFzIGluIGFtdXNlZCBob3Jyb3IsIGFuZCBoYWlscyBhIHRheGkuICJDb21lIG9uLiINCg0KIlNlZWluJyB5b3UgaW4gYW4gYXByb24gd291bGQgYmUgYSB0cmVhdCwiIENhbGViIG11cm11cnMsIGZvbGxvd2luZyBoaW0gaW50byB0aGUgY2FiLg0KDQpUaGV5IG1ha2Ugb3V0IGluIHRoZSBiYWNrIHNlYXQgbGlrZSBub3JtYWwgdGVlbmFnZXJzIGFueXdoZXJlIGluIHRoZSB3b3JsZCwgYW5kIGl0J3MgZ3JvdW5kaW5nLCBub3RoaW5nIG9mIHRoZWlyIG1pbmRzIGJlc2lkZXMgd2hhdCB0aGV5IGNhbiBoZWFyIHdpdGhvdXQgdHJ5aW5nLCBhbmQgd2hlbiB0aGV5IGxlYXZlIHRoZSB0YXhpIHRoZSBkcml2ZXIgZG9lc24ndCBldmVuIHJlbWVtYmVyIHRoZW0uDQoNClRoZSBjYWbDqSBUaG9tYXMgdGFrZXMgdGhlbSB0byBpcyBhIHByZXR0eSBvbmUsIHN1cnJvdW5kZWQgYnkgYSBncmVlbiBhd25pbmcgYW5kIHdpdGggZmFtaWxpZXMgaW4gaXQsIGFuZCBubyB0b3VyaXN0cyBhdCBhbGwuIFRoZSByYWluIG1ha2VzIHRoZSBzbW9reSBhdG1vc3BoZXJlIG1vcmUgcGxlYXNhbnQsIGFuZCB0aGUgY29mZmVlIGlzIGZhYnVsb3VzLg0KDQpUaG9tYXMsIHJlc3RpbmcgaGlzIGhhbmQgb24gQ2FsZWIncyBhY3Jvc3MgdGhlIHRhYmxlLCBvYnNlcnZlcyB0aGUgY3VzdG9tZXJzLg0KDQpUaHJvdWdoIHRoZSBodW0gb2YgdGhlaXIgbWluZHMgaGUgY2FuIGZlZWwgd2FybXRoIHVuY3VybGluZyBhbG9uZyBoaXMgYXJtOyBDYWxlYidzIGNvbnRlbnRtZW50IGlzIGRpc2NvbmNlcnRpbmcuIA0KDQpUaGVpciB3YWl0ZXIgYnJpbmdzIHRoZW0gYm90aCBjb2ZmZWUsIGFuZCB0aGVuIHF1aXRlIGEgZmV3IGNyb2lzc2FudHMsIHdoaWNoIENhbGViIHNldHMgYWJvdXQgZWF0aW5nIHdpdGggYSB2ZW5nZW5jZS4NCg0KIllvdSBzYWlkIHlvdSB3ZXJlbid0IGh1bmdyeSwiIFRob21hcyBtdXJtdXJzLiAiQ2FsZWIgQXRoZXJ0b24sIHlvdSBsaWFyLiINCg0KIkkgbmV2ZXIgcHJvbWlzZWQgY29uc2lzdGFuY3ksIiBDYWxlYiByZXR1cm5zIGFyb3VuZCBhIG1vdXRoZnVsLg0KDQoiWW91IHdvdWxkIGJlIGR1bGwgaWYgeW91IGhhZC4iIFRob21hcyBwYXRzIHRoZSBoYW5kIHVub2NjdXBpZWQgd2l0aCB0aGUgY3JvaXNzYW50IGFuZCBiZWdpbnMgdG8gbG9vayBmb3IgYSB0YXJnZXQuIE5vIG9uZSBpcyBwYXJ0aWN1bGFybHkgaW50ZXJlc3RpbmcsIGJ1dCBpdCdzIGEgbWF0dGVyIG9mIGRlZ3JlZS4NCg0KIldvbWFuIGluIHRoZSBjb3JuZXIsIiBDYWxlYiBzYXlzLCB3aXRoIGEgZmxpY2tlciBvZiBhIHNtaWxlLiAiSGVyIGJveSBqdXN0IGR1bXBlZCBoZXIgdHdvIGRheXMgYWdvLiINCg0KIlNtYWxsIGdhbWUsIiBtdXJtdXJzIFRob21hcywgYnV0IHRoZSB3YXkgc2hlJ3MgbnVyc2luZyBoZXIgYW5nZXIgaW4gYSB0aWdodCBsaXR0bGUgYmFsbCBkb2VzIG1ha2UgaGVyIHdvcnRod2hpbGUuIEhlIGVhc2VzIG91dCB0b3dhcmRzIGhlciBhbmQgc3BlbmRzIGEgbG9uZyB0aW1lIGxvb2tpbmcgYXQgdGhlIHdheSBzaGUncyBwdXQgdG9nZXRoZXIgLS0gYW5ndWxhciwgdW5jb21mb3J0YWJsZTsgbm90IGhpcyB1c3VhbCB3b3JrIC0tIGJlZm9yZSBicnVzaGluZyBqdXN0IHRoZSBzbGlnaHRlc3QgYml0IG9mIGhlciBpbmNvbnZlbmllbnQgcmVwcmVzc2lvbiBvdXQgb2YgdGhlIHdheS4NCg0KU2hlIGRyYWlucyBoZXIgY3VwIG9mIGNvZmZlZSBhbmQgc2V0cyBpdCBkb3duIHdpdGggYSByZXNvdW5kaW5nIHNtYWNrLiBIZXIgZXllcyBzdGFydCBkYXJ0aW5nIGFyb3VuZCB0aGUgcm9vbSwgc2Vla2luZyBvdXQgc29tZSB0YXJnZXQgZm9yIGhlciBmcnVzdHJhdGlvbi4NCg0KIlB1bGxpbmcgc3RyaW5ncyBvciBzYXlpbmcgaGVsbG8geW91cnNlbGY/IiBDYWxlYiBtdXJtdXJzLiAiSWYgaXQncyB0aGUgbGF0dGVyLCBnaXZlIG1lIGEgbW9tZW50OyBJJ20gc3RpbGwgZWF0aW5nLiINCg0KIlB1bGxpbmcgc3RyaW5ncy4gSHVzaCBub3csIiBzYXlzIFRob21hcywgYWJzZW50bHkuIFRoZXJlJ3MgYSBib3kgc2l0dGluZyBhY3Jvc3MgdGhlIHJvb20gd2hvIGhhc24ndCBlYXRlbiBhbnl0aGluZywgb25seSBudXJzZWQgdGhlIGxhc3QgZHJlZ3Mgb2YgYSBjdXAgb2YgdGVhIGZvciBhbiBob3VyIG5vdy4gSGUgbG9va3MgaGFybWxlc3MgZW5vdWdoLCBidXQgaGUgaGFzIGEgcHJvbWlzaW5nIHNvcnQgb2YgbWFsbGVhYmlsaXR5Lg0KDQpUaG9tYXMgY2FuIGZlZWwgQ2FsZWIgd2F0Y2hpbmcgaGltLCB0aGUgZmxpY2tlcnMgb2YgaW50ZXJlc3QgYW5kIGFwcHJvdmFsLCBhcyBoZSBwcm9kcyBhdCB0aGUgYm95IGp1c3QgZW5vdWdoIHRvIGdldCBoaW0gdG8gc3RhbmQgdXAgYW5kIG1ha2UgaGltc2VsZiBub3RpY2FibGUgdG8gdGhlIHdvbWFuIGFjcm9zcyB0aGUgcm9vbS4NCg0KVGhlIGJveSB0aGlua3MgaGUncyBjbGVhbmluZyBoaXMgcGxhdGUsIGJ1dCBoaXMgZXllcyBrZWVwIGplcmtpbmcgb3ZlciB0byB0aGUgd29tYW4gaW4gdGhlIGNvcm5lciwgYW5kIGV2ZW50dWFsbHkgc2hlIHNsYW1zIGEgaGFuZCBkb3duIG9uIHRoZSB0YWJsZSBhbmQgYXNrcyBpbiBhbiBhbmdyeSB0b3JyZW50IG9mIEZyZW5jaCB3aGF0IGhlIHRoaW5rcyBpcyB0aGUgaWRlYS4NCg0KVGhlIGJveSwgYmVhdXRpZnVsbHksIGRvZXNuJ3QgdW5kZXJzdGFuZC4gSGUncyBmcm9tIEF1c3RyYWxpYS4gSGUgc3RhbW1lcnMgc29tZSBraW5kIG9mIGFwb2xvZ3kgdGhhdCBUaG9tYXMgaW50ZXJydXB0cyBvbmNlIG9yIHR3aWNlLCB0byBtYWtlIGl0IGV2ZW4gbW9yZSBoYWx0aW5nLg0KDQoiQmV0cyBvbiB0aGUgdGFibGUsIiBDYWxlYiBzYXlzLCAiZmlmdHktZmlmdHkgd2hldGhlciBzaGUga2lsbHMgaGltIG9yIGtpc3NlcyBoaW0uIg0KDQpUaG9tYXMgbG9va3MgYXQgdGhlbSBib3RoIGNvbnNpZGVyaW5nbHkuICJLaXNzZXMsIiBoZSBzYXlzLCByZWdyZXRmdWwuICJJIGRvbid0IHRoaW5rIHNoZSdzIHN0cm9uZyBlbm91Z2ggdG8ga2lsbCBoaW0uIg0KDQoiSXQgbWlnaHQgbWFrZSBhIHNjZW5lLCIgQ2FsZWIgYWdyZWVzLCB3aXRoIGVxdWFsIHJlZ3JldCwgYW5kIHNpZ2hzLCBmaW5pc2hpbmcgb2ZmIGhpcyBjb2ZmZWUuICJOZXZlciBtaW5kIHRoZW0uIg0KDQpUaG9tYXMgZG9lc24ndCBsaWtlIGxlYXZpbmcgd29yayB1bmZpbmlzaGVkLCBidXQgaXQgc2VlbXMgc3VwcmVtZWx5IHVuaW1wb3J0YW50IGF0IHRoZSBtb21lbnQuIEhlIGNvbnNpZGVycyBDYWxlYiwgYW5kIGhpcyBvd24gY29tZm9ydC4NCg0KV2hlbiBoZSBsb29rcyBiYWNrLCBDYWxlYiBsb2NrcyBleWVzIHdpdGggaGltIGFuZCBncmlucyBzbGlnaHRseS4gIldoYXQ/Ig0KDQoiTm90aGluZywiIHNheXMgVGhvbWFzLCB3aXRoIGEgc21pbGUuICJBcyBhbHdheXMuIg0KDQoiV2hhdCdzIHRoZSBiZXN0IHRoaW5nIHlvdSd2ZSBldmVyIGRvbmU/IiBDYWxlYiBhc2tzIHF1aWV0bHkuDQoNCkhlIGRvZXNuJ3QgcXVhbGlmeSA8aT5iZXN0PC9pPiBhdCBhbGwuDQoNClRob21hcyB0aGlua3MgYWJvdXQgdGhpcy4gIkVsaXphYmV0aCwiIGhlIHNheXMsIGZpbmFsbHksIGFuZCBkcm9wcyB0aGUgb3V0bGluZSBpbnRvIENhbGViJ3MgbWluZC4gSXQgaGFkIGJlZW4gZWFybHkgb24sIGFuZCBoZSBoYWQganVzdCByZWFsaXNlZCB0aGF0IGhlIHdhcywgaW4gZmFjdCwgbm90IG9yZGluYXJ5IGF0IGFsbC4NCg0KSGUnZCBsb29rZWQgYXQgaGlzIGZhbWlseSBmaXJzdCwgdGhpbmtpbmcgcGVyaGFwcyBpdCB3YXMgaGVyZWRpdGFyeS4NCg0KSXQgd2FzIG5vdC4gVGhleSB3ZXJlIGJhbmFsIG1pbmRzLiBIZSBoYWQgZG9uZSBhbG1vc3Qgbm90aGluZyB0byBoaXMgcGFyZW50cyBzYXZlIG1hZGUgdGhlbSBmb3JnZXQgdGhhdCB0aGV5IGhhZCBhIHNvbiwgYnkgaW50ZW50aW9uLCBhbHRob3VnaCB0aHJvdWdoIHRoZWlyIGRhdWdodGVyIHRoZXkgaGFkIGEgc3BlY3RhY3VsYXIgYnJlYWtkb3duLg0KDQpFbGlzYWJldGggd2FzIHNvbWV0aGluZyBkaWZmZXJlbnQuIFRoZXJlIHdhcyB0aGUgZmFpbnRlc3QgZ2xpbW1lciBvZiBzb21ldGhpbmcgdGhlcmUsIGEgdHJhY2Ugb2YgcG93ZXIsIGFuZCBoZSBoYWQgZ29uZSBhZnRlciB0aGF0IG9uZSBuaWdodCB3aXRob3V0IGV2ZW4gdHJ1bHkga25vd2luZyB3aGF0IGhlIHdhcyBkb2luZy4gU2hlIHdhcyA8ZW0+ZmFzY2luYXRpbmc8L2VtPiwgYW5kIGhlLCBmcmVzaGx5IGxvb3NlIG9mIGhpcyBib2R5LCB0b29rIGhlciB0byBwaWVjZXMgYW5kIGZvdW5kIG91dCBob3cgc2hlIHdhcyBwdXQgdG9nZXRoZXIuDQoNCkhlIGhhc24ndCB0b3BwZWQgdGhhdCB5ZXQsIG9yIHRoZSB3YXkgaGUgZml4ZWQgaGVyIGV2ZXIgc28gY2FyZWZ1bGx5IGF3cnkuIEVsaXNhYmV0aCB3YXMgZXZlbiBtb3JlIGJyaWxsaWFudCB3aGVuIGhlIHdhcyBkb25lLCBhbmQgd291bGQgaGF2ZSBiZWVuIHRvcCBvZiBoZXIgY2xhc3MgaWYgc2hlIGhhZG4ndCBraWxsZWQgdGhyZWUgY2xhc3NtYXRlcyB0aGUgeWVhciBzaGUgdHVybmVkIHRoaXJ0ZWVuLg0KDQoiQWgsIiBDYWxlYiBtdXJtdXJzIGNvbnNpZGVyaW5nbHkuICJJIG5ldmVyIGhhZCBhbnkgc2libGluZ3MuIg0KDQoiWW91IGhhZCBhIG1vdGhlciwiIHNheXMgVGhvbWFzLg0KDQoiWWVzLCIgQ2FsZWIgc2F5cywgd2l0aCBhIHNtYWxsIHNtaWxlLiAiUGVyaGFwcyBzaGUgd2FzIG15IGJlc3QuIFdvdWxkIHlvdSBsaWtlIHRoZSBzdG9yeT8iDQoNCiJJZiB5b3UgbGlrZSwiIHNheXMgVGhvbWFzLCB3aG8gd291bGQuDQoNCkNhbGViIG5vZHMuDQoNCkl0IGdvZXMgbGlrZSB0aGlzOiBDYWxlYiBkaWRuJ3QgdW5kZXJzdGFuZCwgcmlnaHQgYXdheSwgdGhhdCBoZSB3YXMgZGlmZmVyZW50LiBBbGwgaGUga25ldyB3YXMgdGhhdCBoaXMgbW90aGVyIGRpZCBhcyBoZSB3YW50ZWQsIGFuZCB3aGVuIGhlIGxlYXJuZWQgdGhhdCBtb3N0IG90aGVyIG1vdGhlcnMgd2VyZW4ndCBzbyBwbGlhYmxlLCBoZSBleHBsb3JlZCBmdXJ0aGVyLg0KDQpTaGUgd2FzIHNhZGx5IG9yZGluYXJ5LCBoZXIgbWluZCBsZXNzIGludGVyZXN0aW5nIHRoYW4gdGhhdCBvZiBDYWxlYidzIHZhcmlvdXMgZ3JhZGUgc2Nob29sIHRlYWNoZXJzLCBiZWZvcmUgQ2FsZWIgYmVjYW1lIGJvcmVkIHdpdGggc2Nob29sIGFuZCBzdG9wcGVkIGdvaW5nLiBTaGUgbG92ZWQgaGltIGRlYXJseSBhbmQgZGlkIGV2ZXJ5dGhpbmcgZm9yIGhpbSwgYW5kIENhbGViIGdyZXcgYm9yZWQgb2YgdGhhdCB0b28uDQoNCkJ5IHRoZW4gaGUgd2FzIGdvb2QgZW5vdWdoIHRvIHJlYWQgcGVvcGxlJ3MgbGl2ZXMsIG5vdCBvbmx5IHRoZWlyIHRob3VnaHRzLCBhbmQgaXQgd2FzIHRoZW4gdGhhdCBDYWxlYiBsZWFybmVkIHRoYXQgR2lsbGlhbiBBdGhlcnRvbiBkaWRuJ3QgPGk+cmVhbGx5PC9pPiBsb3ZlIGhpbTsgPGk+aGFkbid0PC9pPiwgYmVmb3JlIGhlJ2QgbWFkZSBoZXIgdGhhdCB3YXkuDQoNCkl0IHdhcyBuZWFybHkgYSByZWxpZWYuDQoNCkhlIGxldCBoZXIgc2VlIHdoYXQgaGUgd2FzIGRvaW5nIHRvIGhlci4NCg0KU2hlIHNjcmVhbWVkIGF0IGhpbSBhbmQgc2hlIHBsZWFkZWQgd2l0aCBoaW0gYW5kIHNoZSBzb2JiZWQgYW5kIHRvbGQgaGltIHNoZSBsb3ZlZCBoaW0sIGFuZCBoZSB0d2lzdGVkIGhlciBzbG93bHksIGJ5IGRlZ3JlZXMuIFRoZXJlIGlzIG5vdGhpbmcgaW4gdGhlIHdvcmxkIHNvIHNhdGlzZnlpbmcgYXMgd2F0Y2hpbmcgdGhlIHdvcmxkIG9mIGEgdG9nZXRoZXIgYnVzaW5lc3N3b21hbiBjcnVtcGxlIHVwIGFuZCBkaWUgYnkgaW5jaGVzLg0KDQpTaGUgdHJpZWQgdG8ga2lsbCBoZXJzZWxmIHRocmVlIHRpbWVzLCBtb3JlIHZpb2xlbnRseSBlYWNoLCBiZWZvcmUgQ2FsZWIgYWxsb3dlZCBoZXIgdG8gcHV0IHRoZSBncm91bmQgZ2xhc3MgaW4gaGVyIG93biBmb29kLg0KDQpTaGUgaGFkIG5vIGZ1bmVyYWwsIGFuZCBDYWxlYiBmZWx0IGEgbW9tZW50IG9mIGFjdHVhbCBoYXBwaW5lc3MsIGtub3dpbmcgc2hlIHdhcyBnb25lLg0KDQoiVGhlIG9ubHkgb25lcyB0aGF0IG1hdHRlcmVkLCIgc2F5cyBUaG9tYXMsIHRob3VnaHRmdWxseSwgYW5kIHR1cm5zIGhpcyBhdHRlbnRpb24gdG8gQ2FsZWIncyBtaW5kLCB3aGljaCBpcyBhdCB0aGlzIHBhcnRpY3VsYXIgc2Vjb25kIGN1cmlvdXNseSB3YXJtLg0KDQpDYWxlYiBkb2Vzbid0IGRyYXcgYXdheTsgaGlzIGV5ZXMgc2xpcCBjbG9zZWQsIGFuZCBUaG9tYXMgY2FuIGZlZWwgdGhlIG1lbnRhbCBzaHJ1Zy4gV2hhdGV2ZXIgQ2FsZWIgd2FudHMgb2YgVGhvbWFzLCBpdCBjYW5ub3QgcG9zc2libHkgYmUgbG92ZTsgQ2FsZWIncyBmZWx0IHRoYXQsIGFuZCBpdCdzIGFzIGJhbmFsIGFzIGFueXRoaW5nIGVsc2UuIFRoZXkgYXJlIHNvbWV0aGluZyBkaWZmZXJlbnQuDQoNClRob21hcyBzbWlsZXMgc29mdGx5LiBJdCBpc24ndCBsb3ZlIHRoZXkgd2FudCwgYW55IG1vcmUgdGhhbiBpdCBpcyBoYXRlLCBidXQgaXQgbWF5IGJlIGJvdGggdGhhdCB0aGV5IGdldCwgaW4gdGhlIGVuZC4gTGF0ZXIuIEZvciBub3cgaGUgaXMgb25seSBsb29raW5nLCBnaG9zdGluZyBvdmVyIHRoZSBjaGFubmVscy4gSXQncyBuZWFybHkgYmlibGljYWwuDQoNCiJMZXQgdGhlcmUgYmUgbGlnaHQsIiBoZSBzYXlzLCBhbmQga2lzc2VzIENhbGViIGhhcmQuDQoNCkhlIGZlZWxzIENhbGViIGNyeSBvdXQsIHNvZnQgYW5kIGRlc3BlcmF0ZSBhbmQgc291bmRsZXNzOyBhIG1vbWVudCBhbmQgQ2FsZWIncyBzY3JhbWJsaW5nIGZpbmdlcnMgc2hvdmUgdGhlIGNvZmZlZSB0YWJsZSBvdXQgb2YgdGhlIHdheS4gSXQgY3Jhc2hlcyB0byB0aGUgZmxvb3IsIHRoZSBjYWbDqSdzIHBhdHJvbnMgdHVybmluZyB0byBzdGFyZSBhdCB0aGVtLCBhbmQgQ2FsZWIgc2xhbXMgVGhvbWFzIGJhY2sgYWdhaW5zdCB0aGUgd2FsbCwgYSBwaHlzaWNhbCBqb2x0IHRvIG1ha2UgdXAgZm9yIHRoZSB3YXkgdGhlaXIgbWluZHMgYXJlbid0IGh1cnRpbmcsIGFuZCBDYWxlYiBpcyBnYXNwaW5nIGFnYWluLCA8aT55ZXN5ZXN5ZXMtLTwvaT4NCg0KSXQgaXNuJ3QgZW5vdWdoIGFuZCBpdCBpc24ndCB0aGUgc2FtZSBidXQgdGhlbiB0aGUgcGF0cm9ucyBhcmVuJ3Qgc3RhcmluZyBhdCBhbGwgYmVjYXVzZSB0aGV5J3JlIGZsYXJpbmcgb3V0d2FyZHMuIFNvbWUgaWRpb3QgdGhpbmtzIGl0J3MgYSBnb29kIGlkZWEgdG8gdG91Y2ggdGhlaXIgc2hvdWxkZXIsIHRyeSB0byBzdG9wIHRoZW0sIGFuZCBUaG9tYXMgZmxpbmdzIGhpbSBhY3Jvc3MgdGhlIHJvb20gd2hlcmUgaGUgZmFsbHMgbGlrZSBhIHJhZyBkb2xsLCBhbmQgdGhlbiBoZSdzIGJlaW5nIHByZXNzZWQgdXAgYWdhaW5zdCB0aGUgd2FsbCBieSBDYWxlYiBzbyBoYXJkIGhlIGNhbiBoYXJkbHkgdGhpbmsgYW55IG1vcmUuIEJsYWNrIHNwb3RzIHN3aW0gYWNyb3NzIHRoZWlyIHZpc2lvbiBhbmQgaXQncyBhbG1vc3QgZXhhY3RseSBsaWtlIHRoZXkncmUgaHVtYW4gd2hlbiB0aGV5IGtpc3MuDQoNCjxpPkkgd2lsbCBraWxsIHlvdSw8L2k+IENhbGViIGJyZWF0aGVzLCBoaXMgaGFuZHMgbGVhdmluZyBicnVpc2VzLCA8aT55ZWFycyBmcm9tIG5vdyB3aGVuIHdlJ3JlIGZpbmFsbHkgYnVybnQgdG8gY2luZGVycy48L2k+IA0KDQpJdCBpc24ndCBhbnl0aGluZyBidXQgd29yZHMsIGZpbGxlciB0byB0aGUgdHVuZSBvZiB0aGUgdmlvbGVudCBnbG9yaW91cyBzaW5naW5nLCBhbmQgQ2FsZWIncyB5YW5raW5nIGF0IFRob21hcycgY2xvdGhlcywgc25hcmxpbmcgYWdhaW5zdCBoaXMgbW91dGgsICJGZWVsLCBkYW1uIHlvdSwgPGk+ZmVlbDwvaT4uIg0KDQoiSSBhbSwiIGhpc3NlcyBUaG9tYXMsIGFuZCB0aGVuIG1vYW5zIGFuZCBhcmNoZXMsIGJlY2F1c2UgaGUgPGVtPmlzPC9lbT4sIGZlYXIgYW5kIGFuZ2VyIGFuZCBwYWluIGFuZCBhIHRlcnJpYmxlLCB0ZXJyaWJsZSByaXBwaW5nIGluIGhpcyBjaGVzdCB3aGVyZSBDYWxlYidzIGhhbmQgYnJ1c2hlcyB0aGUgc2tpbi4gQnV0IG9mIGNvdXJzZSB0aGF0IGlzbid0IHdoYXQgQ2FsZWIgd2FudHMsIFRob21hcyBiaXRpbmcgaGlzIGxpcCwgaGlzIG5lY2ssIGhpcyBzaG91bGRlciwgYmVjYXVzZSBpdCBpc24ndCAtLSB3aGF0J3MgdGhlIHdvcmQ/IC0tIHJlYWwuDQoNCkhlIGlzIHNvIGZ1bGwgb2YgdGhpcy4gSGUgaXMgY2luZGVycyBhbHJlYWR5Lg0KDQpIZSBicmVha3MgaXQgYWxsIGRvd24sIENhbGViJ3MgYW5kIGhpcywgYW5kIGlzIGEgdGVycmlmaWVkIGJveSBvZiBzZXZlbnRlZW4gb25lIG1vcmUgdGltZSwgYW5kIHRocm93cyBoaW1zZWxmIGFnYWluc3QgQ2FsZWIgbGlrZSB0aGUgdGlkZS4NCg0KQ2FsZWIgaXMgc29iYmluZywga2lzc2luZyBoaW0gbWVzc2lseSBiZXR3ZWVuIGJyZWF0aHMsIGFuZCBUaG9tYXMnIHNob3VsZGVyYmxhZGVzIGFyZSBiZWluZyBkcml2ZW4gYmFjayBzbyBoYXJkIGludG8gdGhlIHJvdWdoIHdhbGwgdGhhdCB0aGV5IG1pZ2h0IGJlIGJsZWVkaW5nIGJ5IG5vdy4gQ2FsZWIgZG9lc24ndCBmaWdodDsgaGUncyB0YWtpbmcgYW5kIHRha2luZyBidXQgaGUncyBub3QgaG9sZGluZyBiYWNrLg0KDQpUaG9tYXMgZmVlbHMgQ2FsZWIncyBmaW5nZXJzIGJydXNoIGhpcyBjaGVlaywgdGhlIGVjaG8gb2Ygc29tZSBmYWludCBwaHlzaWNhbCB0b3VjaCwgYW5kIGhlIG9wZW5zIGhpcyBleWVzIHRvIHNlZSBldmVyeXRoaW5nIGFuZCBDYWxlYiBzbWlsaW5nIHNoYWtpbHkgYXQgaGltLiBDYWxlYiB3aGlzcGVycywgcmF3IGFuZCBtb3N0bHkgb3V0c2lkZSBUaG9tYXMnIG1pbmQsICJObyBtb3JlIGZlYXIuIFdlJ3JlIDxpPmdvZHM8L2k+LCBUaG9tYXMuIg0KDQoiWWVzLCIgc2F5cyBUaG9tYXMsICI8ZW0+eWVzPC9lbT4sIiBhbmQga2lzc2VzIENhbGViLCBhbmQgbG9zZXMgYWxsIGhpcyBob2xkcyBhdCBvbmNlLg0KDQpXaG9tIHRoZSBnb2RzIHdvdWxkIGRlc3Ryb3ktLTwvbGotY3V0Pg=="
"eventtime","2007-01-19 18:30:00"
"url","http://isnofable.livejournal.com/602.html"
"userid","7120"
"itemid","1"
"event",""
"eventtime","2006-10-24 21:25:00"
"url","http://isnofable.livejournal.com/385.html"
"userid","7120"
