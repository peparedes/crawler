"names","values"
"itemid","9"
"event","<lj-cut text="Here we go again....">

Heya Rakas,

I decided to give you the entire thing which has been mildly edited but the important thing is that I want you to tell me what you think about the new beginnning, not the prelude, but Jade's beginning, you'll see, and the new order of events.  I just want to know if it's too choppy or if you it's alright.  I'm far from done with this section of the book but I'm tapped out on it, I need to write new stuff.  I'm sure I'm going to add a lot to their bus ride and such and junk and stuff. I don't even want to talk about it I'm so sick of the Departure. hahahaha.

So yeah, and I decided to add in this myth I wrote as an interlude.  Read it and let me know what you think.  It explains a lot about this world.  I wrote it for an optics class. lawl.

Then, yeah, the Arrival.  Lemme know what you think.  I'm going to write a section describing their walk through the city and his house, so don't worry but yeah, I'm sick of writing up about their trip. it's time for things to get good. ;)

But yeah, the last part is at Jesse's house.  You'll see.

Not a major update, but I'm writing again. :D

-Willa


Prelude.

 Thomas Brown was a good, god-fearing man.  He lived his life as the Lord said he should.  He worked six days a week and rested on the seventh.  He followed the commandments to a T.  He always met his neighbors with good cheer, no matter his mood or feelings toward them; though the occasional ill will he tried to tidy up with prayer and penance, even if it was through gritted teeth.  Well, come to think of it, he didn’t have a lot of neighbors, didn’t really talk to anyone much.  

No one really seemed to notice Thomas.  It came with the job, of course.  One is not inclined to chit chat at a funeral, it’s really not polite.  But Thomas didn't really seem to mind.  He liked his quiet; he liked his peace.  Friends were just, unknown to Thomas Brown.  Rather like the characteristics or behaviors of a lion or gazelle.  He gets the general idea but that’s about all.  

He watched them from time to time, as he waited for one group’s arrival or departure.  He stood, always at a polite distance, away from the casket and the mourners.  He watched as they talked and cried and laughed, everything slightly bitter.  His big doe eyes caught every move, every liquid drop of expression as the visitors paid their last respects.  He watched the fear that they never noticed dart across their somber faces, flickering in their eyes like a candle in the wind before vanishing once more, sending a shiver up their spine as a short-lived farewell.  He thought it curious, that one could be so afraid of death.  Only sinners fear death, he thought, only the damned feel dread.  Thomas Brown was not afraid.  He lived his life as the Lord said he could, and that was that.

After the casket was lowered into the ground and the visitors had gone, that was when Thomas went to work.  That was when he would grab his shovel and scoop and lift and throw.  He would build up a rhythm in his head and that was his meditation.  Scoop.  Lift.  Throw.  After a while, his own voice would be thrown in as his breathing started to come in quiet gasps and huffs.  Then it went: Scoop, <i>hmph.</i>  Lift, <i>huh.</i>  Throw.  

He thought of many things as he dug and covered and uncovered and recovered the graves.  He thought of God, of his coming rewards, of the bad he had done, of his mother, of the dying summer.  All these things seemed to run through him at once, as if they were one thought.  And for all Thomas knew, they were.  He never had a running monologue, it wasn’t really in his nature to think great thoughts.  He had nothing to ponder really, the good Lord had it all laid out.  And he was doing the Lord’s work, all right.  He was helping his fellow man, he was.  He was doing all he could to clean up the damned and the damning.  It was true that he didn’t do much to try and save them before the end, it’s hard to bring salvation to people that have a tendency to not even see you let alone notice you.  But he took good care of their bodies, though.  He dug the graves and kept the grass clean cut and brought them flowers and raked the leaves.  He did a damn good job and took pride in his work, just like any other good, god-fearing man should.

But it was a particular night in October that things seemed to change for Thomas Brown.  The funeral had been a late one, taking place at around five that evening.  The sun had already begun to set and the town pastor had to recite all the readings of the ceremony by heart, the poor saint, the light being so poor and all.  It had started to get dark early that year, something that wasn’t too unusual but wasn’t too normal either.  Thomas stood below his favorite oak tree as he watched the small family weep.

Tonight’s burial had struck something deep inside of Thomas.  It was like a puncture wound, a small, piercing pain that seemed to permeate throughout his entire body.  Perhaps it struck him because for once in his life, Thomas could not condemn this girl as a sinner.  From what the pastor spoke of, Thomas had gathered that she was seventeen, a dedicated student, a good daughter, and most importantly, a good, sweet girl who loved God.   She had inky raven locks that grew in long sweeping curls that brushed the tops of her breast.  Her skin was white as the tomb she was now being placed into.  Thomas knew because he had helped the mortician prepare the body some hours before.

But now he watched from afar, gazing at the family’s mausoleum in a dazed fashion.  As the service ended he felt a tremor hit his chest.  He looked to the crowd to see the girl’s mother glance in his direction, just for a moment.   And in that moment he felt that he should say something, anything.  He clambered for the words, even though he was a good fifty feet from the woman, but they wouldn’t come.  He didn’t know how to speak to others.  He only found comfort in the caw of the cemetery crows and the quiet drawl of the mortician as he recorded his notes.  Something along the lines of “God has a place for her” or, “The Lord giveth and the lord taketh away” floated across his lips but nothing seemed right.  So he simply smiled awkwardly, raising a hand in what he thought to be like the friendly gestures he’d often observed, but by the time he’d made up his mind in response, the mother had gone, clinging to her husband in grief.

Now he stood, standing over the freshly cut roses as he traced a finger over the cold name: <b>Anna Thorngood, daughter of Mary and Lukas Thorngood.</b>  It was sad to see a child go, just on the brink of becoming a true, virtuous woman.  He sighed and turned away.  It was around midnight and time to do his nightly rounds around the headstones, just to check on things.

The cold cried bitterly as it rode upon the wind.  The trees shook in short gasps as the breeze swept its wails through their branches.  All seemed right, even as the winter threw out it’s icy fingers to start to claw it’s way to summer’s throat, even now as Thomas walked in the silence.  He could feel the earth vibrate with the warm season’s death song.  He stood a moment, closing his eyes and listening with a quiet smile playing on his lips.  He enjoyed the wind.  He could feel God in it.

However, his brow creased slightly as he listened.  There seemed to be something a little too… human about the wind’s call to the night.  The wailing seemed to be more of a sobbing, more of a hysterical, heart-wrenching cry.  He cocked his head to the side and turned slightly.  When he blinked his eyes open it was to the full moon casting it’s silver upon a row of headstones surrounding a mausoleum.

He walked cautiously around to the front of the building, his adrenaline starting to flow for the first time in his life.  He didn’t like the feeling, all of a sudden.  It had gotten a lot colder in the last few feet, and suddenly the wind seemed to stand still as the whole landscape held its breath, but still the cries remained.  Small whimpers that prodded Thomas Brown’s ears.  Desperate, choking sobs that strangled the heart.   

“Please… someone help… No, please.”  He half thought to turn around, to go back and forget these cries.  A trick of the night, that was all he was hearing.  

“No, God help me, God have mercy.  Please!”  <i>God.</i> Thought Thomas.  <i>Yes, God… God give me the strength.</i>  He turned the corner. 

A man, no a boy, was sprawled across the mausoleum’s front steps.  His head was down with his hands wrapped around his face.  Sobs wracked his body as his hair fell in messy chocolate clumps around his shoulders.  He was rocking slightly with the pain that Thomas had only seen so brief and flickering in the eyes of the people gathered at funerals.  Slowly, unsurely, he reached out a hand to touch the boy’s shoulder.  Immediately the figure fell still.

“Son, son are you okay?”  Thomas grimaced at his own stupid question.  He tried to find words but again, none came to his aid.  His jaw was left gaping in the moonlight.  The boy turned his head ever so slightly to the side, face still buried in his hands.

“Tell me, what does this say? This grave before me, what does it read?”  Thomas looked up at the name he had traced with his own hand not hours before.

“Son, is there anyone I can send for?  Any home that I can get you to?”

“What does it say!”  Thomas grimaced.

“A-Anna T-Thorngood. That’s what it-“  

”NO!”  The boy turned around and in a fast movement had Thomas pinned against the mausoleum door.  His hands were now digging into Thomas Brown’s shoulders, no longer hiding the face before him.  The caretaker felt the bile rise to his lips before he could even look away from the gaping holes where the boy’s eyes should have been.

“She’s not dead!”  The boy shouted.  Nausea hit the god-fearing man in waves as he started to vomit, but still the boy would not let him go.

“She’s not dead!”  Thomas Brown’s big doe eyes rolled back into his head as he was shaken, thrown against the wall.  He could not open his eyes, he would not face this monster.

“She’s not dead!”  The boy screamed.  “She’s not, do you hear me? She’s not dead!”  Rolling swirls of black seemed to cover Thomas like a blanket as he started to lose consciousness.  He muttered words and mumbled his prayers as he let the darkness envelop him.

“She’s not dead! She’s not dead!”

<i>Our Father, who art in heaven,</i>

“Liar!”

<i>Hallowed be thy name, 
thy kingdom come, thy will be done</i>

“She’s not dead!”

He let his body fall into the downy warmth of night, smiling.

<i>On Earth, as it is in heaven.</i>
 



the Departure.


There was once a girl who spoke in quotes.  Or, well, if she wasn't it always sounded like that any way.  When she was little, she was made to stay inside.  Dirty things like sticks and grass were not for ladies like herself.  She didn't mind much, really.  There were never any children around where she lived.  She liked it much better in her room.  She liked the silence, with the shades drawn low and a candle pouring it's light over the newest, oh whatever she was reading.  She found her comfort in those words, relating so closely to the characters that she'd forget that they didn't exist.  She'd imagine what they were doing, right before she fell asleep at night.  She'd wonder where Holden was, and Tyler too.  She'd think of Tar and his girlfriend, because no matter the ending she still loved them together - even with the drugs.  And sometimes, she'd even think of Shadow but she never told any one that.  When the books were finished, she missed them like friends in a way she could never explain.  She would try to reread the stories but it always felt like looking at a photo album from long ago.

As the years passed, she grew into a fine young lady, everything her parents dreamed.  But they had never prepared themselves for her to ever meet <i>him.</i>

She fell in love with hands that could speak, hands that knew her. Hands that whispered her fear away in the night with a chord and a prayer. She had always loved him. She had always been waiting for that moment when he stood, awkward and unknowing, asking permission to know her name. She remembered the blush that was barely contained, lurking beneath the surface of her skin and just longing to escape. That was the first time that she felt her heart breathe.  
<i>The air was warm and dry against her skin as they sped past the quiet streets.  She felt the music surround her as the car jolted forward.  She giggled wildly as he pushed the pedal to the floor, faster, faster.  She could feel the hum of the bass and the heat of the cigarette smoldering between her fingers.  She sucked down a drag.

Faster, faster.

She was sure that they would crash.

Let the world melt into scenery.

C’mon, just a little faster.  

She trusted him.  He would never let anything hurt her.</i>

Their love had been a dream that the whole world lay witness to.
   
<i>She lay on her back, head resting near his thigh.  He looked down at her, running a hand through her silk locks which spilled over the bed's edge.  A small smile pulled at his lips.  

"You know I really do love you, right?"</i>

 She woke to the sunshine bathing her in pure warmth. The pillows were soft and inviting as she nuzzled into them, trying to wish the day away. Perhaps a part of her thought that if she dragged her heels long enough, time itself would slow for her. With squinting eyes that had not yet opened, she reached for him. Her fingertips were met with nothing but the vacant cold of a bed unused.  Her crystal eyes snapped opened at the feeling. She took in a sharp breath.  

“No, not now.” It was barely a whisper. 

In an instant her legs had swung her upright as she paused in anticipation of a noise, or some other sign that she was anything but alone. The only sound that reached her was the steady drip of a loose faucet, like some relative clock keeping no time at all but had a steady pulse nonetheless.

  Her feet hit the floor with a cold gasp and a shiver running down her spine. She moved quickly from room to room, calling for him though she knew he wouldn’t answer. She returned to the bedroom, noticing that she had overlooked one room. Drip, drip. She swallowed harshly.

  <i>“Close your eyes.” He had come up so suddenly behind her that it made her knees shake. She could feel his heat against her back as he wrapped his arms around her. She smiled softly.

  “Alright, but what for?” She heard the rustle of fabric as he searched for something in his pocket.

  “Ssh, it’s a surprise. You’re sure they’re closed?” She giggled in excitement.  

“Yes, yes! Now what is it?” His arms left her in a momentary cold as he let a warm leather cord rest around her neck.  

“Now open.” Immediately her hand flew to rest against the cold silver pendant, her breath catching in her throat as she realized what she held.

  “Oh, Jared. You can’t give me this!” She turned to face him as a smirk quickly covered his quiet lips. It was his turn to take the silver dragon between his fingers, caressing it slightly.  

“Valo and I made a deal now, so don’t you worry. He said he’d look after you, protect you when I can’t.” Confusion clouded her eyes, drawing her brows together.

  “Why wouldn’t you be able to protect me?” His smile tried to be reassuring.

  “Well, forever seems so relative these days. I just want you to be safe if I ever have to leave you.”</i>

  A light illuminated the edges of the thin wooden door that led to the bathroom. Time had finally seemed to slow to a halt as her careful steps outweighed her heart. She already knew what lay beyond that door.

  <i>“But, you said you’d never leave.” She tried to read his eyes as he gazed out over the water. They had grown up on this lake. Countless promises and dreams had been whispered across these waters, and now was no exception.</i>

  It was the blood that made her scream. It seemed to take on a life of its own once freed from its mortal captivity.
 
<i>He skipped a rock across the smooth glass of the water’s surface. The sun was setting now, and its colors seemed to find a home on the horizon’s edge. They were waiting in anticipation of an event that she didn’t know was taking place.  

“Jared?” He sighed but did not answer.</i>  

If she could’ve felt her hands, she would’ve realized how badly they’d begun to shake. They flew to her mouth to suppress her sobs as her knees gave way to rest her on the cold tile floor.

  <i>“We’re not kids anymore, Jade. I can’t make promises like that.” He moved to hold her. At first she tried to pull away but then she realized that there was no where to go, no where else she’d rather be.</i>

  His eyes were vacant and unseeing. Her lungs couldn’t handle the drowning gasps that made her entire body shudder.  

<i>“I will never want to leave you. But if I have to, I will. This way…” He fingered the snarling dragon now warming to her skin.

 “This way you know I’ll always come back, if only to get Valo.” He let a grin slide across his face.</i>  

He left her his heart safety-pinned to a note. “It was yours to begin with.”

  <i>“It’ll always be you, Jadie. I’ll never leave you, not completely.”</i> 

She fell in love with hands that could speak, but so much gets lost in translation.

 “9-1-1, what’s your emergency?”







She knew that it had been a mistake.  It was some sort of mix-up.  Jared was not one to take a knife to his wrists.  She refused to believe in such a stale form of abandonment.  A mistake, simply a mistake.  That’s what she repeated to herself as she walked along the streets of suburbia.  She felt pulled, as if by a magnet, walking a straight line to a memory.  She blinked up into the fake glare of the convenience store, gasping at the light.  Blinking, she stopped walking and closed her eyes.
	
The sounds of the waking reality surrounding her seemed to fade as she felt the electric pull swell to a dull throb in her chest.  Her eyes snapped open, staring down a row of houses.  The cemetery.  Of course.  She picked her way along a sidewalk, mistrustful of the trees surrounding her.  A tainted excitement captured her as she drew closer to the wrought iron gates.  She stared through the bars at the small clusters of graves that lay inside the old stone wall.  Her eyes snapped shut.

<i>“C’mon, raven girl.”  He called to her from the other side. “This place is right up your ally.”

“Jar, c’mon stop it.  Let’s go home.”  He paused in his smirk.

“What’s a’ matter, Jadie?”  He was crouched on top of the stone wall, eyeing her with those hawk sharp blues.  “You feel something?”  She blushed as he acknowledged her sense, feeling her self-consciousness envelop her.

“It just gives me the creeps, is all.”  The grin returned.

“Of course it does, Jadie my girl.  It’s a cemetery, it’s supposed to.”</i>

She felt a shiver run down her spine.  She could hear his voice as if he were standing on the stone wall, just as clear as then.  Those eyes burning into her in a way only he knew how.

“Jadie, help me.”  Her fists clenched.

“No.”  Her breathing became labored.  The air was thick, she felt like she was drowning in it.

“Jadie, please.  He’s here, Jadie.”

“You’re just a memory!”  Birds took flight at her shouting.  Whatever had held her, released her.  Her lungs let go into gasps as she struggled for air.  She collapsed to her knees.  Slowly, she looked up.  Then, immediately she understood.  She felt it just as Jared must have felt it.  She could feel his voice in her ear as she said his words out loud.

“The corner.”

The cemetery was a simple one.  It had been built and filled during the days of America’s birth.  The stones were all washed smooth of their original inscriptions.  Now only the nameless lay sleeping.  It was small, no more than a city block squared.  Trees grew old and ancient around it’s borders but no more than a leaf grew over the border of the stone wall that framed it.  One side of the cemetery was lined with a winding country road, while the rest led down into the woods.  The gate lay in a corner near the road, the highest point of a hill that sloped downward into the trees.  There, at the bottom of the hill, that’s where the corner lay.

<i>“What’s back there, Jades?”  She followed his gaze and felt a strange pull.  She bit her lip.

“Nothing good.”  She replied but he was not discouraged.

“C’mon, let’s explore before it gets too dark to see.”  She followed his stare towards the setting sun.

“No, Jared, please.  Let’s go back.”  His back was to her now.

“Aw, c’mon Jadie.  Just a quick look.”</i>

“No!”  She understood now.  She could feel the cold crawl of the sun setting.  She held her ground as she felt the cemetery waken.  As she stood on the outside of the stone wall, she watched the grave yard within darken as the wind rose to a steady howl.

“What have you done with him?”  She demanded.  The wind picked up a pile of leaves and hurled them at her, but as they reached the wall they were pushed up with another gust which forced them into the trees.

“You took him from me!”  There was a sob in her voice as she shouted herself hoarse, knowing a grief so deep that it’s existence lay just beyond the grasp of acknowledgement.

“Jared, you coward!  There’s a reason I’m here!  What did you leave for me to find?!”  A low growl and the snapping of teeth were all her response.  Her eyes were drawn to the source of the sound, a great hulking shape, a shadow in the corner.

“Jadie! Jadie!”  The voice was weaker now.  A sharp caw from above her caught her eye and when she looked back to the corner, it was empty.  But she knew better, whatever was there had not gone, at least not completely.  She looked back to the crow which had made a roost of the cold iron gate.  Suddenly her anger rose, becoming sharp and pointed.

“What <i>the fuck</i> is going on here?!  Am I supposed to understand this?”  She half expected the bird to answer her.  Instead it just tilted its head, spreading his wings wildly as he ascended.  She threw her hands to her side.

“I wish I would just fucking wake up.  It’s just a dream, just a dream.”  But she knew it wasn’t.  Her time with Jared, that was the dream.  This was the reality of it all.  As she turned to leave, she noticed the feather by the gates.  It was torn into jagged threads, no longer the smooth thing of flight.  It was then that she knew what had to be done.  It was time to find answers and the answers lived in the city.  She picked up the feather, letting it find a home between her thumb and forefinger.  She tucked it in her hair and started her walk to the bus station.  It was time to leave. 







 <i>Tell me, do you love me? He looked at her, confused.  

Of course I do, you’re my best fucking friend.</i>

  Her eyes snapped open. All she could hear was her breathing and the droning buzz of the milling people in the bus station. Her lungs shuddered with sharp gasps, as if she was just learning how to breathe. Her body was shaking. The only feeling that reached her was the hard cool of the bathroom tiles that were pressed up against her skin, leaving sharp impressions. She stared down at the floor surrounding her, looking at the broken glass smiling back up at her. Slowly she got to her feet, wavering slightly. She hadn’t been eating much. Hunger just seemed like such a passing fancy these days.  

She gathered up her things, tucking them away in a beat up leather back pack. Her eyes fell upon the small cotton heart stitched with safety pins. But as her fingers reached out to touch it they fell short, recoiling at the thought. Now was not the time.  She slipped her hand into her pocket, fingering the weathered notes. With the money carefully held between thumb and forefinger, she moved her way to the ticket counter. Her eyes shifted uneasily around her as her whole body bristled in defense. A line was already formed in front of her.

  “Next.” She shuffled a step forward.  

“Bus 2317 to New York, now boarding.” She started to find a beat in the words.

  “Next.” Shuffle step.

  “Will the owner of a black Honda, license plate number-“ Tap, tap.

  “Next.” Shuffle step.

  “9-7-8-4-1-“ Tap.  

“Next.”

  “-2-5”

  “Next.”  

“Bus 1056 arriving from-“  

“Next!” Startled blue eyes shot up to the counter.  

“Yes, you dear! I can help you over here.”   

<i>“I wish I had a camera right now.” She looked at him in the mirror, giggling slightly from the drugs.

  “And why’s that?” Their eyes met as he finished washing the scent of weed and nicotine from his finger tips. She was leaning against the doorway to the bathroom, raven bangs brushing past her lips.  

“Because it would just… be a really nice picture. Right now, this moment.” He smiled through a slight blush. “You look really beautiful.”</i>  

“You goin’ to the city?” She looked up into a mess of aviators and coffee curls, held together by a smile. She tipped her head forward almost unconsciously, spilling ink locks around her eyes. The boy standing over her smiled apologetically.

  “I got lonely sitting all the way over there, all by myself.” He sat down next to her without asking to. His posture was that of comfort, though she could hardly imagine why. The whole encounter screamed awkward. Then again, she’d never been much for people. He turned to her once more.

  “You a runner?” She raised an eyebrow.  He clarified.

“A run-away, I mean.” She looked down, picking at her nails.    

“I don’t have much to run from.” She paused. “Just leaving, is all.” She looked up in surprise at her own words, only to find another smile shining her way.  

“So she does have a voice, well look at that!” Her lips pursed slightly.

  “Well, you did ask a question, didn’t you? What did you expect?” It was the first time she’d seen his smile waver.  

“Aw, c’mon now. Don’t be like that. Why, you’re the first person who’s talked to me in days. I didn’t mean nothin’ by it, honest. I’m a runner myself. Name’s Jesse but most people just settle for JC, then again you’re not like most people, are you?” She scoffed slightly.  

“No, I guess not.” They fell silent once more, until she surprised both of them.  

“What are you running from, Jesse?” The smile was back, even if it was a little bitter.  

“Love.” She turned to him, confused.  

“But why would you-“

  ”Bus 2119, now boarding.” He smiled.

  “That’s us.” 

She sat for a moment, watching him as he got to his feet. He walked a few feet to where he had originally sat, picking up a hard guitar case and a canvas messenger bag that was covered in sharpie art. After taking a silent inventory of her belongings, she rose as well and followed him outside the terminal.

  As she stepped out into the frosted twilight, a sharp caw caught her ear. She looked to the solitary oak tree planted next to the terminal in hopes of bringing a breath of life to the cold concrete. A massive crow sat perched in one of the lower branches, his eyes on her. She shivered at the contact, finding it oddly invasive. Even then she still returned it’s steely gaze, until she was shuffled along with the crowd boarding the bus.

  She looked at her fellow passengers as she boarded. They all seemed dull, lifeless. It was almost like that had been worn down so much that they had lost any warmth or trace of what being human was really about. She was immediately repulsed by her own hypocrisy, but couldn’t help noticing how different Jesse was as he waved to her from his seat. He spoke as she drew closer.  

“I got you a seat by the window. You seem like a window kinda girl. Was I right?” She almost smiled.

  “Yeah, I am.” His smile broadened.

  “Ah, y’see? I knew it. A girl after my own heart. Myself, I-“ But she lost track of his ramblings as her eyes caught sight of the men rushing into the bathroom she had recently lay victim to. As she watched them work, a slight pang of guilt pulled at her chest. She really hadn’t meant to break the mirror. She hissed slightly as her wrists began to ache. Jesse stopped mid-babble.  

“Hey now, what’s this?” He caught her hand in hers, turning it over to inspect it. She pulled back sharply.  

“Nothing.” She sputtered. It was his turn to raise an eyebrow.  

“I’m fine, really. What were you saying?"



 As the hours passed, her body finally gave way to sleep.  Being on constant guard had sent her energy hurtling past empty and now, at the first feeling of even the slightest sense of safety, she gave in.  

Somewhere inside of him, Jesse could feel the tension building. It was a mixture of nervous excitement and a thick foreboding. He ran his skinny fingers through the matted curls that fell around his shoulders. He moved slowly and carefully as to not wake the girl resting on his shoulder. He bit his lip slightly and moved to rest his arm around her fragile shoulders. He felt his expression pull together in a look of vague concern at her small frame. It seemed that she would break if the wind blew too hard. As she leaned in to him, he finally felt his smile reach his heart. The foreboding and excitement battled for control, each seeming to rise and fall in the most destructive synchronization.  

The night passed like water in a stream. Thick forests blurred and shrank until they found themselves racing along fields and farmhouses. Jesse let himself doze, but not completely and never for very long. At some point rain had started to beat down against the windshield, creating a rhythm that hummed along with the beat of the wipers. At another, a thin hand had snaked its way around him. Jesse examined it now, surprised at the surge of protection that overcame his body. His limbs shook with the feeling. It scared him, in a way.

<i>Sunsets and twilights bring tears to your eyes
 And a hope that seemed so solid starts to wane
 Look out over the sky as all of heaven lay beneath you 
Tell me do you question your father now?  
Words without meaning complete the puzzle 
Holding hands high as the water breaks
 Give me a notion of the peace at hand
 Tell me your sins, at least for a while
 What jealousy lies within
 As the daylight drops to dusk
 Only to return again  In a new and everlasting light 
This is the word 
But its meaning is beyond reach of pure definition
 For to know is to own as the power comes from within
 Open up your heart and hear me, little sheep.
 I love you yet you know not my name
 I guide you yet you know not my face 
I hold you yet you know not my warmth
 I know you yet you close your eyes and turn away
 Little sheep, you are mine as you always have been
 You hear me I am your reason
 Somewhere in your heart I dwell 
Hear me, before it’s too late.</i>  

She gasped as she came to her senses, hands trembling as she grasped whatever lay near.  

“Whoa, little one.” She flinched as she gazed up into his soft smile, realizing just how close they’d become.

  “I, I’m sorry.” She pulled down her sleeves and began to wipe the collecting tears from her eyes as her cheeks burned in shame. She turned into his chest, not knowing where else to hide. His arms tightened around her as he felt a warm wet soak through the thin cotton of his t-shirt. Not knowing what else to do, he began to sing.  

“I know you, stranger
 In the past you like to hide
 Listen to the raven’s song
 As he spills his heart tonight
 And in the darkness growing
 Your thoughts you like to sigh 
A whisper never knowing
 All of your unspoken lies
  And as the thunder breaks upon us 
You brace yourself for night
 And as the raven’s song starts growing
 You feel your heart divide
The rapture is upon us 
Though it may not be what you think 
Your heart you lay upon it
 As you down another drink 
And in the growing silence
 You hear the world sigh
 Send your life upon us 
As we watch the world die  

Oh baby, please don’t cry
 The end is in sight 
Oh darling, let’s watch the world sigh
 As the raven sings his song tonight
  We live, we live
 If only in our minds 
We take, we take
 Only enough to get by
 We love, we love
 Even though we know 
It does nothing but cause our demise.”

  She hadn’t even noticed the calming of her own breath as his voice died to a whisper. She could feel his lips breathe the last of his words, the only evidence of them a memory and the ghost of goosebumps crawling across her skin. She pulled in a sharp breath as she suddenly realized how he smelled. It seemed familiar yet stale. She buried the thought, suffocating it with guilt and remorse.

<i>“Am I in there?”  He asked.  She smiled slowly, as if she liked the way it tasted.

“You know you are.” He eyed the small book held tightly in her hands before looking her in the eye, smirking slightly.  She loved that smile.

“Show me.”</i>

Suddenly they were jerked to a stop, they were no where that she recognized.  She looked up into the hope of Jesse’s smile.  He gave her a squeeze before pulling away.

“We’re here.”












Interlude
"Brothers"


Once upon a time there was peace in the world.  There was only one tribe of man which covered one portion of the earth, and they had no reason to quarrel.  They lived simply, loved simply, and died simply.  They also worshipped simply, giving thanks and praise to Sun.  Sun made their forests rich and the animals they hunted bountiful.  The men prospered.

In the realm of the gods, life was also simple.  There was Sun and there was Night.  Sun looked down upon the men with a kind and warm eye while Night scoffed and bristled at their every move.  Soon the realm of the gods became uneasy, thick tension smothering the sky.  One twilight, when Sun and Night met together to converse, Night started to speak.

“Disgusting men, gorging men, filthy men.  Look at them stuff their faces!  They become fat and sluggish, and yet you still favor them like your children!”  Sun turned to watch the men’s fires.  He sighed at his brother’s tone.

“Why do you hate them so?”  Night scoffed and pulled his hood further down, sneering at the edges of his cloak that had started to fade from midnight black to a deep violet.

“Hate them, no.  I just… they’re just disgusting.  That’s all.”  Sun smirked.

“Jealous are we?”

“Jealous?!  How dare you <i>dream</i> such a thing, brother?  What should <i>I</i> be <i>jealous</i> of?”  Sun had always been a proud one, he began to boast.

“Of how they worship me, give sacrifice to me, praise me, <i>adore</i> me.”    Night bristled.

“I need no worship to know my strength and power.  You are weak without them.”  Sun laughed.

“Yes, yes, brother.  Of course that is the answer.”  The viewed each other as they sat for the second time that day in complete equality.  Sun sighed with a quiet smile.

“Until sunrise then, brother.”  Night was quiet for a moment before a slow smile spread throughout him.

“Yes, until then.”  That was when Night released his hounds for the first time.


The men who sat around their fires did not know fear.  They did not understand why all of a sudden their bodies seemed to freeze and yet their heart pounded so loudly that it drowned out the bull frog’s steady groan.  They quivered as they saw shapes move and change, shadows dancing around the fire.  They flitted from the edge of light to the shadows of the flames dancing on each other’s faces.  They pointed and stared and gaped.  But those were the lucky ones.  Those not by the burning light were Night’s first victims.

By Sun’s awakening the men were exhausted from the adrenaline rush they had never felt before, save when hunting.  They called to Sun and cried and pleaded with him to tell them what they did to anger him so.

“It was not me!”  He answered.  “I favor still those who worship me!”

When they were both at their equal Sun called to Night.

“Brother!”

“<i>Brother.</i>”  Mimicked Night.

“What have you done?!”  He smiled.

“I’ve let my children play with your children.  Don’t they both deserve the earth?  Gaia does not scorn a race, she loves all.”

“Keep our mother out of this!  This is our battle, you have no right!”  Night smiled even more.

“Our battle indeed, my brother.”

Soon Sun became angry and reached out his hand and slashed at Night, ripping a hole through his hood and making him cry out in pain.

“How dare you hurt my people!  Now I shall always have a hole through which to watch and keep them safe.  I name her Moon.  She will always keep your wolves at bay.  Now you terrorize no one but those who slink away to caves and deep waters.  Go, take shelter from my light.  My power grows as the day strengthens.  Leave and always remember that I am stronger.  You have been scarred.  Do not forget your place, my brother.”  And Sun pushed rather than allowed Night to go of his own accord.  

And, since then it is a battle for one to control the other.  They are of equal strength, for Night now has many children that love him, but no longer can he hurt Sun’s people.  Sun is always watching.





the Arrival.


Dawn had just begun to break over the city.  Stars were still barely visible as they faded into the colors of morning.  The air was crisp and cool on her face as she stepped of the bus, still trying to shake the soreness of traveling from her legs.  It had been a long journey, but they'd finally made it.

"I know a place,"  Jesse started.  "If you need somewhere to stay."  She looked at him.

"How do you know I'm not waiting to be picked up?"  He laughed.

"You haven't been looking for anyone since we arrived and you wouldn't be this defensive if you knew someone was waiting in the wings to jump in and rescue you."  She scoffed.

"Save me? From what? You?"  He cocked an eyebrow.

"Oh? Safe little Jesse, am I?"  He took her hand -

"For all you know," -and placed it on his hip. "I could be the most feared guy in town."  She didn't know much about weapons, but she knew a six-gun when she felt one.  Still, she smiled.

"But you're not.  So where's this place of yours? I'm exhausted."  He started to walk and she followed, fooling even herself with her own bluff.


"The trees here, they seem to breathe, don't they?"  




She sat on the edge of another nicotine night.  She watched the fading moonlight and his breathing as she swallowed another drag.  She could feel him watching her, even though she knew his secret.  He wasn't watching her with his eyes.  His whole body was studying her.  She exhaled and flicked the growing ash.  The silence was short-lived, as it always was around Jesse, but his voice no longer echoed his hope and happiness.  His tone was one of a more serious fashion as he spoke.

"What are you looking for, Jade?"  She flicked her sharp emeralds over him but said nothing.  He continued.

"Because, you're not running and no one just goes to the city.  No one met you at the bus stop, so that must mean you're looking."  He waited for her to respond.  She felt a shiver run through her.

"Jesse, did you know I'm terrified of wolves?"

"Oh?"  She paused.

"Not the real kind, mind you... the kind that slip through the door, the kind that bring the darkness."

"I know."  She looked up, surprised at his small grin.  She found nothing funny but she had a feeling that neither did he.  It was comforting, in a way.

"I'm sorry I always talk like that,  like I'm a prophet."  He pulled the cigarette from her fingers, inhaling slowly before letting his words spill out with his exhale.

"Maybe you are."  She sighed.

"Maybe I was."

"What's the difference?"

"The wolves.  They see you when you're dead."  He laughed humorlessly.

"Or do we just see them?  Anyways, who said we're dead?"

"Who says we aren't?"  She watched her fingers as they deftly flicked out her cigarette.  There was a pause but she broke it.

"Answers, Jesse."  He lifted his head at the sound of her voice.  She rose to her feet and put a hand on his shoulder.  He leaned in to her touch.

"I'm looking answers.  That's all."  And then she was gone.

He sat for a while and thought of many things.  He thought until he started to remember.  It was when he remembered her that he started to feel.  This girl, this Jade, the more time he spent around her the more he remembered.  He didn't like to remember.  He liked to forget, to pretend.  He even pretended that he could see, to the point where no one could say he couldn't.

A long howl reached his ears and sent the wind racing through his heart, chilling his veins.  He swallowed a bit his lip slightly before realizing where he was.  He closed the window and slid the heavy metal lock across the paned glass.

"Not tonight, Wolf."  He knew the wolf would get him, in the end.  But, for now he was safe, and so was she."
"eventtime","2008-06-16 13:01:00"
"url","http://nicotine-pmgrnt.livejournal.com/2420.html"
"userid","10964"
